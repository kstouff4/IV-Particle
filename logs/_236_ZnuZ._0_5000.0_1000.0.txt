Thu Feb 2 04:25:45 EST 2023
| ID | GPU | MEM |
------------------
|  0 |  0% |  0% |
|  1 |  0% |  0% |
numbers of X: 53207122
numbers of Z: 33096
shape of features
(33096,)
shape of features
(33096,)
ZX	Vol	Parts	Cubes	Eps
Z	0.02490928598994948	33096	33.096	0.0909624027628945
X	0.0212596514568619	857	0.857	0.29164762181918863
X	0.022316634548690626	27370	27.37	0.09342246052728766
X	0.024722740620747356	6096	6.096	0.159471795763488
X	0.0224750407730874	9921	9.921	0.1313353632333438
X	0.024636209470456586	74344	74.344	0.06920051416352391
X	0.022570892615608525	78767	78.767	0.06592773314527486
X	0.021627618235411972	56803	56.803	0.07247904693015084
X	0.021673121217218455	57007	57.007	0.07244322198078183
X	0.021674222602913733	13069	13.069	0.11836784033555511
X	0.02164127884417698	37776	37.776	0.08305306233105597
X	0.021566322291221254	8044	8.044	0.13892103482763754
X	0.02157947451807698	81639	81.639	0.06417724397893687
X	0.02163764634918972	13987	13.987	0.11565430801564137
X	0.021757064174731475	429301	429.301	0.037006623714609575
X	0.02164649440248927	35192	35.192	0.08504482167200333
X	0.021659000893399952	91528	91.528	0.06185310162341044
X	0.021673761738080544	95671	95.671	0.06096089396571771
X	0.02163671054678895	39150	39.15	0.08206408966882166
X	0.02181212747048949	221183	221.183	0.04620072182878104
X	0.021675564362052972	129074	129.074	0.055170960933715846
X	0.0215787749816311	55036	55.036	0.07319138658312382
X	0.023367655469936764	409743	409.743	0.03849176857266314
X	0.02164911603684983	16582	16.582	0.10929519916236088
X	0.02264486059973399	38499	38.499	0.08378637493902157
X	0.020969873993468488	10697	10.697	0.12515396364701345
X	0.02170160290610695	87462	87.462	0.0628382578677077
X	0.021715495052718085	55976	55.976	0.0729327559063486
X	0.02160615328945252	10426	10.426	0.1274930695627303
X	0.021522172120997395	47935	47.935	0.07657337505667186
X	0.02433227103129513	2144579	2144.579	0.022470541181108285
X	0.021632379240577367	14624	14.624	0.11394082767320092
X	0.024605758509676477	700084	700.084	0.032756352425885746
X	0.02159896508288164	18308	18.308	0.10566488374190967
X	0.021700353859935722	14194	14.194	0.1152004047520345
X	0.021675658117301048	39853	39.853	0.08162761192303616
X	0.02425912217996007	218468	218.468	0.0480650150877297
X	0.022549420877173144	138536	138.536	0.054599782946484154
X	0.021531649368170647	2323	2.323	0.21005967846406734
X	0.022433695398586768	7420	7.42	0.14459911597004171
X	0.021525056003001503	4360	4.36	0.17027567095844057
X	0.02253625747086648	5768	5.768	0.15750179753482552
X	0.02091482273553047	1026	1.026	0.27317163944302103
X	0.02071605295946134	779	0.779	0.2984854631640018
X	0.021139477443170077	5029	5.029	0.16138786288248178
X	0.021313433179989245	645	0.645	0.3208961936629163
X	0.021582259234223855	755	0.755	0.30576186429421875
X	0.02146535495886807	4026	4.026	0.1746980676831809
X	0.021535426455145997	4115	4.115	0.1736179186640217
X	0.02157552298732098	4864	4.864	0.16430694539687998
X	0.02160304605933592	20220	20.22	0.10222990254344758
X	0.02159613769946739	19617	19.617	0.10325581016781112
X	0.02140671588095101	3526	3.526	0.1824270543627859
X	0.021633971764132322	3583	3.583	0.18209435532050877
X	0.021463410790654523	2705	2.705	0.1994544924828535
X	0.022463495116961985	10046	10.046	0.13076596363987011
X	0.021587540948620507	15164	15.164	0.11249411399329415
X	0.02143577389966429	2914	2.914	0.19448369930747128
X	0.02154543415442458	6549	6.549	0.14872823353595324
X	0.021596778648600733	2568	2.568	0.2033595876366641
X	0.021148904808450872	3250	3.25	0.18669592575413252
X	0.021568709092786274	11234	11.234	0.12428820364330352
X	0.02140440878497913	1448	1.448	0.2454209078228767
X	0.02236059077556975	21961	21.961	0.10060287388292395
X	0.021563306618373915	9827	9.827	0.1299465640722033
X	0.021601995454177857	2204	2.204	0.2140067278498149
X	0.02150636492629625	3226	3.226	0.1882063255843648
X	0.021365085719742334	1968	1.968	0.22142492954940995
X	0.021344486111429205	4582	4.582	0.1670104089468627
X	0.02155184740548822	4759	4.759	0.16544599792710085
X	0.021573626574314525	3435	3.435	0.18450103434621448
X	0.021551509276695968	8653	8.653	0.13555129218824974
X	0.021469460325750263	4204	4.204	0.17220779534565736
X	0.02157808105480441	3288	3.288	0.1872234902142831
X	0.021433276855052155	3429	3.429	0.1842073816880969
X	0.021548090721425273	4677	4.677	0.16639763209327962
X	0.02157759629681338	5812	5.812	0.1548433240925006
X	0.020992223173633417	816	0.816	0.29520435402295414
X	0.021306928019160516	1028	1.028	0.27468982626855654
X	0.02144610515598665	4507	4.507	0.168197792261462
X	0.02393438948332586	23551	23.551	0.10053971902484933
X	0.020999061588957767	2220	2.22	0.2114863316976489
X	0.021015967552578143	1327	1.327	0.25112666091710895
X	0.024631078109208324	10271	10.271	0.13385159912678335
X	0.02129548954040496	1439	1.439	0.24551363217351996
X	0.02139194640625778	2336	2.336	0.20921484057922152
X	0.021521547859687826	1944	1.944	0.2228738323348221
X	0.021425126373447224	2645	2.645	0.2008318421808892
X	0.021434960189149775	735	0.735	0.30780696828971343
X	0.02155573661937907	7584	7.584	0.14165160989642883
X	0.02150952368084049	3970	3.97	0.17563595594370346
X	0.02134229182200755	4016	4.016	0.17450817763096704
X	0.021470560096455506	1381	1.381	0.24958389907298895
X	0.021360394200588627	1272	1.272	0.25607905037747636
X	0.021545729560456597	6311	6.311	0.15057550950839044
X	0.0214256890471923	6562	6.562	0.14835408997080388
X	0.022816418101096164	6796	6.796	0.14973777152195109
X	0.0223111677647241	8601	8.601	0.13740138741559035
X	0.021619897255810008	13289	13.289	0.11761257940966646
X	0.0215943195887337	16379	16.379	0.10965220782401078
X	0.021679310335281667	5844	5.844	0.15480265977432164
X	0.021630999714795283	12739	12.739	0.11930182428279473
X	0.021565538617705996	5501	5.501	0.15767864825728128
X	0.02149301467336396	3651	3.651	0.18056289146237026
X	0.021233421847936067	2688	2.688	0.19915761092717366
X	0.02153423199492108	7649	7.649	0.14120223649425542
X	0.021598420462588638	2687	2.687	0.20031713877508395
X	0.02153100894099706	4214	4.214	0.17223574318644538
X	0.021202855025643598	471	0.471	0.3557332653979738
X	0.021617462288348235	2244	2.244	0.2127782760204178
X	0.021397944987535618	1553	1.553	0.2397361557406098
X	0.021571577994577366	3001	3.001	0.19299170371484803
X	0.021325874122713778	3414	3.414	0.18416811437413547
X	0.021450794797613724	4013	4.013	0.17484695614098555
X	0.021579401061155364	4333	4.333	0.17077209220745987
X	0.02228231227437158	5036	5.036	0.16416913564991414
X	0.021359252764998032	3272	3.272	0.18689208971257076
X	0.02140953187628315	2602	2.602	0.2018830976097488
X	0.021314547408780134	840	0.84	0.2938544530820781
X	0.022031537483866045	11742	11.742	0.12333913828697837
X	0.020858922620752073	648	0.648	0.31810631376164566
X	0.021544402174584837	14843	14.843	0.11322376354903083
X	0.02065500247471729	1662	1.662	0.23163174412064846
X	0.021534956657025817	2295	2.295	0.2109212990105852
X	0.02160498114011113	3161	3.161	0.18977680549408774
X	0.02151612290608997	1990	1.99	0.22112455911360201
X	0.02148211359345834	4002	4.002	0.17509213625656855
X	0.02153459283696909	967	0.967	0.2813433991512179
X	0.02147784573031994	4670	4.67	0.16629962861999595
X	0.02409326540662154	23413	23.413	0.10095926957947217
X	0.021457434644350543	4088	4.088	0.1737890078079211
X	0.021591094088166264	17414	17.414	0.10742994909452613
X	0.021349315715014885	2744	2.744	0.19815268016420173
X	0.021502379176450023	6328	6.328	0.15033958549475182
X	0.02124126435066031	1786	1.786	0.2282616591977589
X	0.021576830618296173	3996	3.996	0.17543681095499564
X	0.02144465788713338	2394	2.394	0.2076817455637212
X	0.021367962070850392	1946	1.946	0.22226619904302405
X	0.021555590800359358	3534	3.534	0.1827109020774321
X	0.02127660111774314	1917	1.917	0.22306257583796182
X	0.02149830777205762	1570	1.57	0.23924059537616063
X	0.021368636475486123	3678	3.678	0.17977185316001318
X	0.02063241703323672	877	0.877	0.286538844146435
X	0.022451441346105345	12624	12.624	0.1211571588317224
X	0.02164046459767599	18090	18.09	0.10615554178503978
X	0.024597132798162374	18630	18.63	0.10970435717791396
X	0.021454337887737714	2071	2.071	0.2179942335867664
X	0.021562209656479887	3155	3.155	0.18977163543020784
X	0.022194122393718093	2014	2.014	0.22253218737072095
X	0.02156891141947572	1701	1.701	0.2331889522491639
X	0.02158812943988017	3052	3.052	0.19195974368420288
X	0.021082616570952638	2293	2.293	0.2094949146397892
X	0.023733745546555475	13596	13.596	0.12040699245872251
X	0.02155757830862798	4714	4.714	0.1659854924976536
X	0.021538066547460457	14489	14.489	0.11412727137837025
X	0.021633365089343787	5860	5.86	0.15455230547056859
X	0.023631156055409268	24116	24.116	0.09932530279091702
X	0.021489365882104178	2578	2.578	0.20275904130390632
X	0.021521636371660324	2652	2.652	0.2009558205965613
X	0.02160449426790227	4328	4.328	0.17090402229623505
X	0.021214766775095838	723	0.723	0.30843713101661696
X	0.023578697542562595	11479	11.479	0.1271174733072633
X	0.021431039400116324	1296	1.296	0.2547687039340063
X	0.021611551940039758	7076	7.076	0.14508840628467007
X	0.02089674699972255	1379	1.379	0.24745988465941654
X	0.021284870514143524	3789	3.789	0.17776604181448183
X	0.021388800348487412	2969	2.969	0.1931340034436245
X	0.02158421826305417	2134	2.134	0.21626220977099275
X	0.021441819795677698	2997	2.997	0.19268961082739836
X	0.022219782966300543	6661	6.661	0.14941703920035432
X	0.020479670205910266	357	0.357	0.3856721221408314
X	0.021451071460830324	1142	1.142	0.2658240651659484
X	0.020940460871857303	1324	1.324	0.2510148510565167
X	0.021574507000622706	9623	9.623	0.13088105835416702
X	0.02150311444704325	1714	1.714	0.23236114949244244
X	0.021580302804097982	5932	5.932	0.1537985109107926
X	0.021577858786563014	7696	7.696	0.14100930190053873
X	0.02148114208857357	6631	6.631	0.14796515268678867
X	0.021526081998309847	4751	4.751	0.16547281430191793
X	0.021619758625051957	7259	7.259	0.14387699154378644
X	0.02114354731754449	1553	1.553	0.23878230054649494
X	0.02167848627834319	9068	9.068	0.13371264532089433
X	0.02131162566823406	2855	2.855	0.1954355156054478
X	0.021642662922048986	9416	9.416	0.13197188357177186
X	0.02157397033168332	2583	2.583	0.2028936976261347
X	0.021721235009961173	8713	8.713	0.13559351947563178
X	0.02154350277133855	4747	4.747	0.16556391793075742
X	0.021561323794892215	5198	5.198	0.16067428728123634
X	0.02156543729135119	7441	7.441	0.142574652409375
X	0.022078811483290977	7745	7.745	0.14179190033230338
X	0.02156333640590816	21207	21.207	0.10055698435606643
X	0.021580577453890994	3231	3.231	0.18832531439075034
X	0.021312937993376614	1298	1.298	0.25416917327776306
X	0.02141423174049864	1737	1.737	0.2310118332575136
X	0.021489398659484807	1737	1.737	0.23128181212464702
X	0.021432402937034255	6079	6.079	0.15219938844644204
X	0.02137796484625153	3451	3.451	0.18365685079389907
X	0.021394295842607224	1415	1.415	0.24727517565414017
X	0.021600652655885667	2205	2.205	0.21396993752168117
X	0.02158082659477846	4807	4.807	0.16496734479229674
X	0.021451457165580754	1542	1.542	0.24050501771444696
X	0.02217666429160218	16170	16.17	0.1111037542222988
X	0.021587579986754056	2902	2.902	0.19521005502826883
X	0.021654527673114984	34182	34.182	0.08588495290505048
X	0.02419199328991745	9481	9.481	0.13664880420547298
X	0.02171120567896929	3549	3.549	0.1828911317663854
X	0.02103330166687835	810	0.81	0.29612436601524716
X	0.023374361906778596	8901	8.901	0.1379643844604498
X	0.02154913835245388	4962	4.962	0.1631514920506747
X	0.0214243483015115	2108	2.108	0.2166102504722066
X	0.024538952972093245	26616	26.616	0.09732798827884542
X	0.0218329968072744	14144	14.144	0.11557051126562817
X	0.021541026170148855	1670	1.67	0.23452184693452918
X	0.02148984491535634	1566	1.566	0.23941269452607963
X	0.021527456570345507	4985	4.985	0.1628455341478623
X	0.02119577885905475	975	0.975	0.2790925570374328
X	0.02111938357127907	1532	1.532	0.23977698272765308
X	0.021031990232358678	590	0.59	0.3291112943801347
X	0.021536462052353246	1116	1.116	0.2682275535634695
X	0.021419720267758534	5962	5.962	0.15315832486865086
X	0.021360816137717325	2821	2.821	0.1963683926339964
X	0.02157621365256882	7671	7.671	0.14115873260907671
X	0.021494635927909806	1467	1.467	0.24469963782288168
X	0.021492794877616978	4730	4.73	0.16563187480775446
X	0.021449141727157457	3669	3.669	0.18014438738581923
X	0.022255710030005323	4990	4.99	0.16460649577759798
X	0.021489909725519472	5264	5.264	0.15982310735618258
X	0.0213984600724069	2149	2.149	0.21513712886811745
X	0.021446573402691873	1165	1.165	0.26404462381845073
X	0.021454660006674786	8255	8.255	0.13748907380319686
X	0.02130651491719272	1701	1.701	0.23223947173253148
X	0.021468835702057577	1425	1.425	0.2469815675486492
X	0.02145576869541912	3314	3.314	0.18637909195597835
X	0.021398989905591557	2485	2.485	0.20496936717373607
X	0.023494834988108313	7329	7.329	0.14744924704800016
X	0.02154874869600984	2554	2.554	0.20357934895185495
X	0.021372357830227597	3071	3.071	0.1909226879811689
X	0.02157848266920732	5507	5.507	0.1576528921246665
X	0.022055828699885673	10066	10.066	0.12988394906135728
X	0.02146856062143935	3696	3.696	0.1797588668451135
X	0.021733914887069664	15478	15.478	0.11198014870460254
X	0.021617743256700843	53916	53.916	0.07373905427156095
X	0.02167502020736445	5030	5.03	0.16272858272498072
X	0.021564784619478243	9382	9.382	0.13197243568357542
X	0.021337085636888208	695	0.695	0.31312429487650933
X	0.023290873570158212	7177	7.177	0.14805199954945553
X	0.022541308151519137	57128	57.128	0.07334604467779603
X	0.021652093967502107	207310	207.31	0.047093382383912495
X	0.02162899219203245	4099	4.099	0.17409492923349898
X	0.021706901680661115	153753	153.753	0.05207045991078879
X	0.021435952993252377	35718	35.718	0.08435002604534995
X	0.021543218713723323	40050	40.05	0.08132723802818577
X	0.02389890659693711	130940	130.94	0.05672422422971265
X	0.021499578737058444	2081	2.081	0.21779736611498174
X	0.022406908931654528	7301	7.301	0.1453226136804841
X	0.021612146620165685	255371	255.371	0.04390447375656596
X	0.02174562323339266	542866	542.866	0.03421577690683456
X	0.02154655165509219	7254	7.254	0.1437474252598842
X	0.021726632331913822	41130	41.13	0.08083719496940908
X	0.021848876594569713	19052	19.052	0.10467175669864145
X	0.021587087420056536	60027	60.027	0.07111302239524897
X	0.021604214079748236	83989	83.989	0.06359730131813157
X	0.021657204482096713	45938	45.938	0.07782935617762568
X	0.02161670235908952	45925	45.925	0.0777881469463667
X	0.021723158982601985	18827	18.827	0.10488513769128524
X	0.0224050559874291	4364	4.364	0.17251244504137744
X	0.021690601372075218	313097	313.097	0.041070585629599816
X	0.021599349770499772	8515	8.515	0.13638041521370198
X	0.021601017034893144	5274	5.274	0.15999682258419637
X	0.021622145887955014	38608	38.608	0.08242782294677015
X	0.021734165901521975	92175	92.175	0.06177934182524602
X	0.02163929779621661	259365	259.365	0.04369622622721806
X	0.023559563533305024	117523	117.523	0.0585259030786284
X	0.021293742073613956	3161	3.161	0.18886109258426442
X	0.02165725056659089	44554	44.554	0.07862709076592388
X	0.022133662251002637	15313	15.313	0.1130657319794606
X	0.021650419598051994	31473	31.473	0.08827601611985067
X	0.021712302489420274	80184	80.184	0.06469529852139898
X	0.022029315326334988	7720	7.72	0.1418386425887805
X	0.02272028045976353	82492	82.492	0.06506298011646718
X	0.02047110880176524	863	0.863	0.28732727691260607
X	0.021589247600563195	10037	10.037	0.12908561880514333
X	0.02164272156761699	144765	144.765	0.053074115580449006
X	0.021457158168690007	72065	72.065	0.06677531373869006
X	0.021656885399390265	66782	66.782	0.06870349951408984
X	0.021348535761025324	10928	10.928	0.1250093419294821
X	0.021773662895569586	269429	269.429	0.04323436173059457
X	0.02168910794674366	14135	14.135	0.11534053436577692
X	0.021641966450267006	28753	28.753	0.09096434256274025
X	0.023551942078439348	99539	99.539	0.061850680714938856
X	0.021619083280562886	4143	4.143	0.17344992394102104
X	0.02164622420268318	188351	188.351	0.048618856558996684
X	0.024440727441166075	259237	259.237	0.0455133755852435
X	0.022362045496646103	391714	391.714	0.038504735492009896
X	0.02160611879480704	85673	85.673	0.06317970517119513
X	0.02159937972166183	43412	43.412	0.0792398835061264
X	0.021396416438714823	16897	16.897	0.10818751513352524
X	0.021574382541109858	6564	6.564	0.1486813859927692
X	0.02243206480911447	66070	66.07	0.06976243776172802
X	0.022382957623713222	13077	13.077	0.11961981220117429
X	0.021643417052736216	29800	29.8	0.08988830435140599
X	0.023495577323176482	45214	45.214	0.0803966088113278
X	0.021722344518185947	23628	23.628	0.09723588658354482
X	0.021581332880410805	18315	18.315	0.10562266315159234
X	0.021583407559689464	7888	7.888	0.13986778691300591
X	0.023683027237233995	82181	82.181	0.06605239929931385
X	0.021681085064143867	28418	28.418	0.09137537405778222
X	0.02168157362830256	14976	14.976	0.11312666636001632
X	0.024635270505149343	40342	40.342	0.08483986525871552
X	0.02320690090118088	457982	457.982	0.03700464533422501
X	0.02252774010173131	37782	37.782	0.08416746126882213
X	0.023515917418088294	157065	157.065	0.053099956982184636
X	0.021559603863962	4364	4.364	0.17031465206168653
X	0.021637313532702512	46466	46.466	0.07750969299415016
X	0.021681555306378313	15678	15.678	0.1114123301721854
X	0.02263116617964182	338157	338.157	0.040600325670728195
X	0.021673488220438384	45456	45.456	0.07812305162069111
X	0.021643618095200982	15105	15.105	0.11273784029641855
X	0.021658949971179786	128687	128.687	0.05521209677372691
X	0.021730281943271604	138089	138.089	0.05398860328742163
X	0.021646196106298705	16518	16.518	0.10943125392244274
X	0.021645660858309605	143696	143.696	0.05320781076079241
X	0.023681984405357154	237639	237.639	0.046362494150456963
X	0.02476559410173509	419436	419.436	0.03893985672393473
X	0.021634258510962925	36240	36.24	0.08420113427909938
X	0.02159598120816267	2328	2.328	0.21011803062730053
X	0.021659000292235647	11070	11.07	0.1250730081993554
X	0.02169300124443396	29297	29.297	0.0904688000553593
X	0.021561413164908762	29332	29.332	0.09024957840318619
X	0.022594619691885445	48565	48.565	0.07748670868182775
X	0.021306606267810176	2497	2.497	0.20434557891390404
X	0.022588645310710163	58699	58.699	0.07273662757335382
X	0.02162323964190233	109276	109.276	0.05827272454027442
X	0.02147452658955817	30737	30.737	0.0887334513000686
X	0.0215323230708955	9606	9.606	0.13087281230991335
X	0.021624477043121235	53724	53.724	0.0738344579715932
X	0.024040909881334633	24969	24.969	0.09874533413259057
X	0.02170989012748214	22932	22.932	0.0981910484893656
X	0.02163061085426096	18731	18.731	0.10491460264438389
X	0.021652508133979995	4891	4.891	0.16419887699817734
X	0.023280951022194147	27480	27.48	0.0946225533078012
X	0.021722277692438185	48190	48.19	0.07667423972036269
X	0.021832197787192104	22222	22.222	0.09941183827370928
X	0.022675785105864446	39377	39.377	0.08319678978083311
X	0.021570971392175432	15694	15.694	0.11118478267651466
X	0.02437554205564464	777529	777.529	0.0315315917767058
X	0.02166633881416388	22331	22.331	0.09899785533233577
X	0.023167115095192696	157655	157.655	0.05277011846420141
X	0.02159683016321318	1934	1.934	0.2235173197598213
X	0.02154458702069666	5597	5.597	0.15672115449833326
X	0.021521796719101614	5783	5.783	0.15496791059817927
X	0.021685818946368566	21722	21.722	0.09994444777881685
X	0.021654157431657727	7467	7.467	0.1426040017524524
X	0.021789710541574296	105405	105.405	0.05912848471499175
X	0.021641963915802157	14294	14.294	0.11482795495820823
X	0.021494647098771087	5739	5.739	0.15529758356937612
X	0.023081458407178523	333185	333.185	0.04107011652464622
X	0.021727808712612894	49520	49.52	0.07598801463908307
X	0.02187857601034731	45412	45.412	0.07839399693890657
X	0.0242866488511499	165228	165.228	0.0527749684734838
X	0.02363895961070449	301628	301.628	0.04279426464289525
X	0.021637093139029555	8277	8.277	0.13775540664558616
X	0.02160423042714353	13312	13.312	0.11751640499715996
X	0.021572904054664485	17299	17.299	0.10763723617500333
X	0.02127249533092289	1008	1.008	0.27634565145785506
X	0.0215489003184507	9766	9.766	0.13018755299512044
X	0.021868927905300477	21053	21.053	0.1012755244420768
X	0.021533383170795426	2350	2.35	0.2092577101850127
X	0.021528406215950684	8114	8.114	0.13843916102460047
X	0.021566577265179417	16924	16.924	0.108415839320853
X	0.021646969953784404	5286	5.286	0.15998894890375184
X	0.022356097234519944	319397	319.397	0.04121181286165546
X	0.021604785462424326	20355	20.355	0.1020061329511853
X	0.022225230540528017	94972	94.972	0.06162404900898247
X	0.021487824850041824	4063	4.063	0.1742269006700052
X	0.02141884041406577	13282	13.282	0.11726745313107953
X	0.021664099299126514	116628	116.628	0.057057482161685935
X	0.02387268575028009	759254	759.254	0.031562500150782234
X	0.021855945939609604	636558	636.558	0.03250203415941323
X	0.021675288153228438	29820	29.82	0.08991229439708424
X	0.021712250475297432	87879	87.879	0.06274896661886104
X	0.021581374310905937	5265	5.265	0.16003939732706174
X	0.021606535511425107	17978	17.978	0.1063199066332383
X	0.021664429851948296	48673	48.673	0.07635187669859937
X	0.021809722916957774	30179	30.179	0.08973911199076223
X	0.021862199124223464	15449	15.449	0.11227019857912274
X	0.021593124735734378	90081	90.081	0.06211942564735366
X	0.023515803420608394	774544	774.544	0.031196406856586662
X	0.021497253348861645	45582	45.582	0.0778388718040089
X	0.02158163639714328	10584	10.584	0.1268074726049039
X	0.024864577149016354	39677	39.677	0.08557510029814641
X	0.021599821890894252	30586	30.586	0.08905175755847272
X	0.021589976304159996	3659	3.659	0.18070212179914655
X	0.023477627779809444	159927	159.927	0.05275263296075994
X	0.021496193335860638	16219	16.219	0.10984471386245775
X	0.021387541288120322	2411	2.411	0.20700835942664614
X	0.02353854097398021	92294	92.294	0.06341646413447545
X	0.023530092395745817	25714	25.714	0.09708482027691778
X	0.021080650476740466	625	0.625	0.3230982928998561
X	0.021660927627210176	132674	132.674	0.05465506428621683
X	0.021715768675270797	109991	109.991	0.05822900272019328
X	0.022509404640161112	176522	176.522	0.0503332595935832
X	0.023590035031949227	232725	232.725	0.04662603824963305
X	0.021624271096313537	155673	155.673	0.05178962036308075
X	0.021493638001968053	19117	19.117	0.10398325226832793
X	0.021609039785289965	40742	40.742	0.08094643158452122
X	0.021721699538071917	114725	114.725	0.057422034871055155
X	0.0216826020200386	132975	132.975	0.05463200420855259
X	0.02159238547552845	18013	18.013	0.10622780114691216
X	0.021888844905518505	117876	117.876	0.057051335871179255
X	0.022709815923447896	178990	178.99	0.0502490993495907
X	0.021715679741891845	127156	127.156	0.05548115882063286
X	0.021716888132351404	39994	39.994	0.08158323406507989
X	0.021875267025358146	53302	53.302	0.0743138827141912
X	0.021563129795799225	19427	19.427	0.10353853577433574
X	0.021569457544019406	10765	10.765	0.12606902564537062
X	0.02157690414383683	8333	8.333	0.1373185630373611
X	0.021837524886339464	165965	165.965	0.050862257730668575
X	0.021691223021587568	117532	117.532	0.05693456031015714
X	0.021705460497018943	416924	416.924	0.037339689548197025
X	0.02246231335112364	145371	145.371	0.05366101722937366
X	0.023017695230728323	84286	84.286	0.06487869871178538
X	0.02165974031331448	16219	16.219	0.11012258325859448
X	0.02174686939700532	138144	138.144	0.053995169201554914
X	0.021327774534814374	3725	3.725	0.17889838553292936
X	0.021533520396573663	10616	10.616	0.1265857178373143
X	0.021728678058699193	181391	181.391	0.049295338906144355
X	0.021700204085948995	70781	70.781	0.06742936058697777
X	0.02157259006849667	5706	5.706	0.1557842356764522
X	0.0216412412307912	17847	17.847	0.10663644233502766
X	0.023718742051516518	197802	197.802	0.0493121181791789
X	0.021469591449583655	20427	20.427	0.10167317766914893
X	0.02431193750959507	100110	100.11	0.06238986364521708
X	0.021418510238969644	13299	13.299	0.11721686217934442
X	0.021515638095509885	9567	9.567	0.13101654790331
X	0.021555883669390256	5282	5.282	0.15980455156724935
X	0.02243648460260249	6593	6.593	0.1504148027971362
X	0.02393094785836624	78510	78.51	0.06729946953372261
X	0.021682990487535903	69226	69.226	0.06791254102836024
X	0.021095327798824618	2782	2.782	0.1964610153308246
X	0.021718100377710464	136118	136.118	0.05423780336267124
X	0.021524104271599218	14249	14.249	0.11473966219365894
X	0.021762204939797747	44863	44.863	0.0785726730396065
X	0.021627442944592578	8370	8.37	0.13722289338959326
X	0.021640166378878396	130598	130.598	0.05492558482253429
X	0.023500507134261914	7139	7.139	0.14875786984008268
X	0.021575532803175545	55387	55.387	0.07303279062581751
X	0.021706591545403168	39557	39.557	0.08186961767809552
X	0.02242689480083247	52161	52.161	0.0754758035958502
X	0.021648072929709782	63184	63.184	0.06997410869974886
X	0.022771710238483334	510288	510.288	0.03546991092236438
X	0.021571782078255552	17447	17.447	0.10733015447464356
X	0.021462548379512097	15382	15.382	0.11174364321541388
X	0.021669563381627028	109587	109.587	0.05825909145904884
X	0.021569598954765005	25759	25.759	0.09425499116820427
X	0.02281027500002413	557824	557.824	0.03445173583550091
X	0.02161552765216456	7870	7.87	0.14004374082112
X	0.021773293177268983	140337	140.337	0.05373418225447412
X	0.024647295821109323	569628	569.628	0.03510691353017917
X	0.021293077050160557	4571	4.571	0.16700997131823025
X	0.02149643818129808	217648	217.648	0.04622432824279578
X	0.021774398794155096	21113	21.113	0.10103350238636417
X	0.02369673751574956	670771	670.771	0.032812407260610944
X	0.02161592836921486	11433	11.433	0.12365297311463838
X	0.02180913680694205	26153	26.153	0.09412514415234195
X	0.021421142793242448	6723	6.723	0.14714985607399797
X	0.021688372184591513	7632	7.632	0.1416433528940709
X	0.021620187941967586	15656	15.656	0.11135922951223251
X	0.021935121770025406	41195	41.195	0.08105226969269161
X	0.021612539494729355	27701	27.701	0.09205981918151664
X	0.022998775577050167	138531	138.531	0.05496074133583431
X	0.02159429649561686	17458	17.458	0.10734492666478948
X	0.02158806244012508	8036	8.036	0.13901379915583734
X	0.022549772481714178	12012	12.012	0.12336035588561069
X	0.023192940205761944	265057	265.057	0.04439548894262136
X	0.024424020886402723	216342	216.342	0.04833096213289227
X	0.024414256542905174	476183	476.183	0.03714980504424809
X	0.023494990831649847	30922	30.922	0.09125063626490097
X	0.02169010598147716	9760	9.76	0.13049802895457002
X	0.021628505524135998	6697	6.697	0.14781394373215423
X	0.021600521357645674	8238	8.238	0.13789467067614233
X	0.02405303787583264	526361	526.361	0.03575159406847644
X	0.021682844621218528	12580	12.58	0.11989798162125238
X	0.02159067712266835	18998	18.998	0.10435648916313818
X	0.021620556413748108	74740	74.74	0.0661359999559482
X	0.02232612707371457	44135	44.135	0.07967891662433138
X	0.023580235858972707	33276	33.276	0.08915362569056967
X	0.021595231336613247	13250	13.25	0.11768307131218268
X	0.02370805301743027	222522	222.522	0.04740683682009021
X	0.021697394446505428	64748	64.748	0.06945876792232561
X	0.02158741407056006	61769	61.769	0.07043848671942098
X	0.02170227775096663	45844	45.844	0.07793650707034697
X	0.02469830531362712	124647	124.647	0.05829908986830363
X	0.021820389020805984	151888	151.888	0.05237367012796649
X	0.024333379501610033	459675	459.675	0.03754774400242674
X	0.021722327710066172	181134	181.134	0.049313836906197166
X	0.021624944812986484	9837	9.837	0.13002617253911067
X	0.02169298822889921	41676	41.676	0.08044105980236403
X	0.021776020694730565	20920	20.92	0.1013457669126852
X	0.02153685710173913	7706	7.706	0.14085894801621412
X	0.02155393392382637	17123	17.123	0.10797309825222191
X	0.021562718843206985	5647	5.647	0.1563010554965019
X	0.021632765635107815	22173	22.173	0.09918116289825037
X	0.02204528920022163	56473	56.473	0.07308444956162526
X	0.020956513735225252	5608	5.608	0.15518045126548594
X	0.021666887897694064	29830	29.83	0.08989063071599383
X	0.021649213068062587	7955	7.955	0.1396156095989955
X	0.021544323163332994	48829	48.829	0.07612927166551915
X	0.021624667348041145	10494	10.494	0.1272534186747713
X	0.021642798299690826	24238	24.238	0.09629540047099258
X	0.022657309868566785	16611	16.611	0.11090152598536258
X	0.02163441315236472	33031	33.031	0.08684426270020175
X	0.02156461857364426	5891	5.891	0.15411713230590934
X	0.021595544931180904	9189	9.189	0.1329531522202409
X	0.021682272390024182	25096	25.096	0.09524307974112099
X	0.02356476915196366	151335	151.335	0.05379904950650078
X	0.021650816967190793	8434	8.434	0.13692420581777826
X	0.021436363570318324	2223	2.223	0.21284847872275545
X	0.021496495662672754	12962	12.962	0.11836733873600462
X	0.021660805846753537	177194	177.194	0.04962972466790024
X	0.023743323507061456	346959	346.959	0.04090293300243936
X	0.021577611633050317	81664	81.664	0.06416884779690307
X	0.021803813703111765	8282	8.282	0.1380805194505726
X	0.02165769078120807	290637	290.637	0.0420810998540159
X	0.02473585986601538	236455	236.455	0.047118649751037765
X	0.021317548140812135	2466	2.466	0.205233409501123
X	0.021576836857362326	10794	10.794	0.12597038442965786
X	0.023655020812897724	53624	53.624	0.07612396064083038
X	0.021560283997533965	54080	54.08	0.07359911600568105
X	0.02213134997848576	26571	26.571	0.0940878047116474
X	0.02272161083585999	165612	165.612	0.05157617194866691
X	0.021653061377188507	30526	30.526	0.08918321732845995
X	0.021559108947736185	10321	10.321	0.12783104612548815
X	0.021474894507433253	3934	3.934	0.17607548547572743
X	0.02157782635121338	33065	33.065	0.08673872930359802
X	0.021584135240241605	17250	17.25	0.10775775083483971
X	0.021616109957464328	22278	22.278	0.09899967763004958
X	0.021653549446299054	117819	117.819	0.05685533915856026
X	0.023511666328538346	466841	466.841	0.03692933379181943
X	0.021611968708108	12047	12.047	0.12150807481099164
X	0.021917327378210685	2849	2.849	0.19740813633241452
X	0.022631989040698505	16534	16.534	0.1110320257865605
X	0.023759693951376348	249234	249.234	0.04568193780641015
X	0.0216315173253073	37970	37.97	0.08289890528272188
X	0.021524287146023415	8526	8.526	0.1361636390345208
X	0.02123661478859039	2620	2.62	0.2008759757608201
X	0.02183902592539795	82350	82.35	0.0642475473975372
X	0.021511643076377273	4901	4.901	0.16373051466278188
X	0.021555915810345917	49162	49.162	0.07597061557485987
X	0.021565396996551002	5812	5.812	0.15481413739533145
X	0.021713137166110938	15093	15.093	0.11288831775182118
X	0.021645192803336547	19268	19.268	0.1039540962187281
X	0.02160311087402928	8762	8.762	0.13509450424107636
X	0.021563402456503553	13450	13.45	0.11703928717987504
X	0.02181249692422038	162219	162.219	0.05123120304665182
X	0.021868338120113576	342393	342.393	0.039972713821190144
X	0.021689804500426308	148059	148.059	0.052715736106006515
X	0.021806976861908745	97248	97.248	0.06075354087032865
X	0.021609527724787445	24495	24.495	0.09590824497363465
X	0.0216252397421624	16356	16.356	0.10975591710010549
X	0.02411075416656348	20656	20.656	0.10529025803791993
X	0.021740632877093338	140734	140.734	0.05365675244476974
X	0.02486645558364896	37095	37.095	0.08751842705259563
X	0.021607071519136406	79126	79.126	0.06487722008530034
X	0.02161958976668566	14245	14.245	0.11491983623905097
X	0.024544544996352845	928564	928.564	0.02978843686837108
X	0.021640612112167286	32297	32.297	0.0875055876641018
X	0.024037289568846463	61104	61.104	0.07327209651808123
X	0.023538747236294642	208834	208.834	0.04830521796813154
X	0.02171711905276273	52740	52.74	0.07439676112834884
X	0.02164841600481675	87287	87.287	0.06282881266627986
X	0.02436015284015057	466970	466.97	0.037364887246163665
X	0.02212513952763584	222231	222.231	0.046347586737459444
X	0.0216340368773215	93158	93.158	0.06146659229335023
X	0.02155591169469538	14778	14.778	0.11340971120655012
X	0.021623276330181677	52037	52.037	0.07462249217381293
X	0.021641070222531287	12709	12.709	0.11941414813418165
X	0.021668380100725693	168786	168.786	0.050446380122149366
X	0.024494364708748943	927336	927.336	0.029781256702437357
X	0.02271280508903259	115478	115.478	0.05815546154401709
X	0.02166225499193326	147155	147.155	0.05280108905576728
X	0.02165760686931388	30302	30.302	0.08940868842668694
X	0.021620160416582473	36757	36.757	0.08378628819595914
X	0.02480817168406581	63199	63.199	0.07321974028744999
X	0.021567282162657075	20303	20.303	0.10203403666487906
X	0.022557888167686512	28969	28.969	0.09200010263399666
X	0.02452666728065852	477017	477.017	0.03718503782800213
X	0.021597233796032688	48387	48.387	0.07642283500011446
X	0.021660262319601654	187987	187.987	0.04866073131144022
X	0.021722873018536728	154231	154.231	0.05202936549963736
X	0.021665099604790884	56859	56.859	0.07249707603848794
X	0.021707473647706487	32987	32.987	0.08698055090342935
X	0.023360100133173273	121854	121.854	0.05766048663377448
X	0.022819198592549595	192782	192.782	0.049099601668277655
X	0.02148760098845082	8443	8.443	0.1365307200044396
X	0.02490574900211468	686874	686.874	0.03309843884185931
X	0.021726787086347114	37946	37.946	0.08303792763750538
X	0.021713902440220617	102158	102.158	0.05967904068622294
X	0.021640542874416455	4276	4.276	0.17168940079240766
X	0.021563636373982006	10035	10.035	0.1290431257767923
X	0.021347217490123496	2295	2.295	0.2103065803321511
X	0.02160451905752115	3176	3.176	0.18947621604931544
X	0.02162479546795637	25030	25.03	0.09524241221557227
X	0.02161782890208734	98553	98.553	0.06030880763078665
X	0.024772150325509612	3515604	3515.604	0.019171433418369074
X	0.021590920572080608	11209	11.209	0.12442321821055724
X	0.022599398575074994	265020	265.02	0.044015544360213404
X	0.022276023849913878	12206	12.206	0.12220475448762408
X	0.02252485267337985	19228	19.228	0.10541666725356484
X	0.022344339052893302	20367	20.367	0.10313675976551365
X	0.02171479804985682	162232	162.232	0.05115323341582277
X	0.021579292233610804	10939	10.939	0.1254160710477541
X	0.02461755568341569	1023830	1023.83	0.02886283761444667
X	0.02160902923823349	8672	8.672	0.13557262215819166
X	0.023721644085640113	189202	189.202	0.05005026188284727
X	0.021670565814186516	61876	61.876	0.07048813283682608
X	0.021724300229639327	124035	124.035	0.05595005464653321
X	0.023631589786463545	247783	247.783	0.04568852568904901
X	0.021655860136289434	24200	24.2	0.09636515492973328
X	0.021515653392862218	12707	12.707	0.11918927273524572
X	0.023590608705274616	123451	123.451	0.057598986926123696
X	0.02167959167041075	12548	12.548	0.11999381541110218
X	0.021431678185126514	23039	23.039	0.09761821262618016
X	0.021636553899696553	207929	207.929	0.047035345879961346
X	0.02167493080379314	23723	23.723	0.09703521451260566
X	0.02483881828280239	87278	87.278	0.06577719984784354
X	0.021632601660659983	45863	45.863	0.07784225909189127
X	0.024651775536131123	268564	268.564	0.04510937424818925
X	0.02259030634758342	684148	684.148	0.032081698489279865
X	0.021642689295642108	72316	72.316	0.06688965298228539
X	0.022124007115568438	10627	10.627	0.12768827981525663
X	0.02163558664451703	70708	70.708	0.0673855391375849
X	0.021515341046099427	53831	53.831	0.07366116710840101
X	0.021996536210550456	41457	41.457	0.08095657794291304
X	0.021616550119453026	72458	72.458	0.06681900648449
X	0.02154194485909744	45324	45.324	0.0780402933116466
X	0.023507446277122323	105416	105.416	0.060640993302147804
X	0.02163266897722461	207078	207.078	0.04709687024223457
X	0.021609520445775944	51297	51.297	0.07496370691865183
X	0.021730267910530347	27590	27.59	0.09235019002738282
X	0.02147861343244061	5548	5.548	0.15702058695212237
X	0.0244075204880295	20492	20.492	0.1060017670730223
X	0.021590954071297516	82463	82.463	0.06397410729716622
X	0.023511466427257197	126474	126.474	0.0570724024330813
X	0.021654955306540612	207869	207.869	0.04705320259941452
X	0.021619712683713026	13765	13.765	0.11624061546652349
X	0.021644455179943234	28781	28.781	0.09093831991210993
X	0.023439625057689522	44200	44.2	0.08094240987021027
X	0.02240328639000959	201471	201.471	0.04808759561783591
X	0.02256323271271153	42787	42.787	0.08079103314171142
X	0.02172431889789806	73558	73.558	0.0665945597621863
X	0.02169229747052316	12987	12.987	0.11864940653199958
X	0.02172762058813879	36140	36.14	0.0843997849865526
X	0.021584573398766484	3665	3.665	0.18058839168845844
X	0.021615347963805306	14924	14.924	0.11314247210230811
X	0.02176528465627997	219068	219.068	0.046315725290652976
X	0.021610329447803694	24839	24.839	0.09546461529018413
X	0.021706974732091894	84163	84.163	0.06365404855179953
X	0.021564270600965822	4203	4.203	0.1724745925508603
X	0.021538151577491498	5897	5.897	0.15400178940128853
X	0.021519816964363087	79959	79.959	0.06456399666019595
X	0.02170211114329159	99807	99.807	0.06013310930638249
X	0.023848779445801094	64927	64.927	0.07161658481374798
X	0.021527233513918012	5223	5.223	0.1603329310489894
X	0.021374524847897616	9229	9.229	0.1323063253946146
X	0.021620374157398915	39284	39.284	0.08195003958836637
X	0.021585170474996522	46111	46.111	0.07764562332283466
X	0.021698075641033807	69205	69.205	0.06793515677296869
X	0.021591319074933963	5958	5.958	0.15360059293617387
X	0.02152553401736379	7159	7.159	0.14433351580552725
X	0.0215325184165246	71015	71.015	0.06718127553747813
X	0.0214435127152942	18265	18.265	0.10549343110929342
X	0.023193272661696483	266979	266.979	0.04428890849645543
X	0.021610344326695598	13936	13.936	0.11574649525961948
X	0.021645428602145668	60617	60.617	0.07094534695585353
X	0.021771573724573966	143599	143.599	0.05332278231988404
X	0.022410986781148997	40863	40.863	0.0818546917299492
X	0.022750280474433116	116963	116.963	0.05794012378586785
X	0.021862395602834803	157835	157.835	0.05174060207237525
X	0.021333863716814797	1446	1.446	0.24526396288866997
X	0.02172527099806062	64124	64.124	0.06971317549607466
X	0.02169363805551847	18315	18.315	0.10580555971944702
X	0.021747258861486738	109606	109.606	0.05832526648629248
X	0.021672075299907317	101414	101.414	0.05978618790913413
X	0.021629745649192008	42520	42.52	0.07982753500061855
X	0.021721297903263232	108026	108.026	0.058584917885920886
X	0.02166242414291825	22232	22.232	0.09913861340503578
X	0.02143968511060075	27155	27.155	0.09242501543801285
X	0.021581539653983177	17846	17.846	0.10654028281588869
X	0.021430868579015796	11819	11.819	0.12194191569832638
X	0.021812398836645864	195247	195.247	0.048162204066634205
X	0.024333163565621128	529454	529.454	0.035819823967930584
X	0.02154069240020661	12199	12.199	0.12086813173698471
X	0.021646604148400923	22636	22.636	0.09852127645982608
X	0.021752699101524636	19585	19.585	0.10356106918152272
X	0.02246068818328254	172965	172.965	0.050639367878357926
X	0.021668020265461253	61141	61.141	0.07076669258317501
X	0.021578459396471007	9996	9.996	0.12924033124532885
X	0.022054914596600653	91824	91.824	0.062160770782097204
X	0.021728952981706975	115303	115.303	0.05733230435333517
X	0.02137096988823745	11567	11.567	0.122706574454659
X	0.02165357395023501	62049	62.049	0.07040415119606463
X	0.0216726882746745	16166	16.166	0.11026476003254651
time for making epsilon is 2.783402919769287
epsilons are
[0.29164762181918863, 0.09342246052728766, 0.159471795763488, 0.1313353632333438, 0.06920051416352391, 0.06592773314527486, 0.07247904693015084, 0.07244322198078183, 0.11836784033555511, 0.08305306233105597, 0.13892103482763754, 0.06417724397893687, 0.11565430801564137, 0.037006623714609575, 0.08504482167200333, 0.06185310162341044, 0.06096089396571771, 0.08206408966882166, 0.04620072182878104, 0.055170960933715846, 0.07319138658312382, 0.03849176857266314, 0.10929519916236088, 0.08378637493902157, 0.12515396364701345, 0.0628382578677077, 0.0729327559063486, 0.1274930695627303, 0.07657337505667186, 0.022470541181108285, 0.11394082767320092, 0.032756352425885746, 0.10566488374190967, 0.1152004047520345, 0.08162761192303616, 0.0480650150877297, 0.054599782946484154, 0.21005967846406734, 0.14459911597004171, 0.17027567095844057, 0.15750179753482552, 0.27317163944302103, 0.2984854631640018, 0.16138786288248178, 0.3208961936629163, 0.30576186429421875, 0.1746980676831809, 0.1736179186640217, 0.16430694539687998, 0.10222990254344758, 0.10325581016781112, 0.1824270543627859, 0.18209435532050877, 0.1994544924828535, 0.13076596363987011, 0.11249411399329415, 0.19448369930747128, 0.14872823353595324, 0.2033595876366641, 0.18669592575413252, 0.12428820364330352, 0.2454209078228767, 0.10060287388292395, 0.1299465640722033, 0.2140067278498149, 0.1882063255843648, 0.22142492954940995, 0.1670104089468627, 0.16544599792710085, 0.18450103434621448, 0.13555129218824974, 0.17220779534565736, 0.1872234902142831, 0.1842073816880969, 0.16639763209327962, 0.1548433240925006, 0.29520435402295414, 0.27468982626855654, 0.168197792261462, 0.10053971902484933, 0.2114863316976489, 0.25112666091710895, 0.13385159912678335, 0.24551363217351996, 0.20921484057922152, 0.2228738323348221, 0.2008318421808892, 0.30780696828971343, 0.14165160989642883, 0.17563595594370346, 0.17450817763096704, 0.24958389907298895, 0.25607905037747636, 0.15057550950839044, 0.14835408997080388, 0.14973777152195109, 0.13740138741559035, 0.11761257940966646, 0.10965220782401078, 0.15480265977432164, 0.11930182428279473, 0.15767864825728128, 0.18056289146237026, 0.19915761092717366, 0.14120223649425542, 0.20031713877508395, 0.17223574318644538, 0.3557332653979738, 0.2127782760204178, 0.2397361557406098, 0.19299170371484803, 0.18416811437413547, 0.17484695614098555, 0.17077209220745987, 0.16416913564991414, 0.18689208971257076, 0.2018830976097488, 0.2938544530820781, 0.12333913828697837, 0.31810631376164566, 0.11322376354903083, 0.23163174412064846, 0.2109212990105852, 0.18977680549408774, 0.22112455911360201, 0.17509213625656855, 0.2813433991512179, 0.16629962861999595, 0.10095926957947217, 0.1737890078079211, 0.10742994909452613, 0.19815268016420173, 0.15033958549475182, 0.2282616591977589, 0.17543681095499564, 0.2076817455637212, 0.22226619904302405, 0.1827109020774321, 0.22306257583796182, 0.23924059537616063, 0.17977185316001318, 0.286538844146435, 0.1211571588317224, 0.10615554178503978, 0.10970435717791396, 0.2179942335867664, 0.18977163543020784, 0.22253218737072095, 0.2331889522491639, 0.19195974368420288, 0.2094949146397892, 0.12040699245872251, 0.1659854924976536, 0.11412727137837025, 0.15455230547056859, 0.09932530279091702, 0.20275904130390632, 0.2009558205965613, 0.17090402229623505, 0.30843713101661696, 0.1271174733072633, 0.2547687039340063, 0.14508840628467007, 0.24745988465941654, 0.17776604181448183, 0.1931340034436245, 0.21626220977099275, 0.19268961082739836, 0.14941703920035432, 0.3856721221408314, 0.2658240651659484, 0.2510148510565167, 0.13088105835416702, 0.23236114949244244, 0.1537985109107926, 0.14100930190053873, 0.14796515268678867, 0.16547281430191793, 0.14387699154378644, 0.23878230054649494, 0.13371264532089433, 0.1954355156054478, 0.13197188357177186, 0.2028936976261347, 0.13559351947563178, 0.16556391793075742, 0.16067428728123634, 0.142574652409375, 0.14179190033230338, 0.10055698435606643, 0.18832531439075034, 0.25416917327776306, 0.2310118332575136, 0.23128181212464702, 0.15219938844644204, 0.18365685079389907, 0.24727517565414017, 0.21396993752168117, 0.16496734479229674, 0.24050501771444696, 0.1111037542222988, 0.19521005502826883, 0.08588495290505048, 0.13664880420547298, 0.1828911317663854, 0.29612436601524716, 0.1379643844604498, 0.1631514920506747, 0.2166102504722066, 0.09732798827884542, 0.11557051126562817, 0.23452184693452918, 0.23941269452607963, 0.1628455341478623, 0.2790925570374328, 0.23977698272765308, 0.3291112943801347, 0.2682275535634695, 0.15315832486865086, 0.1963683926339964, 0.14115873260907671, 0.24469963782288168, 0.16563187480775446, 0.18014438738581923, 0.16460649577759798, 0.15982310735618258, 0.21513712886811745, 0.26404462381845073, 0.13748907380319686, 0.23223947173253148, 0.2469815675486492, 0.18637909195597835, 0.20496936717373607, 0.14744924704800016, 0.20357934895185495, 0.1909226879811689, 0.1576528921246665, 0.12988394906135728, 0.1797588668451135, 0.11198014870460254, 0.07373905427156095, 0.16272858272498072, 0.13197243568357542, 0.31312429487650933, 0.14805199954945553, 0.07334604467779603, 0.047093382383912495, 0.17409492923349898, 0.05207045991078879, 0.08435002604534995, 0.08132723802818577, 0.05672422422971265, 0.21779736611498174, 0.1453226136804841, 0.04390447375656596, 0.03421577690683456, 0.1437474252598842, 0.08083719496940908, 0.10467175669864145, 0.07111302239524897, 0.06359730131813157, 0.07782935617762568, 0.0777881469463667, 0.10488513769128524, 0.17251244504137744, 0.041070585629599816, 0.13638041521370198, 0.15999682258419637, 0.08242782294677015, 0.06177934182524602, 0.04369622622721806, 0.0585259030786284, 0.18886109258426442, 0.07862709076592388, 0.1130657319794606, 0.08827601611985067, 0.06469529852139898, 0.1418386425887805, 0.06506298011646718, 0.28732727691260607, 0.12908561880514333, 0.053074115580449006, 0.06677531373869006, 0.06870349951408984, 0.1250093419294821, 0.04323436173059457, 0.11534053436577692, 0.09096434256274025, 0.061850680714938856, 0.17344992394102104, 0.048618856558996684, 0.0455133755852435, 0.038504735492009896, 0.06317970517119513, 0.0792398835061264, 0.10818751513352524, 0.1486813859927692, 0.06976243776172802, 0.11961981220117429, 0.08988830435140599, 0.0803966088113278, 0.09723588658354482, 0.10562266315159234, 0.13986778691300591, 0.06605239929931385, 0.09137537405778222, 0.11312666636001632, 0.08483986525871552, 0.03700464533422501, 0.08416746126882213, 0.053099956982184636, 0.17031465206168653, 0.07750969299415016, 0.1114123301721854, 0.040600325670728195, 0.07812305162069111, 0.11273784029641855, 0.05521209677372691, 0.05398860328742163, 0.10943125392244274, 0.05320781076079241, 0.046362494150456963, 0.03893985672393473, 0.08420113427909938, 0.21011803062730053, 0.1250730081993554, 0.0904688000553593, 0.09024957840318619, 0.07748670868182775, 0.20434557891390404, 0.07273662757335382, 0.05827272454027442, 0.0887334513000686, 0.13087281230991335, 0.0738344579715932, 0.09874533413259057, 0.0981910484893656, 0.10491460264438389, 0.16419887699817734, 0.0946225533078012, 0.07667423972036269, 0.09941183827370928, 0.08319678978083311, 0.11118478267651466, 0.0315315917767058, 0.09899785533233577, 0.05277011846420141, 0.2235173197598213, 0.15672115449833326, 0.15496791059817927, 0.09994444777881685, 0.1426040017524524, 0.05912848471499175, 0.11482795495820823, 0.15529758356937612, 0.04107011652464622, 0.07598801463908307, 0.07839399693890657, 0.0527749684734838, 0.04279426464289525, 0.13775540664558616, 0.11751640499715996, 0.10763723617500333, 0.27634565145785506, 0.13018755299512044, 0.1012755244420768, 0.2092577101850127, 0.13843916102460047, 0.108415839320853, 0.15998894890375184, 0.04121181286165546, 0.1020061329511853, 0.06162404900898247, 0.1742269006700052, 0.11726745313107953, 0.057057482161685935, 0.031562500150782234, 0.03250203415941323, 0.08991229439708424, 0.06274896661886104, 0.16003939732706174, 0.1063199066332383, 0.07635187669859937, 0.08973911199076223, 0.11227019857912274, 0.06211942564735366, 0.031196406856586662, 0.0778388718040089, 0.1268074726049039, 0.08557510029814641, 0.08905175755847272, 0.18070212179914655, 0.05275263296075994, 0.10984471386245775, 0.20700835942664614, 0.06341646413447545, 0.09708482027691778, 0.3230982928998561, 0.05465506428621683, 0.05822900272019328, 0.0503332595935832, 0.04662603824963305, 0.05178962036308075, 0.10398325226832793, 0.08094643158452122, 0.057422034871055155, 0.05463200420855259, 0.10622780114691216, 0.057051335871179255, 0.0502490993495907, 0.05548115882063286, 0.08158323406507989, 0.0743138827141912, 0.10353853577433574, 0.12606902564537062, 0.1373185630373611, 0.050862257730668575, 0.05693456031015714, 0.037339689548197025, 0.05366101722937366, 0.06487869871178538, 0.11012258325859448, 0.053995169201554914, 0.17889838553292936, 0.1265857178373143, 0.049295338906144355, 0.06742936058697777, 0.1557842356764522, 0.10663644233502766, 0.0493121181791789, 0.10167317766914893, 0.06238986364521708, 0.11721686217934442, 0.13101654790331, 0.15980455156724935, 0.1504148027971362, 0.06729946953372261, 0.06791254102836024, 0.1964610153308246, 0.05423780336267124, 0.11473966219365894, 0.0785726730396065, 0.13722289338959326, 0.05492558482253429, 0.14875786984008268, 0.07303279062581751, 0.08186961767809552, 0.0754758035958502, 0.06997410869974886, 0.03546991092236438, 0.10733015447464356, 0.11174364321541388, 0.05825909145904884, 0.09425499116820427, 0.03445173583550091, 0.14004374082112, 0.05373418225447412, 0.03510691353017917, 0.16700997131823025, 0.04622432824279578, 0.10103350238636417, 0.032812407260610944, 0.12365297311463838, 0.09412514415234195, 0.14714985607399797, 0.1416433528940709, 0.11135922951223251, 0.08105226969269161, 0.09205981918151664, 0.05496074133583431, 0.10734492666478948, 0.13901379915583734, 0.12336035588561069, 0.04439548894262136, 0.04833096213289227, 0.03714980504424809, 0.09125063626490097, 0.13049802895457002, 0.14781394373215423, 0.13789467067614233, 0.03575159406847644, 0.11989798162125238, 0.10435648916313818, 0.0661359999559482, 0.07967891662433138, 0.08915362569056967, 0.11768307131218268, 0.04740683682009021, 0.06945876792232561, 0.07043848671942098, 0.07793650707034697, 0.05829908986830363, 0.05237367012796649, 0.03754774400242674, 0.049313836906197166, 0.13002617253911067, 0.08044105980236403, 0.1013457669126852, 0.14085894801621412, 0.10797309825222191, 0.1563010554965019, 0.09918116289825037, 0.07308444956162526, 0.15518045126548594, 0.08989063071599383, 0.1396156095989955, 0.07612927166551915, 0.1272534186747713, 0.09629540047099258, 0.11090152598536258, 0.08684426270020175, 0.15411713230590934, 0.1329531522202409, 0.09524307974112099, 0.05379904950650078, 0.13692420581777826, 0.21284847872275545, 0.11836733873600462, 0.04962972466790024, 0.04090293300243936, 0.06416884779690307, 0.1380805194505726, 0.0420810998540159, 0.047118649751037765, 0.205233409501123, 0.12597038442965786, 0.07612396064083038, 0.07359911600568105, 0.0940878047116474, 0.05157617194866691, 0.08918321732845995, 0.12783104612548815, 0.17607548547572743, 0.08673872930359802, 0.10775775083483971, 0.09899967763004958, 0.05685533915856026, 0.03692933379181943, 0.12150807481099164, 0.19740813633241452, 0.1110320257865605, 0.04568193780641015, 0.08289890528272188, 0.1361636390345208, 0.2008759757608201, 0.0642475473975372, 0.16373051466278188, 0.07597061557485987, 0.15481413739533145, 0.11288831775182118, 0.1039540962187281, 0.13509450424107636, 0.11703928717987504, 0.05123120304665182, 0.039972713821190144, 0.052715736106006515, 0.06075354087032865, 0.09590824497363465, 0.10975591710010549, 0.10529025803791993, 0.05365675244476974, 0.08751842705259563, 0.06487722008530034, 0.11491983623905097, 0.02978843686837108, 0.0875055876641018, 0.07327209651808123, 0.04830521796813154, 0.07439676112834884, 0.06282881266627986, 0.037364887246163665, 0.046347586737459444, 0.06146659229335023, 0.11340971120655012, 0.07462249217381293, 0.11941414813418165, 0.050446380122149366, 0.029781256702437357, 0.05815546154401709, 0.05280108905576728, 0.08940868842668694, 0.08378628819595914, 0.07321974028744999, 0.10203403666487906, 0.09200010263399666, 0.03718503782800213, 0.07642283500011446, 0.04866073131144022, 0.05202936549963736, 0.07249707603848794, 0.08698055090342935, 0.05766048663377448, 0.049099601668277655, 0.1365307200044396, 0.03309843884185931, 0.08303792763750538, 0.05967904068622294, 0.17168940079240766, 0.1290431257767923, 0.2103065803321511, 0.18947621604931544, 0.09524241221557227, 0.06030880763078665, 0.019171433418369074, 0.12442321821055724, 0.044015544360213404, 0.12220475448762408, 0.10541666725356484, 0.10313675976551365, 0.05115323341582277, 0.1254160710477541, 0.02886283761444667, 0.13557262215819166, 0.05005026188284727, 0.07048813283682608, 0.05595005464653321, 0.04568852568904901, 0.09636515492973328, 0.11918927273524572, 0.057598986926123696, 0.11999381541110218, 0.09761821262618016, 0.047035345879961346, 0.09703521451260566, 0.06577719984784354, 0.07784225909189127, 0.04510937424818925, 0.032081698489279865, 0.06688965298228539, 0.12768827981525663, 0.0673855391375849, 0.07366116710840101, 0.08095657794291304, 0.06681900648449, 0.0780402933116466, 0.060640993302147804, 0.04709687024223457, 0.07496370691865183, 0.09235019002738282, 0.15702058695212237, 0.1060017670730223, 0.06397410729716622, 0.0570724024330813, 0.04705320259941452, 0.11624061546652349, 0.09093831991210993, 0.08094240987021027, 0.04808759561783591, 0.08079103314171142, 0.0665945597621863, 0.11864940653199958, 0.0843997849865526, 0.18058839168845844, 0.11314247210230811, 0.046315725290652976, 0.09546461529018413, 0.06365404855179953, 0.1724745925508603, 0.15400178940128853, 0.06456399666019595, 0.06013310930638249, 0.07161658481374798, 0.1603329310489894, 0.1323063253946146, 0.08195003958836637, 0.07764562332283466, 0.06793515677296869, 0.15360059293617387, 0.14433351580552725, 0.06718127553747813, 0.10549343110929342, 0.04428890849645543, 0.11574649525961948, 0.07094534695585353, 0.05332278231988404, 0.0818546917299492, 0.05794012378586785, 0.05174060207237525, 0.24526396288866997, 0.06971317549607466, 0.10580555971944702, 0.05832526648629248, 0.05978618790913413, 0.07982753500061855, 0.058584917885920886, 0.09913861340503578, 0.09242501543801285, 0.10654028281588869, 0.12194191569832638, 0.048162204066634205, 0.035819823967930584, 0.12086813173698471, 0.09852127645982608, 0.10356106918152272, 0.050639367878357926, 0.07076669258317501, 0.12924033124532885, 0.062160770782097204, 0.05733230435333517, 0.122706574454659, 0.07040415119606463, 0.11026476003254651]
0.0909624027628945
Making ranges
torch.Size([61483, 2])
We keep 9.49e+06/1.10e+09 =  0% of the original kernel matrix.

torch.Size([2692, 2])
We keep 4.34e+04/7.34e+05 =  5% of the original kernel matrix.

torch.Size([15373, 2])
We keep 7.63e+05/2.84e+07 =  2% of the original kernel matrix.

torch.Size([47021, 2])
We keep 1.07e+07/7.49e+08 =  1% of the original kernel matrix.

torch.Size([53851, 2])
We keep 9.05e+06/9.06e+08 =  0% of the original kernel matrix.

torch.Size([13403, 2])
We keep 9.88e+05/3.72e+07 =  2% of the original kernel matrix.

torch.Size([29139, 2])
We keep 2.96e+06/2.02e+08 =  1% of the original kernel matrix.

torch.Size([15321, 2])
We keep 6.37e+06/9.84e+07 =  6% of the original kernel matrix.

torch.Size([30087, 2])
We keep 4.13e+06/3.28e+08 =  1% of the original kernel matrix.

torch.Size([125052, 2])
We keep 6.67e+07/5.53e+09 =  1% of the original kernel matrix.

torch.Size([85833, 2])
We keep 2.03e+07/2.46e+09 =  0% of the original kernel matrix.

torch.Size([146161, 2])
We keep 5.97e+07/6.20e+09 =  0% of the original kernel matrix.

torch.Size([92811, 2])
We keep 2.15e+07/2.61e+09 =  0% of the original kernel matrix.

torch.Size([103782, 2])
We keep 3.30e+07/3.23e+09 =  1% of the original kernel matrix.

torch.Size([78212, 2])
We keep 1.62e+07/1.88e+09 =  0% of the original kernel matrix.

torch.Size([110395, 2])
We keep 3.02e+07/3.25e+09 =  0% of the original kernel matrix.

torch.Size([81094, 2])
We keep 1.63e+07/1.89e+09 =  0% of the original kernel matrix.

torch.Size([27319, 2])
We keep 4.12e+06/1.71e+08 =  2% of the original kernel matrix.

torch.Size([40914, 2])
We keep 5.01e+06/4.33e+08 =  1% of the original kernel matrix.

torch.Size([48562, 2])
We keep 4.85e+07/1.43e+09 =  3% of the original kernel matrix.

torch.Size([52969, 2])
We keep 1.15e+07/1.25e+09 =  0% of the original kernel matrix.

torch.Size([16155, 2])
We keep 1.63e+06/6.47e+07 =  2% of the original kernel matrix.

torch.Size([31021, 2])
We keep 3.51e+06/2.66e+08 =  1% of the original kernel matrix.

torch.Size([136917, 2])
We keep 8.88e+07/6.66e+09 =  1% of the original kernel matrix.

torch.Size([87917, 2])
We keep 2.18e+07/2.70e+09 =  0% of the original kernel matrix.

torch.Size([29916, 2])
We keep 2.99e+06/1.96e+08 =  1% of the original kernel matrix.

torch.Size([42689, 2])
We keep 5.28e+06/4.63e+08 =  1% of the original kernel matrix.

torch.Size([857743, 2])
We keep 1.16e+09/1.84e+11 =  0% of the original kernel matrix.

torch.Size([234023, 2])
We keep 9.43e+07/1.42e+10 =  0% of the original kernel matrix.

torch.Size([64465, 2])
We keep 1.43e+07/1.24e+09 =  1% of the original kernel matrix.

torch.Size([62901, 2])
We keep 1.10e+07/1.16e+09 =  0% of the original kernel matrix.

torch.Size([175631, 2])
We keep 1.13e+08/8.38e+09 =  1% of the original kernel matrix.

torch.Size([101867, 2])
We keep 2.43e+07/3.03e+09 =  0% of the original kernel matrix.

torch.Size([178404, 2])
We keep 1.07e+08/9.15e+09 =  1% of the original kernel matrix.

torch.Size([103196, 2])
We keep 2.53e+07/3.17e+09 =  0% of the original kernel matrix.

torch.Size([66640, 2])
We keep 2.11e+07/1.53e+09 =  1% of the original kernel matrix.

torch.Size([63162, 2])
We keep 1.19e+07/1.30e+09 =  0% of the original kernel matrix.

torch.Size([389091, 2])
We keep 4.96e+08/4.89e+10 =  1% of the original kernel matrix.

torch.Size([157372, 2])
We keep 5.16e+07/7.32e+09 =  0% of the original kernel matrix.

torch.Size([243768, 2])
We keep 1.64e+08/1.67e+10 =  0% of the original kernel matrix.

torch.Size([122317, 2])
We keep 3.25e+07/4.27e+09 =  0% of the original kernel matrix.

torch.Size([78198, 2])
We keep 5.52e+07/3.03e+09 =  1% of the original kernel matrix.

torch.Size([65712, 2])
We keep 1.59e+07/1.82e+09 =  0% of the original kernel matrix.

torch.Size([757193, 2])
We keep 1.06e+09/1.68e+11 =  0% of the original kernel matrix.

torch.Size([220187, 2])
We keep 8.91e+07/1.36e+10 =  0% of the original kernel matrix.

torch.Size([33245, 2])
We keep 4.36e+06/2.75e+08 =  1% of the original kernel matrix.

torch.Size([45337, 2])
We keep 6.03e+06/5.49e+08 =  1% of the original kernel matrix.

torch.Size([65589, 2])
We keep 4.89e+07/1.48e+09 =  3% of the original kernel matrix.

torch.Size([63244, 2])
We keep 1.20e+07/1.27e+09 =  0% of the original kernel matrix.

torch.Size([14593, 2])
We keep 9.46e+06/1.14e+08 =  8% of the original kernel matrix.

torch.Size([28462, 2])
We keep 3.92e+06/3.54e+08 =  1% of the original kernel matrix.

torch.Size([170042, 2])
We keep 5.72e+07/7.65e+09 =  0% of the original kernel matrix.

torch.Size([100501, 2])
We keep 2.31e+07/2.89e+09 =  0% of the original kernel matrix.

torch.Size([88739, 2])
We keep 4.36e+07/3.13e+09 =  1% of the original kernel matrix.

torch.Size([70267, 2])
We keep 1.61e+07/1.85e+09 =  0% of the original kernel matrix.

torch.Size([22960, 2])
We keep 2.08e+06/1.09e+08 =  1% of the original kernel matrix.

torch.Size([37167, 2])
We keep 4.17e+06/3.45e+08 =  1% of the original kernel matrix.

torch.Size([73814, 2])
We keep 5.77e+07/2.30e+09 =  2% of the original kernel matrix.

torch.Size([66175, 2])
We keep 1.38e+07/1.59e+09 =  0% of the original kernel matrix.

torch.Size([4446444, 2])
We keep 1.74e+10/4.60e+12 =  0% of the original kernel matrix.

torch.Size([561471, 2])
We keep 4.13e+08/7.10e+10 =  0% of the original kernel matrix.

torch.Size([23101, 2])
We keep 6.61e+06/2.14e+08 =  3% of the original kernel matrix.

torch.Size([37063, 2])
We keep 5.51e+06/4.84e+08 =  1% of the original kernel matrix.

torch.Size([1120462, 2])
We keep 3.77e+09/4.90e+11 =  0% of the original kernel matrix.

torch.Size([274396, 2])
We keep 1.49e+08/2.32e+10 =  0% of the original kernel matrix.

torch.Size([31494, 2])
We keep 8.63e+06/3.35e+08 =  2% of the original kernel matrix.

torch.Size([43165, 2])
We keep 6.51e+06/6.06e+08 =  1% of the original kernel matrix.

torch.Size([29964, 2])
We keep 3.52e+06/2.01e+08 =  1% of the original kernel matrix.

torch.Size([42878, 2])
We keep 5.33e+06/4.70e+08 =  1% of the original kernel matrix.

torch.Size([65239, 2])
We keep 2.39e+07/1.59e+09 =  1% of the original kernel matrix.

torch.Size([62315, 2])
We keep 1.23e+07/1.32e+09 =  0% of the original kernel matrix.

torch.Size([308670, 2])
We keep 6.39e+08/4.77e+10 =  1% of the original kernel matrix.

torch.Size([138477, 2])
We keep 5.27e+07/7.23e+09 =  0% of the original kernel matrix.

torch.Size([251278, 2])
We keep 2.39e+08/1.92e+10 =  1% of the original kernel matrix.

torch.Size([124488, 2])
We keep 3.49e+07/4.58e+09 =  0% of the original kernel matrix.

torch.Size([5862, 2])
We keep 2.00e+05/5.40e+06 =  3% of the original kernel matrix.

torch.Size([20287, 2])
We keep 1.46e+06/7.69e+07 =  1% of the original kernel matrix.

torch.Size([16086, 2])
We keep 1.35e+06/5.51e+07 =  2% of the original kernel matrix.

torch.Size([31233, 2])
We keep 3.32e+06/2.46e+08 =  1% of the original kernel matrix.

torch.Size([9821, 2])
We keep 6.13e+05/1.90e+07 =  3% of the original kernel matrix.

torch.Size([24748, 2])
We keep 2.27e+06/1.44e+08 =  1% of the original kernel matrix.

torch.Size([13304, 2])
We keep 8.45e+05/3.33e+07 =  2% of the original kernel matrix.

torch.Size([28754, 2])
We keep 2.77e+06/1.91e+08 =  1% of the original kernel matrix.

torch.Size([2203, 2])
We keep 6.63e+04/1.05e+06 =  6% of the original kernel matrix.

torch.Size([13419, 2])
We keep 8.55e+05/3.40e+07 =  2% of the original kernel matrix.

torch.Size([2254, 2])
We keep 6.35e+04/6.07e+05 = 10% of the original kernel matrix.

torch.Size([14054, 2])
We keep 7.23e+05/2.58e+07 =  2% of the original kernel matrix.

torch.Size([11941, 2])
We keep 7.28e+05/2.53e+07 =  2% of the original kernel matrix.

torch.Size([26784, 2])
We keep 2.50e+06/1.66e+08 =  1% of the original kernel matrix.

torch.Size([1930, 2])
We keep 2.72e+04/4.16e+05 =  6% of the original kernel matrix.

torch.Size([13588, 2])
We keep 6.33e+05/2.13e+07 =  2% of the original kernel matrix.

torch.Size([2053, 2])
We keep 3.80e+04/5.70e+05 =  6% of the original kernel matrix.

torch.Size([13734, 2])
We keep 7.06e+05/2.50e+07 =  2% of the original kernel matrix.

torch.Size([8129, 2])
We keep 7.85e+05/1.62e+07 =  4% of the original kernel matrix.

torch.Size([22594, 2])
We keep 2.12e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([9939, 2])
We keep 4.96e+05/1.69e+07 =  2% of the original kernel matrix.

torch.Size([25076, 2])
We keep 2.15e+06/1.36e+08 =  1% of the original kernel matrix.

torch.Size([10942, 2])
We keep 7.14e+05/2.37e+07 =  3% of the original kernel matrix.

torch.Size([25995, 2])
We keep 2.45e+06/1.61e+08 =  1% of the original kernel matrix.

torch.Size([34173, 2])
We keep 7.62e+06/4.09e+08 =  1% of the original kernel matrix.

torch.Size([45509, 2])
We keep 7.16e+06/6.69e+08 =  1% of the original kernel matrix.

torch.Size([36927, 2])
We keep 5.98e+06/3.85e+08 =  1% of the original kernel matrix.

torch.Size([47617, 2])
We keep 6.91e+06/6.49e+08 =  1% of the original kernel matrix.

torch.Size([8031, 2])
We keep 4.16e+05/1.24e+07 =  3% of the original kernel matrix.

torch.Size([22851, 2])
We keep 1.97e+06/1.17e+08 =  1% of the original kernel matrix.

torch.Size([8677, 2])
We keep 4.05e+05/1.28e+07 =  3% of the original kernel matrix.

torch.Size([23993, 2])
We keep 1.98e+06/1.19e+08 =  1% of the original kernel matrix.

torch.Size([7064, 2])
We keep 2.82e+05/7.32e+06 =  3% of the original kernel matrix.

torch.Size([21782, 2])
We keep 1.62e+06/8.95e+07 =  1% of the original kernel matrix.

torch.Size([21374, 2])
We keep 2.04e+06/1.01e+08 =  2% of the original kernel matrix.

torch.Size([35900, 2])
We keep 4.19e+06/3.32e+08 =  1% of the original kernel matrix.

torch.Size([26583, 2])
We keep 4.93e+06/2.30e+08 =  2% of the original kernel matrix.

torch.Size([39745, 2])
We keep 5.72e+06/5.02e+08 =  1% of the original kernel matrix.

torch.Size([7276, 2])
We keep 3.10e+05/8.49e+06 =  3% of the original kernel matrix.

torch.Size([22156, 2])
We keep 1.70e+06/9.64e+07 =  1% of the original kernel matrix.

torch.Size([15196, 2])
We keep 1.05e+06/4.29e+07 =  2% of the original kernel matrix.

torch.Size([30157, 2])
We keep 3.01e+06/2.17e+08 =  1% of the original kernel matrix.

torch.Size([6481, 2])
We keep 2.46e+05/6.59e+06 =  3% of the original kernel matrix.

torch.Size([21147, 2])
We keep 1.56e+06/8.50e+07 =  1% of the original kernel matrix.

torch.Size([7230, 2])
We keep 4.25e+05/1.06e+07 =  4% of the original kernel matrix.

torch.Size([21352, 2])
We keep 1.84e+06/1.08e+08 =  1% of the original kernel matrix.

torch.Size([24090, 2])
We keep 2.38e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([38117, 2])
We keep 4.48e+06/3.72e+08 =  1% of the original kernel matrix.

torch.Size([3763, 2])
We keep 1.03e+05/2.10e+06 =  4% of the original kernel matrix.

torch.Size([17042, 2])
We keep 1.05e+06/4.79e+07 =  2% of the original kernel matrix.

torch.Size([40193, 2])
We keep 6.81e+06/4.82e+08 =  1% of the original kernel matrix.

torch.Size([50088, 2])
We keep 7.61e+06/7.27e+08 =  1% of the original kernel matrix.

torch.Size([22129, 2])
We keep 1.94e+06/9.66e+07 =  2% of the original kernel matrix.

torch.Size([36501, 2])
We keep 4.08e+06/3.25e+08 =  1% of the original kernel matrix.

torch.Size([5690, 2])
We keep 1.88e+05/4.86e+06 =  3% of the original kernel matrix.

torch.Size([20044, 2])
We keep 1.41e+06/7.29e+07 =  1% of the original kernel matrix.

torch.Size([8172, 2])
We keep 4.04e+05/1.04e+07 =  3% of the original kernel matrix.

torch.Size([23279, 2])
We keep 1.84e+06/1.07e+08 =  1% of the original kernel matrix.

torch.Size([4909, 2])
We keep 1.71e+05/3.87e+06 =  4% of the original kernel matrix.

torch.Size([18688, 2])
We keep 1.31e+06/6.51e+07 =  2% of the original kernel matrix.

torch.Size([11422, 2])
We keep 6.05e+05/2.10e+07 =  2% of the original kernel matrix.

torch.Size([26258, 2])
We keep 2.33e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([11763, 2])
We keep 6.34e+05/2.26e+07 =  2% of the original kernel matrix.

torch.Size([27147, 2])
We keep 2.39e+06/1.58e+08 =  1% of the original kernel matrix.

torch.Size([8922, 2])
We keep 3.94e+05/1.18e+07 =  3% of the original kernel matrix.

torch.Size([24201, 2])
We keep 1.90e+06/1.14e+08 =  1% of the original kernel matrix.

torch.Size([16724, 2])
We keep 2.32e+06/7.49e+07 =  3% of the original kernel matrix.

torch.Size([31098, 2])
We keep 3.67e+06/2.86e+08 =  1% of the original kernel matrix.

torch.Size([10519, 2])
We keep 5.36e+05/1.77e+07 =  3% of the original kernel matrix.

torch.Size([25600, 2])
We keep 2.18e+06/1.39e+08 =  1% of the original kernel matrix.

torch.Size([8344, 2])
We keep 3.58e+05/1.08e+07 =  3% of the original kernel matrix.

torch.Size([23433, 2])
We keep 1.84e+06/1.09e+08 =  1% of the original kernel matrix.

torch.Size([7620, 2])
We keep 4.50e+05/1.18e+07 =  3% of the original kernel matrix.

torch.Size([22196, 2])
We keep 1.92e+06/1.13e+08 =  1% of the original kernel matrix.

torch.Size([11220, 2])
We keep 6.35e+05/2.19e+07 =  2% of the original kernel matrix.

torch.Size([26449, 2])
We keep 2.37e+06/1.55e+08 =  1% of the original kernel matrix.

torch.Size([12271, 2])
We keep 1.05e+06/3.38e+07 =  3% of the original kernel matrix.

torch.Size([27184, 2])
We keep 2.78e+06/1.92e+08 =  1% of the original kernel matrix.

torch.Size([2483, 2])
We keep 4.55e+04/6.66e+05 =  6% of the original kernel matrix.

torch.Size([14692, 2])
We keep 7.30e+05/2.70e+07 =  2% of the original kernel matrix.

torch.Size([2957, 2])
We keep 5.59e+04/1.06e+06 =  5% of the original kernel matrix.

torch.Size([15844, 2])
We keep 8.53e+05/3.40e+07 =  2% of the original kernel matrix.

torch.Size([10802, 2])
We keep 5.92e+05/2.03e+07 =  2% of the original kernel matrix.

torch.Size([25853, 2])
We keep 2.30e+06/1.49e+08 =  1% of the original kernel matrix.

torch.Size([41568, 2])
We keep 7.72e+06/5.55e+08 =  1% of the original kernel matrix.

torch.Size([51601, 2])
We keep 8.17e+06/7.79e+08 =  1% of the original kernel matrix.

torch.Size([6037, 2])
We keep 1.88e+05/4.93e+06 =  3% of the original kernel matrix.

torch.Size([20333, 2])
We keep 1.40e+06/7.35e+07 =  1% of the original kernel matrix.

torch.Size([3138, 2])
We keep 9.68e+04/1.76e+06 =  5% of the original kernel matrix.

torch.Size([15346, 2])
We keep 1.01e+06/4.39e+07 =  2% of the original kernel matrix.

torch.Size([20263, 2])
We keep 2.28e+06/1.05e+08 =  2% of the original kernel matrix.

torch.Size([35195, 2])
We keep 4.38e+06/3.40e+08 =  1% of the original kernel matrix.

torch.Size([4093, 2])
We keep 9.55e+04/2.07e+06 =  4% of the original kernel matrix.

torch.Size([17931, 2])
We keep 1.06e+06/4.76e+07 =  2% of the original kernel matrix.

torch.Size([5873, 2])
We keep 2.17e+05/5.46e+06 =  3% of the original kernel matrix.

torch.Size([20177, 2])
We keep 1.46e+06/7.73e+07 =  1% of the original kernel matrix.

torch.Size([5282, 2])
We keep 1.55e+05/3.78e+06 =  4% of the original kernel matrix.

torch.Size([19563, 2])
We keep 1.30e+06/6.43e+07 =  2% of the original kernel matrix.

torch.Size([5462, 2])
We keep 3.05e+05/7.00e+06 =  4% of the original kernel matrix.

torch.Size([19039, 2])
We keep 1.61e+06/8.75e+07 =  1% of the original kernel matrix.

torch.Size([2064, 2])
We keep 3.46e+04/5.40e+05 =  6% of the original kernel matrix.

torch.Size([13846, 2])
We keep 6.95e+05/2.43e+07 =  2% of the original kernel matrix.

torch.Size([17857, 2])
We keep 1.30e+06/5.75e+07 =  2% of the original kernel matrix.

torch.Size([32882, 2])
We keep 3.34e+06/2.51e+08 =  1% of the original kernel matrix.

torch.Size([10106, 2])
We keep 4.62e+05/1.58e+07 =  2% of the original kernel matrix.

torch.Size([25457, 2])
We keep 2.10e+06/1.31e+08 =  1% of the original kernel matrix.

torch.Size([9745, 2])
We keep 4.97e+05/1.61e+07 =  3% of the original kernel matrix.

torch.Size([24832, 2])
We keep 2.11e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([4030, 2])
We keep 8.38e+04/1.91e+06 =  4% of the original kernel matrix.

torch.Size([17926, 2])
We keep 1.03e+06/4.57e+07 =  2% of the original kernel matrix.

torch.Size([3672, 2])
We keep 8.58e+04/1.62e+06 =  5% of the original kernel matrix.

torch.Size([17191, 2])
We keep 9.80e+05/4.21e+07 =  2% of the original kernel matrix.

torch.Size([14196, 2])
We keep 1.02e+06/3.98e+07 =  2% of the original kernel matrix.

torch.Size([29416, 2])
We keep 2.92e+06/2.09e+08 =  1% of the original kernel matrix.

torch.Size([14375, 2])
We keep 1.11e+06/4.31e+07 =  2% of the original kernel matrix.

torch.Size([29464, 2])
We keep 3.02e+06/2.17e+08 =  1% of the original kernel matrix.

torch.Size([15166, 2])
We keep 1.09e+06/4.62e+07 =  2% of the original kernel matrix.

torch.Size([30419, 2])
We keep 3.14e+06/2.25e+08 =  1% of the original kernel matrix.

torch.Size([18989, 2])
We keep 1.63e+06/7.40e+07 =  2% of the original kernel matrix.

torch.Size([33771, 2])
We keep 3.73e+06/2.85e+08 =  1% of the original kernel matrix.

torch.Size([23333, 2])
We keep 3.87e+06/1.77e+08 =  2% of the original kernel matrix.

torch.Size([37144, 2])
We keep 5.14e+06/4.40e+08 =  1% of the original kernel matrix.

torch.Size([31475, 2])
We keep 4.66e+06/2.68e+08 =  1% of the original kernel matrix.

torch.Size([43883, 2])
We keep 6.03e+06/5.42e+08 =  1% of the original kernel matrix.

torch.Size([14766, 2])
We keep 8.42e+05/3.42e+07 =  2% of the original kernel matrix.

torch.Size([30114, 2])
We keep 2.78e+06/1.93e+08 =  1% of the original kernel matrix.

torch.Size([25525, 2])
We keep 2.83e+06/1.62e+08 =  1% of the original kernel matrix.

torch.Size([39265, 2])
We keep 4.95e+06/4.22e+08 =  1% of the original kernel matrix.

torch.Size([12532, 2])
We keep 8.55e+05/3.03e+07 =  2% of the original kernel matrix.

torch.Size([27645, 2])
We keep 2.65e+06/1.82e+08 =  1% of the original kernel matrix.

torch.Size([8778, 2])
We keep 4.54e+05/1.33e+07 =  3% of the original kernel matrix.

torch.Size([23813, 2])
We keep 1.98e+06/1.21e+08 =  1% of the original kernel matrix.

torch.Size([6335, 2])
We keep 2.77e+05/7.23e+06 =  3% of the original kernel matrix.

torch.Size([20650, 2])
We keep 1.61e+06/8.90e+07 =  1% of the original kernel matrix.

torch.Size([15946, 2])
We keep 1.44e+06/5.85e+07 =  2% of the original kernel matrix.

torch.Size([30750, 2])
We keep 3.39e+06/2.53e+08 =  1% of the original kernel matrix.

torch.Size([6758, 2])
We keep 3.13e+05/7.22e+06 =  4% of the original kernel matrix.

torch.Size([21514, 2])
We keep 1.61e+06/8.89e+07 =  1% of the original kernel matrix.

torch.Size([10908, 2])
We keep 5.09e+05/1.78e+07 =  2% of the original kernel matrix.

torch.Size([26199, 2])
We keep 2.18e+06/1.39e+08 =  1% of the original kernel matrix.

torch.Size([1360, 2])
We keep 2.16e+04/2.22e+05 =  9% of the original kernel matrix.

torch.Size([11729, 2])
We keep 5.30e+05/1.56e+07 =  3% of the original kernel matrix.

torch.Size([5296, 2])
We keep 2.02e+05/5.04e+06 =  4% of the original kernel matrix.

torch.Size([19253, 2])
We keep 1.43e+06/7.43e+07 =  1% of the original kernel matrix.

torch.Size([4267, 2])
We keep 1.06e+05/2.41e+06 =  4% of the original kernel matrix.

torch.Size([18094, 2])
We keep 1.12e+06/5.14e+07 =  2% of the original kernel matrix.

torch.Size([7546, 2])
We keep 3.01e+05/9.01e+06 =  3% of the original kernel matrix.

torch.Size([22311, 2])
We keep 1.74e+06/9.93e+07 =  1% of the original kernel matrix.

torch.Size([7123, 2])
We keep 4.92e+05/1.17e+07 =  4% of the original kernel matrix.

torch.Size([21117, 2])
We keep 1.90e+06/1.13e+08 =  1% of the original kernel matrix.

torch.Size([9035, 2])
We keep 5.45e+05/1.61e+07 =  3% of the original kernel matrix.

torch.Size([23815, 2])
We keep 2.15e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([10095, 2])
We keep 5.62e+05/1.88e+07 =  2% of the original kernel matrix.

torch.Size([25177, 2])
We keep 2.23e+06/1.43e+08 =  1% of the original kernel matrix.

torch.Size([11405, 2])
We keep 7.68e+05/2.54e+07 =  3% of the original kernel matrix.

torch.Size([26586, 2])
We keep 2.53e+06/1.67e+08 =  1% of the original kernel matrix.

torch.Size([7432, 2])
We keep 3.84e+05/1.07e+07 =  3% of the original kernel matrix.

torch.Size([22141, 2])
We keep 1.86e+06/1.08e+08 =  1% of the original kernel matrix.

torch.Size([6639, 2])
We keep 2.52e+05/6.77e+06 =  3% of the original kernel matrix.

torch.Size([21288, 2])
We keep 1.56e+06/8.61e+07 =  1% of the original kernel matrix.

torch.Size([2576, 2])
We keep 4.22e+04/7.06e+05 =  5% of the original kernel matrix.

torch.Size([14975, 2])
We keep 7.49e+05/2.78e+07 =  2% of the original kernel matrix.

torch.Size([22512, 2])
We keep 2.83e+06/1.38e+08 =  2% of the original kernel matrix.

torch.Size([36696, 2])
We keep 4.69e+06/3.89e+08 =  1% of the original kernel matrix.

torch.Size([2010, 2])
We keep 2.78e+04/4.20e+05 =  6% of the original kernel matrix.

torch.Size([13712, 2])
We keep 6.38e+05/2.14e+07 =  2% of the original kernel matrix.

torch.Size([31268, 2])
We keep 3.44e+06/2.20e+08 =  1% of the original kernel matrix.

torch.Size([43872, 2])
We keep 5.52e+06/4.91e+08 =  1% of the original kernel matrix.

torch.Size([4246, 2])
We keep 1.29e+05/2.76e+06 =  4% of the original kernel matrix.

torch.Size([17502, 2])
We keep 1.15e+06/5.50e+07 =  2% of the original kernel matrix.

torch.Size([5712, 2])
We keep 2.01e+05/5.27e+06 =  3% of the original kernel matrix.

torch.Size([20053, 2])
We keep 1.45e+06/7.60e+07 =  1% of the original kernel matrix.

torch.Size([8189, 2])
We keep 3.32e+05/9.99e+06 =  3% of the original kernel matrix.

torch.Size([23357, 2])
We keep 1.78e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([5259, 2])
We keep 1.83e+05/3.96e+06 =  4% of the original kernel matrix.

torch.Size([19603, 2])
We keep 1.31e+06/6.59e+07 =  1% of the original kernel matrix.

torch.Size([9885, 2])
We keep 4.62e+05/1.60e+07 =  2% of the original kernel matrix.

torch.Size([24954, 2])
We keep 2.11e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([2776, 2])
We keep 5.21e+04/9.35e+05 =  5% of the original kernel matrix.

torch.Size([15356, 2])
We keep 8.19e+05/3.20e+07 =  2% of the original kernel matrix.

torch.Size([11587, 2])
We keep 6.75e+05/2.18e+07 =  3% of the original kernel matrix.

torch.Size([26822, 2])
We keep 2.36e+06/1.55e+08 =  1% of the original kernel matrix.

torch.Size([40782, 2])
We keep 7.02e+06/5.48e+08 =  1% of the original kernel matrix.

torch.Size([50870, 2])
We keep 8.09e+06/7.75e+08 =  1% of the original kernel matrix.

torch.Size([9747, 2])
We keep 4.90e+05/1.67e+07 =  2% of the original kernel matrix.

torch.Size([24880, 2])
We keep 2.15e+06/1.35e+08 =  1% of the original kernel matrix.

torch.Size([33070, 2])
We keep 5.45e+06/3.03e+08 =  1% of the original kernel matrix.

torch.Size([44754, 2])
We keep 6.27e+06/5.76e+08 =  1% of the original kernel matrix.

torch.Size([7003, 2])
We keep 2.96e+05/7.53e+06 =  3% of the original kernel matrix.

torch.Size([21998, 2])
We keep 1.65e+06/9.08e+07 =  1% of the original kernel matrix.

torch.Size([13679, 2])
We keep 1.17e+06/4.00e+07 =  2% of the original kernel matrix.

torch.Size([28777, 2])
We keep 2.96e+06/2.09e+08 =  1% of the original kernel matrix.

torch.Size([3398, 2])
We keep 1.66e+05/3.19e+06 =  5% of the original kernel matrix.

torch.Size([15409, 2])
We keep 1.23e+06/5.91e+07 =  2% of the original kernel matrix.

torch.Size([9736, 2])
We keep 5.56e+05/1.60e+07 =  3% of the original kernel matrix.

torch.Size([24965, 2])
We keep 2.11e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([5950, 2])
We keep 2.19e+05/5.73e+06 =  3% of the original kernel matrix.

torch.Size([20206, 2])
We keep 1.47e+06/7.92e+07 =  1% of the original kernel matrix.

torch.Size([4935, 2])
We keep 1.54e+05/3.79e+06 =  4% of the original kernel matrix.

torch.Size([18854, 2])
We keep 1.30e+06/6.44e+07 =  2% of the original kernel matrix.

torch.Size([8126, 2])
We keep 4.28e+05/1.25e+07 =  3% of the original kernel matrix.

torch.Size([23010, 2])
We keep 1.97e+06/1.17e+08 =  1% of the original kernel matrix.

torch.Size([5247, 2])
We keep 1.48e+05/3.67e+06 =  4% of the original kernel matrix.

torch.Size([19583, 2])
We keep 1.28e+06/6.34e+07 =  2% of the original kernel matrix.

torch.Size([4422, 2])
We keep 1.10e+05/2.46e+06 =  4% of the original kernel matrix.

torch.Size([18349, 2])
We keep 1.11e+06/5.20e+07 =  2% of the original kernel matrix.

torch.Size([8807, 2])
We keep 4.32e+05/1.35e+07 =  3% of the original kernel matrix.

torch.Size([23552, 2])
We keep 1.99e+06/1.22e+08 =  1% of the original kernel matrix.

torch.Size([2568, 2])
We keep 4.47e+04/7.69e+05 =  5% of the original kernel matrix.

torch.Size([14908, 2])
We keep 7.66e+05/2.90e+07 =  2% of the original kernel matrix.

torch.Size([25055, 2])
We keep 2.98e+06/1.59e+08 =  1% of the original kernel matrix.

torch.Size([38890, 2])
We keep 4.97e+06/4.18e+08 =  1% of the original kernel matrix.

torch.Size([31646, 2])
We keep 6.00e+06/3.27e+08 =  1% of the original kernel matrix.

torch.Size([43501, 2])
We keep 6.49e+06/5.99e+08 =  1% of the original kernel matrix.

torch.Size([32350, 2])
We keep 5.76e+06/3.47e+08 =  1% of the original kernel matrix.

torch.Size([45010, 2])
We keep 6.86e+06/6.17e+08 =  1% of the original kernel matrix.

torch.Size([5639, 2])
We keep 1.71e+05/4.29e+06 =  3% of the original kernel matrix.

torch.Size([19952, 2])
We keep 1.36e+06/6.85e+07 =  1% of the original kernel matrix.

torch.Size([8245, 2])
We keep 3.42e+05/9.95e+06 =  3% of the original kernel matrix.

torch.Size([23341, 2])
We keep 1.79e+06/1.04e+08 =  1% of the original kernel matrix.

torch.Size([4427, 2])
We keep 2.08e+05/4.06e+06 =  5% of the original kernel matrix.

torch.Size([17780, 2])
We keep 1.34e+06/6.67e+07 =  2% of the original kernel matrix.

torch.Size([4475, 2])
We keep 1.28e+05/2.89e+06 =  4% of the original kernel matrix.

torch.Size([18195, 2])
We keep 1.19e+06/5.63e+07 =  2% of the original kernel matrix.

torch.Size([7628, 2])
We keep 3.44e+05/9.31e+06 =  3% of the original kernel matrix.

torch.Size([22702, 2])
We keep 1.76e+06/1.01e+08 =  1% of the original kernel matrix.

torch.Size([6105, 2])
We keep 2.03e+05/5.26e+06 =  3% of the original kernel matrix.

torch.Size([20475, 2])
We keep 1.43e+06/7.59e+07 =  1% of the original kernel matrix.

torch.Size([25346, 2])
We keep 3.44e+06/1.85e+08 =  1% of the original kernel matrix.

torch.Size([39579, 2])
We keep 5.34e+06/4.50e+08 =  1% of the original kernel matrix.

torch.Size([12049, 2])
We keep 5.85e+05/2.22e+07 =  2% of the original kernel matrix.

torch.Size([27439, 2])
We keep 2.37e+06/1.56e+08 =  1% of the original kernel matrix.

torch.Size([21776, 2])
We keep 4.88e+06/2.10e+08 =  2% of the original kernel matrix.

torch.Size([35438, 2])
We keep 5.49e+06/4.80e+08 =  1% of the original kernel matrix.

torch.Size([13025, 2])
We keep 8.75e+05/3.43e+07 =  2% of the original kernel matrix.

torch.Size([27872, 2])
We keep 2.79e+06/1.94e+08 =  1% of the original kernel matrix.

torch.Size([41297, 2])
We keep 8.14e+06/5.82e+08 =  1% of the original kernel matrix.

torch.Size([50630, 2])
We keep 8.29e+06/7.98e+08 =  1% of the original kernel matrix.

torch.Size([6906, 2])
We keep 2.30e+05/6.65e+06 =  3% of the original kernel matrix.

torch.Size([21760, 2])
We keep 1.55e+06/8.53e+07 =  1% of the original kernel matrix.

torch.Size([6520, 2])
We keep 3.22e+05/7.03e+06 =  4% of the original kernel matrix.

torch.Size([21051, 2])
We keep 1.60e+06/8.78e+07 =  1% of the original kernel matrix.

torch.Size([9852, 2])
We keep 5.96e+05/1.87e+07 =  3% of the original kernel matrix.

torch.Size([24914, 2])
We keep 2.26e+06/1.43e+08 =  1% of the original kernel matrix.

torch.Size([2202, 2])
We keep 4.55e+04/5.23e+05 =  8% of the original kernel matrix.

torch.Size([14161, 2])
We keep 6.97e+05/2.39e+07 =  2% of the original kernel matrix.

torch.Size([23362, 2])
We keep 2.78e+06/1.32e+08 =  2% of the original kernel matrix.

torch.Size([37709, 2])
We keep 4.67e+06/3.80e+08 =  1% of the original kernel matrix.

torch.Size([3664, 2])
We keep 8.54e+04/1.68e+06 =  5% of the original kernel matrix.

torch.Size([16922, 2])
We keep 9.97e+05/4.29e+07 =  2% of the original kernel matrix.

torch.Size([15734, 2])
We keep 1.18e+06/5.01e+07 =  2% of the original kernel matrix.

torch.Size([30799, 2])
We keep 3.20e+06/2.34e+08 =  1% of the original kernel matrix.

torch.Size([3469, 2])
We keep 1.01e+05/1.90e+06 =  5% of the original kernel matrix.

torch.Size([16213, 2])
We keep 1.03e+06/4.56e+07 =  2% of the original kernel matrix.

torch.Size([8893, 2])
We keep 4.91e+05/1.44e+07 =  3% of the original kernel matrix.

torch.Size([23924, 2])
We keep 2.03e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([8104, 2])
We keep 2.88e+05/8.81e+06 =  3% of the original kernel matrix.

torch.Size([23240, 2])
We keep 1.71e+06/9.83e+07 =  1% of the original kernel matrix.

torch.Size([5756, 2])
We keep 1.72e+05/4.55e+06 =  3% of the original kernel matrix.

torch.Size([20385, 2])
We keep 1.37e+06/7.06e+07 =  1% of the original kernel matrix.

torch.Size([7624, 2])
We keep 3.05e+05/8.98e+06 =  3% of the original kernel matrix.

torch.Size([22499, 2])
We keep 1.74e+06/9.92e+07 =  1% of the original kernel matrix.

torch.Size([15220, 2])
We keep 1.11e+06/4.44e+07 =  2% of the original kernel matrix.

torch.Size([30279, 2])
We keep 3.09e+06/2.20e+08 =  1% of the original kernel matrix.

torch.Size([1204, 2])
We keep 1.17e+04/1.27e+05 =  9% of the original kernel matrix.

torch.Size([11528, 2])
We keep 4.44e+05/1.18e+07 =  3% of the original kernel matrix.

torch.Size([2609, 2])
We keep 7.38e+04/1.30e+06 =  5% of the original kernel matrix.

torch.Size([14361, 2])
We keep 9.25e+05/3.78e+07 =  2% of the original kernel matrix.

torch.Size([3502, 2])
We keep 8.53e+04/1.75e+06 =  4% of the original kernel matrix.

torch.Size([16565, 2])
We keep 9.91e+05/4.38e+07 =  2% of the original kernel matrix.

torch.Size([21680, 2])
We keep 1.91e+06/9.26e+07 =  2% of the original kernel matrix.

torch.Size([36158, 2])
We keep 4.00e+06/3.18e+08 =  1% of the original kernel matrix.

torch.Size([4872, 2])
We keep 1.22e+05/2.94e+06 =  4% of the original kernel matrix.

torch.Size([19143, 2])
We keep 1.18e+06/5.67e+07 =  2% of the original kernel matrix.

torch.Size([12886, 2])
We keep 1.10e+06/3.52e+07 =  3% of the original kernel matrix.

torch.Size([28181, 2])
We keep 2.83e+06/1.96e+08 =  1% of the original kernel matrix.

torch.Size([14983, 2])
We keep 9.17e+06/5.92e+07 = 15% of the original kernel matrix.

torch.Size([30158, 2])
We keep 3.37e+06/2.55e+08 =  1% of the original kernel matrix.

torch.Size([14309, 2])
We keep 1.19e+06/4.40e+07 =  2% of the original kernel matrix.

torch.Size([29278, 2])
We keep 3.04e+06/2.19e+08 =  1% of the original kernel matrix.

torch.Size([11502, 2])
We keep 6.33e+05/2.26e+07 =  2% of the original kernel matrix.

torch.Size([26787, 2])
We keep 2.39e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([14537, 2])
We keep 1.79e+06/5.27e+07 =  3% of the original kernel matrix.

torch.Size([29456, 2])
We keep 3.28e+06/2.40e+08 =  1% of the original kernel matrix.

torch.Size([4048, 2])
We keep 1.13e+05/2.41e+06 =  4% of the original kernel matrix.

torch.Size([17430, 2])
We keep 1.12e+06/5.14e+07 =  2% of the original kernel matrix.

torch.Size([19608, 2])
We keep 1.69e+06/8.22e+07 =  2% of the original kernel matrix.

torch.Size([34348, 2])
We keep 3.84e+06/3.00e+08 =  1% of the original kernel matrix.

torch.Size([7014, 2])
We keep 2.84e+05/8.15e+06 =  3% of the original kernel matrix.

torch.Size([21609, 2])
We keep 1.67e+06/9.45e+07 =  1% of the original kernel matrix.

torch.Size([18927, 2])
We keep 2.29e+06/8.87e+07 =  2% of the original kernel matrix.

torch.Size([33799, 2])
We keep 3.99e+06/3.12e+08 =  1% of the original kernel matrix.

torch.Size([7064, 2])
We keep 2.32e+05/6.67e+06 =  3% of the original kernel matrix.

torch.Size([22325, 2])
We keep 1.57e+06/8.55e+07 =  1% of the original kernel matrix.

torch.Size([19109, 2])
We keep 1.65e+06/7.59e+07 =  2% of the original kernel matrix.

torch.Size([33741, 2])
We keep 3.72e+06/2.88e+08 =  1% of the original kernel matrix.

torch.Size([11420, 2])
We keep 6.32e+05/2.25e+07 =  2% of the original kernel matrix.

torch.Size([26675, 2])
We keep 2.39e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([12444, 2])
We keep 7.38e+05/2.70e+07 =  2% of the original kernel matrix.

torch.Size([27672, 2])
We keep 2.56e+06/1.72e+08 =  1% of the original kernel matrix.

torch.Size([14230, 2])
We keep 1.61e+06/5.54e+07 =  2% of the original kernel matrix.

torch.Size([28878, 2])
We keep 3.33e+06/2.46e+08 =  1% of the original kernel matrix.

torch.Size([16906, 2])
We keep 1.41e+06/6.00e+07 =  2% of the original kernel matrix.

torch.Size([31825, 2])
We keep 3.43e+06/2.56e+08 =  1% of the original kernel matrix.

torch.Size([36912, 2])
We keep 1.16e+07/4.50e+08 =  2% of the original kernel matrix.

torch.Size([47093, 2])
We keep 7.41e+06/7.02e+08 =  1% of the original kernel matrix.

torch.Size([7645, 2])
We keep 3.90e+05/1.04e+07 =  3% of the original kernel matrix.

torch.Size([22341, 2])
We keep 1.82e+06/1.07e+08 =  1% of the original kernel matrix.

torch.Size([3380, 2])
We keep 8.67e+04/1.68e+06 =  5% of the original kernel matrix.

torch.Size([16356, 2])
We keep 9.95e+05/4.30e+07 =  2% of the original kernel matrix.

torch.Size([4542, 2])
We keep 1.36e+05/3.02e+06 =  4% of the original kernel matrix.

torch.Size([18265, 2])
We keep 1.18e+06/5.75e+07 =  2% of the original kernel matrix.

torch.Size([4474, 2])
We keep 2.14e+05/3.02e+06 =  7% of the original kernel matrix.

torch.Size([18236, 2])
We keep 1.19e+06/5.75e+07 =  2% of the original kernel matrix.

torch.Size([13337, 2])
We keep 1.04e+06/3.70e+07 =  2% of the original kernel matrix.

torch.Size([28523, 2])
We keep 2.89e+06/2.01e+08 =  1% of the original kernel matrix.

torch.Size([8257, 2])
We keep 3.86e+05/1.19e+07 =  3% of the original kernel matrix.

torch.Size([23011, 2])
We keep 1.92e+06/1.14e+08 =  1% of the original kernel matrix.

torch.Size([3996, 2])
We keep 9.27e+04/2.00e+06 =  4% of the original kernel matrix.

torch.Size([17793, 2])
We keep 1.04e+06/4.68e+07 =  2% of the original kernel matrix.

torch.Size([5573, 2])
We keep 2.22e+05/4.86e+06 =  4% of the original kernel matrix.

torch.Size([19900, 2])
We keep 1.42e+06/7.30e+07 =  1% of the original kernel matrix.

torch.Size([11839, 2])
We keep 6.63e+05/2.31e+07 =  2% of the original kernel matrix.

torch.Size([27064, 2])
We keep 2.41e+06/1.59e+08 =  1% of the original kernel matrix.

torch.Size([4193, 2])
We keep 1.09e+05/2.38e+06 =  4% of the original kernel matrix.

torch.Size([17988, 2])
We keep 1.10e+06/5.10e+07 =  2% of the original kernel matrix.

torch.Size([32500, 2])
We keep 3.74e+06/2.61e+08 =  1% of the original kernel matrix.

torch.Size([44840, 2])
We keep 5.94e+06/5.35e+08 =  1% of the original kernel matrix.

torch.Size([7484, 2])
We keep 3.09e+05/8.42e+06 =  3% of the original kernel matrix.

torch.Size([22402, 2])
We keep 1.68e+06/9.60e+07 =  1% of the original kernel matrix.

torch.Size([63342, 2])
We keep 1.17e+07/1.17e+09 =  1% of the original kernel matrix.

torch.Size([63143, 2])
We keep 1.07e+07/1.13e+09 =  0% of the original kernel matrix.

torch.Size([19131, 2])
We keep 2.01e+06/8.99e+07 =  2% of the original kernel matrix.

torch.Size([34033, 2])
We keep 4.08e+06/3.14e+08 =  1% of the original kernel matrix.

torch.Size([8922, 2])
We keep 4.59e+05/1.26e+07 =  3% of the original kernel matrix.

torch.Size([24173, 2])
We keep 1.96e+06/1.17e+08 =  1% of the original kernel matrix.

torch.Size([2588, 2])
We keep 3.86e+04/6.56e+05 =  5% of the original kernel matrix.

torch.Size([15241, 2])
We keep 7.35e+05/2.68e+07 =  2% of the original kernel matrix.

torch.Size([18212, 2])
We keep 2.00e+06/7.92e+07 =  2% of the original kernel matrix.

torch.Size([33683, 2])
We keep 3.86e+06/2.95e+08 =  1% of the original kernel matrix.

torch.Size([11753, 2])
We keep 7.20e+05/2.46e+07 =  2% of the original kernel matrix.

torch.Size([27018, 2])
We keep 2.48e+06/1.64e+08 =  1% of the original kernel matrix.

torch.Size([5003, 2])
We keep 2.03e+05/4.44e+06 =  4% of the original kernel matrix.

torch.Size([18683, 2])
We keep 1.36e+06/6.98e+07 =  1% of the original kernel matrix.

torch.Size([45734, 2])
We keep 9.21e+06/7.08e+08 =  1% of the original kernel matrix.

torch.Size([54670, 2])
We keep 9.04e+06/8.81e+08 =  1% of the original kernel matrix.

torch.Size([29896, 2])
We keep 3.13e+06/2.00e+08 =  1% of the original kernel matrix.

torch.Size([42681, 2])
We keep 5.35e+06/4.68e+08 =  1% of the original kernel matrix.

torch.Size([4657, 2])
We keep 1.23e+05/2.79e+06 =  4% of the original kernel matrix.

torch.Size([18769, 2])
We keep 1.16e+06/5.53e+07 =  2% of the original kernel matrix.

torch.Size([4417, 2])
We keep 1.10e+05/2.45e+06 =  4% of the original kernel matrix.

torch.Size([18468, 2])
We keep 1.12e+06/5.18e+07 =  2% of the original kernel matrix.

torch.Size([11032, 2])
We keep 8.99e+05/2.49e+07 =  3% of the original kernel matrix.

torch.Size([26041, 2])
We keep 2.50e+06/1.65e+08 =  1% of the original kernel matrix.

torch.Size([2602, 2])
We keep 5.77e+04/9.51e+05 =  6% of the original kernel matrix.

torch.Size([14729, 2])
We keep 8.26e+05/3.23e+07 =  2% of the original kernel matrix.

torch.Size([3797, 2])
We keep 1.07e+05/2.35e+06 =  4% of the original kernel matrix.

torch.Size([16960, 2])
We keep 1.11e+06/5.07e+07 =  2% of the original kernel matrix.

torch.Size([1935, 2])
We keep 2.25e+04/3.48e+05 =  6% of the original kernel matrix.

torch.Size([13726, 2])
We keep 6.00e+05/1.95e+07 =  3% of the original kernel matrix.

torch.Size([3085, 2])
We keep 6.66e+04/1.25e+06 =  5% of the original kernel matrix.

torch.Size([16010, 2])
We keep 9.05e+05/3.69e+07 =  2% of the original kernel matrix.

torch.Size([11870, 2])
We keep 1.04e+06/3.55e+07 =  2% of the original kernel matrix.

torch.Size([26600, 2])
We keep 2.84e+06/1.97e+08 =  1% of the original kernel matrix.

torch.Size([6951, 2])
We keep 3.02e+05/7.96e+06 =  3% of the original kernel matrix.

torch.Size([21596, 2])
We keep 1.66e+06/9.34e+07 =  1% of the original kernel matrix.

torch.Size([14038, 2])
We keep 1.90e+06/5.88e+07 =  3% of the original kernel matrix.

torch.Size([28817, 2])
We keep 3.42e+06/2.54e+08 =  1% of the original kernel matrix.

torch.Size([3749, 2])
We keep 9.83e+04/2.15e+06 =  4% of the original kernel matrix.

torch.Size([17171, 2])
We keep 1.07e+06/4.86e+07 =  2% of the original kernel matrix.

torch.Size([10942, 2])
We keep 6.68e+05/2.24e+07 =  2% of the original kernel matrix.

torch.Size([25919, 2])
We keep 2.40e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([8505, 2])
We keep 4.70e+05/1.35e+07 =  3% of the original kernel matrix.

torch.Size([23225, 2])
We keep 1.99e+06/1.21e+08 =  1% of the original kernel matrix.

torch.Size([10566, 2])
We keep 7.78e+05/2.49e+07 =  3% of the original kernel matrix.

torch.Size([25492, 2])
We keep 2.52e+06/1.65e+08 =  1% of the original kernel matrix.

torch.Size([12466, 2])
We keep 8.26e+05/2.77e+07 =  2% of the original kernel matrix.

torch.Size([27492, 2])
We keep 2.59e+06/1.74e+08 =  1% of the original kernel matrix.

torch.Size([5598, 2])
We keep 1.79e+05/4.62e+06 =  3% of the original kernel matrix.

torch.Size([19810, 2])
We keep 1.38e+06/7.11e+07 =  1% of the original kernel matrix.

torch.Size([3213, 2])
We keep 7.33e+04/1.36e+06 =  5% of the original kernel matrix.

torch.Size([16152, 2])
We keep 9.25e+05/3.86e+07 =  2% of the original kernel matrix.

torch.Size([17323, 2])
We keep 1.63e+06/6.81e+07 =  2% of the original kernel matrix.

torch.Size([32097, 2])
We keep 3.59e+06/2.73e+08 =  1% of the original kernel matrix.

torch.Size([4408, 2])
We keep 1.27e+05/2.89e+06 =  4% of the original kernel matrix.

torch.Size([17951, 2])
We keep 1.20e+06/5.63e+07 =  2% of the original kernel matrix.

torch.Size([3708, 2])
We keep 1.02e+05/2.03e+06 =  4% of the original kernel matrix.

torch.Size([16988, 2])
We keep 1.05e+06/4.72e+07 =  2% of the original kernel matrix.

torch.Size([7272, 2])
We keep 3.84e+05/1.10e+07 =  3% of the original kernel matrix.

torch.Size([21896, 2])
We keep 1.86e+06/1.10e+08 =  1% of the original kernel matrix.

torch.Size([6470, 2])
We keep 2.20e+05/6.18e+06 =  3% of the original kernel matrix.

torch.Size([21108, 2])
We keep 1.52e+06/8.22e+07 =  1% of the original kernel matrix.

torch.Size([15787, 2])
We keep 1.30e+06/5.37e+07 =  2% of the original kernel matrix.

torch.Size([31025, 2])
We keep 3.35e+06/2.43e+08 =  1% of the original kernel matrix.

torch.Size([6331, 2])
We keep 2.36e+05/6.52e+06 =  3% of the original kernel matrix.

torch.Size([20879, 2])
We keep 1.56e+06/8.45e+07 =  1% of the original kernel matrix.

torch.Size([7411, 2])
We keep 3.91e+05/9.43e+06 =  4% of the original kernel matrix.

torch.Size([22290, 2])
We keep 1.78e+06/1.02e+08 =  1% of the original kernel matrix.

torch.Size([12526, 2])
We keep 8.10e+05/3.03e+07 =  2% of the original kernel matrix.

torch.Size([27770, 2])
We keep 2.67e+06/1.82e+08 =  1% of the original kernel matrix.

torch.Size([22072, 2])
We keep 2.04e+06/1.01e+08 =  2% of the original kernel matrix.

torch.Size([36663, 2])
We keep 4.17e+06/3.33e+08 =  1% of the original kernel matrix.

torch.Size([7485, 2])
We keep 2.02e+06/1.37e+07 = 14% of the original kernel matrix.

torch.Size([21744, 2])
We keep 2.02e+06/1.22e+08 =  1% of the original kernel matrix.

torch.Size([30077, 2])
We keep 5.13e+06/2.40e+08 =  2% of the original kernel matrix.

torch.Size([42782, 2])
We keep 5.76e+06/5.12e+08 =  1% of the original kernel matrix.

torch.Size([59782, 2])
We keep 7.39e+07/2.91e+09 =  2% of the original kernel matrix.

torch.Size([56764, 2])
We keep 1.55e+07/1.78e+09 =  0% of the original kernel matrix.

torch.Size([11102, 2])
We keep 1.54e+06/2.53e+07 =  6% of the original kernel matrix.

torch.Size([26617, 2])
We keep 2.42e+06/1.66e+08 =  1% of the original kernel matrix.

torch.Size([19066, 2])
We keep 2.08e+06/8.80e+07 =  2% of the original kernel matrix.

torch.Size([33681, 2])
We keep 3.92e+06/3.11e+08 =  1% of the original kernel matrix.

torch.Size([1970, 2])
We keep 3.74e+04/4.83e+05 =  7% of the original kernel matrix.

torch.Size([13370, 2])
We keep 6.72e+05/2.30e+07 =  2% of the original kernel matrix.

torch.Size([15719, 2])
We keep 1.27e+06/5.15e+07 =  2% of the original kernel matrix.

torch.Size([30852, 2])
We keep 3.29e+06/2.38e+08 =  1% of the original kernel matrix.

torch.Size([88357, 2])
We keep 2.69e+08/3.26e+09 =  8% of the original kernel matrix.

torch.Size([71834, 2])
We keep 1.67e+07/1.89e+09 =  0% of the original kernel matrix.

torch.Size([262737, 2])
We keep 8.10e+08/4.30e+10 =  1% of the original kernel matrix.

torch.Size([123848, 2])
We keep 4.94e+07/6.86e+09 =  0% of the original kernel matrix.

torch.Size([9614, 2])
We keep 5.11e+05/1.68e+07 =  3% of the original kernel matrix.

torch.Size([24782, 2])
We keep 2.15e+06/1.36e+08 =  1% of the original kernel matrix.

torch.Size([242643, 2])
We keep 2.71e+08/2.36e+10 =  1% of the original kernel matrix.

torch.Size([121163, 2])
We keep 3.80e+07/5.09e+09 =  0% of the original kernel matrix.

torch.Size([55323, 2])
We keep 4.05e+07/1.28e+09 =  3% of the original kernel matrix.

torch.Size([56610, 2])
We keep 1.11e+07/1.18e+09 =  0% of the original kernel matrix.

torch.Size([61586, 2])
We keep 2.96e+07/1.60e+09 =  1% of the original kernel matrix.

torch.Size([59916, 2])
We keep 1.21e+07/1.33e+09 =  0% of the original kernel matrix.

torch.Size([166185, 2])
We keep 7.04e+08/1.71e+10 =  4% of the original kernel matrix.

torch.Size([99287, 2])
We keep 3.27e+07/4.33e+09 =  0% of the original kernel matrix.

torch.Size([5908, 2])
We keep 1.71e+05/4.33e+06 =  3% of the original kernel matrix.

torch.Size([20744, 2])
We keep 1.35e+06/6.89e+07 =  1% of the original kernel matrix.

torch.Size([15810, 2])
We keep 1.31e+06/5.33e+07 =  2% of the original kernel matrix.

torch.Size([30593, 2])
We keep 3.30e+06/2.42e+08 =  1% of the original kernel matrix.

torch.Size([438991, 2])
We keep 4.98e+08/6.52e+10 =  0% of the original kernel matrix.

torch.Size([167431, 2])
We keep 5.93e+07/8.45e+09 =  0% of the original kernel matrix.

torch.Size([1087652, 2])
We keep 1.75e+09/2.95e+11 =  0% of the original kernel matrix.

torch.Size([268419, 2])
We keep 1.15e+08/1.80e+10 =  0% of the original kernel matrix.

torch.Size([15281, 2])
We keep 1.64e+06/5.26e+07 =  3% of the original kernel matrix.

torch.Size([30203, 2])
We keep 3.26e+06/2.40e+08 =  1% of the original kernel matrix.

torch.Size([76875, 2])
We keep 2.11e+07/1.69e+09 =  1% of the original kernel matrix.

torch.Size([68684, 2])
We keep 1.24e+07/1.36e+09 =  0% of the original kernel matrix.

torch.Size([33738, 2])
We keep 7.44e+06/3.63e+08 =  2% of the original kernel matrix.

torch.Size([45163, 2])
We keep 6.78e+06/6.31e+08 =  1% of the original kernel matrix.

torch.Size([102774, 2])
We keep 1.97e+08/3.60e+09 =  5% of the original kernel matrix.

torch.Size([77896, 2])
We keep 1.70e+07/1.99e+09 =  0% of the original kernel matrix.

torch.Size([116374, 2])
We keep 1.52e+08/7.05e+09 =  2% of the original kernel matrix.

torch.Size([81007, 2])
We keep 2.23e+07/2.78e+09 =  0% of the original kernel matrix.

torch.Size([59033, 2])
We keep 7.74e+07/2.11e+09 =  3% of the original kernel matrix.

torch.Size([56766, 2])
We keep 1.36e+07/1.52e+09 =  0% of the original kernel matrix.

torch.Size([72589, 2])
We keep 3.59e+07/2.11e+09 =  1% of the original kernel matrix.

torch.Size([65692, 2])
We keep 1.36e+07/1.52e+09 =  0% of the original kernel matrix.

torch.Size([35586, 2])
We keep 7.33e+06/3.54e+08 =  2% of the original kernel matrix.

torch.Size([46727, 2])
We keep 6.67e+06/6.23e+08 =  1% of the original kernel matrix.

torch.Size([10908, 2])
We keep 5.90e+05/1.90e+07 =  3% of the original kernel matrix.

torch.Size([26519, 2])
We keep 2.25e+06/1.44e+08 =  1% of the original kernel matrix.

torch.Size([341548, 2])
We keep 1.42e+09/9.80e+10 =  1% of the original kernel matrix.

torch.Size([134215, 2])
We keep 7.10e+07/1.04e+10 =  0% of the original kernel matrix.

torch.Size([16392, 2])
We keep 3.30e+06/7.25e+07 =  4% of the original kernel matrix.

torch.Size([31369, 2])
We keep 3.51e+06/2.82e+08 =  1% of the original kernel matrix.

torch.Size([11792, 2])
We keep 1.45e+06/2.78e+07 =  5% of the original kernel matrix.

torch.Size([27283, 2])
We keep 2.56e+06/1.75e+08 =  1% of the original kernel matrix.

torch.Size([67003, 2])
We keep 2.54e+07/1.49e+09 =  1% of the original kernel matrix.

torch.Size([63399, 2])
We keep 1.17e+07/1.28e+09 =  0% of the original kernel matrix.

torch.Size([126695, 2])
We keep 1.24e+08/8.50e+09 =  1% of the original kernel matrix.

torch.Size([82740, 2])
We keep 2.46e+07/3.05e+09 =  0% of the original kernel matrix.

torch.Size([454571, 2])
We keep 5.65e+08/6.73e+10 =  0% of the original kernel matrix.

torch.Size([170227, 2])
We keep 5.99e+07/8.58e+09 =  0% of the original kernel matrix.

torch.Size([207894, 2])
We keep 1.07e+08/1.38e+10 =  0% of the original kernel matrix.

torch.Size([112031, 2])
We keep 3.01e+07/3.89e+09 =  0% of the original kernel matrix.

torch.Size([6947, 2])
We keep 3.76e+05/9.99e+06 =  3% of the original kernel matrix.

torch.Size([21102, 2])
We keep 1.77e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([73805, 2])
We keep 6.58e+07/1.99e+09 =  3% of the original kernel matrix.

torch.Size([65986, 2])
We keep 1.34e+07/1.47e+09 =  0% of the original kernel matrix.

torch.Size([22793, 2])
We keep 7.61e+06/2.34e+08 =  3% of the original kernel matrix.

torch.Size([36435, 2])
We keep 5.81e+06/5.07e+08 =  1% of the original kernel matrix.

torch.Size([52264, 2])
We keep 1.79e+07/9.91e+08 =  1% of the original kernel matrix.

torch.Size([56221, 2])
We keep 1.01e+07/1.04e+09 =  0% of the original kernel matrix.

torch.Size([145067, 2])
We keep 7.33e+07/6.43e+09 =  1% of the original kernel matrix.

torch.Size([93207, 2])
We keep 2.15e+07/2.65e+09 =  0% of the original kernel matrix.

torch.Size([17350, 2])
We keep 1.34e+06/5.96e+07 =  2% of the original kernel matrix.

torch.Size([32301, 2])
We keep 3.41e+06/2.56e+08 =  1% of the original kernel matrix.

torch.Size([143039, 2])
We keep 7.52e+07/6.80e+09 =  1% of the original kernel matrix.

torch.Size([91529, 2])
We keep 2.22e+07/2.73e+09 =  0% of the original kernel matrix.

torch.Size([2542, 2])
We keep 4.24e+04/7.45e+05 =  5% of the original kernel matrix.

torch.Size([14870, 2])
We keep 7.54e+05/2.86e+07 =  2% of the original kernel matrix.

torch.Size([20808, 2])
We keep 2.56e+06/1.01e+08 =  2% of the original kernel matrix.

torch.Size([35444, 2])
We keep 4.11e+06/3.32e+08 =  1% of the original kernel matrix.

torch.Size([205215, 2])
We keep 2.72e+08/2.10e+10 =  1% of the original kernel matrix.

torch.Size([109174, 2])
We keep 3.64e+07/4.79e+09 =  0% of the original kernel matrix.

torch.Size([99807, 2])
We keep 9.95e+07/5.19e+09 =  1% of the original kernel matrix.

torch.Size([73562, 2])
We keep 1.97e+07/2.39e+09 =  0% of the original kernel matrix.

torch.Size([101127, 2])
We keep 6.13e+07/4.46e+09 =  1% of the original kernel matrix.

torch.Size([74889, 2])
We keep 1.87e+07/2.21e+09 =  0% of the original kernel matrix.

torch.Size([17822, 2])
We keep 4.17e+06/1.19e+08 =  3% of the original kernel matrix.

torch.Size([32260, 2])
We keep 4.41e+06/3.62e+08 =  1% of the original kernel matrix.

torch.Size([429146, 2])
We keep 4.02e+08/7.26e+10 =  0% of the original kernel matrix.

torch.Size([164563, 2])
We keep 6.13e+07/8.92e+09 =  0% of the original kernel matrix.

torch.Size([30344, 2])
We keep 2.92e+06/2.00e+08 =  1% of the original kernel matrix.

torch.Size([43166, 2])
We keep 5.31e+06/4.68e+08 =  1% of the original kernel matrix.

torch.Size([53276, 2])
We keep 9.19e+06/8.27e+08 =  1% of the original kernel matrix.

torch.Size([54564, 2])
We keep 8.73e+06/9.52e+08 =  0% of the original kernel matrix.

torch.Size([150716, 2])
We keep 1.09e+08/9.91e+09 =  1% of the original kernel matrix.

torch.Size([93954, 2])
We keep 2.65e+07/3.29e+09 =  0% of the original kernel matrix.

torch.Size([10179, 2])
We keep 5.65e+05/1.72e+07 =  3% of the original kernel matrix.

torch.Size([25602, 2])
We keep 2.18e+06/1.37e+08 =  1% of the original kernel matrix.

torch.Size([333640, 2])
We keep 4.39e+08/3.55e+10 =  1% of the original kernel matrix.

torch.Size([144421, 2])
We keep 4.55e+07/6.23e+09 =  0% of the original kernel matrix.

torch.Size([372168, 2])
We keep 7.60e+08/6.72e+10 =  1% of the original kernel matrix.

torch.Size([154791, 2])
We keep 6.20e+07/8.58e+09 =  0% of the original kernel matrix.

torch.Size([642143, 2])
We keep 1.45e+09/1.53e+11 =  0% of the original kernel matrix.

torch.Size([200688, 2])
We keep 8.69e+07/1.30e+10 =  0% of the original kernel matrix.

torch.Size([132719, 2])
We keep 8.48e+07/7.34e+09 =  1% of the original kernel matrix.

torch.Size([86795, 2])
We keep 2.29e+07/2.84e+09 =  0% of the original kernel matrix.

torch.Size([68844, 2])
We keep 2.86e+07/1.88e+09 =  1% of the original kernel matrix.

torch.Size([63540, 2])
We keep 1.29e+07/1.44e+09 =  0% of the original kernel matrix.

torch.Size([30593, 2])
We keep 5.67e+06/2.86e+08 =  1% of the original kernel matrix.

torch.Size([42626, 2])
We keep 6.10e+06/5.59e+08 =  1% of the original kernel matrix.

torch.Size([15627, 2])
We keep 9.77e+05/4.31e+07 =  2% of the original kernel matrix.

torch.Size([30538, 2])
We keep 2.98e+06/2.17e+08 =  1% of the original kernel matrix.

torch.Size([81109, 2])
We keep 1.09e+08/4.37e+09 =  2% of the original kernel matrix.

torch.Size([66590, 2])
We keep 1.86e+07/2.19e+09 =  0% of the original kernel matrix.

torch.Size([26603, 2])
We keep 2.93e+06/1.71e+08 =  1% of the original kernel matrix.

torch.Size([40311, 2])
We keep 5.08e+06/4.33e+08 =  1% of the original kernel matrix.

torch.Size([47701, 2])
We keep 1.70e+07/8.88e+08 =  1% of the original kernel matrix.

torch.Size([54101, 2])
We keep 9.72e+06/9.86e+08 =  0% of the original kernel matrix.

torch.Size([64546, 2])
We keep 5.29e+07/2.04e+09 =  2% of the original kernel matrix.

torch.Size([62480, 2])
We keep 1.32e+07/1.50e+09 =  0% of the original kernel matrix.

torch.Size([40252, 2])
We keep 1.82e+07/5.58e+08 =  3% of the original kernel matrix.

torch.Size([49492, 2])
We keep 7.97e+06/7.82e+08 =  1% of the original kernel matrix.

torch.Size([24995, 2])
We keep 1.03e+07/3.35e+08 =  3% of the original kernel matrix.

torch.Size([37537, 2])
We keep 6.60e+06/6.06e+08 =  1% of the original kernel matrix.

torch.Size([18271, 2])
We keep 1.43e+06/6.22e+07 =  2% of the original kernel matrix.

torch.Size([33106, 2])
We keep 3.44e+06/2.61e+08 =  1% of the original kernel matrix.

torch.Size([50911, 2])
We keep 1.90e+08/6.75e+09 =  2% of the original kernel matrix.

torch.Size([50122, 2])
We keep 2.26e+07/2.72e+09 =  0% of the original kernel matrix.

torch.Size([40623, 2])
We keep 7.54e+07/8.08e+08 =  9% of the original kernel matrix.

torch.Size([47583, 2])
We keep 8.94e+06/9.41e+08 =  0% of the original kernel matrix.

torch.Size([24635, 2])
We keep 1.11e+07/2.24e+08 =  4% of the original kernel matrix.

torch.Size([38568, 2])
We keep 5.62e+06/4.96e+08 =  1% of the original kernel matrix.

torch.Size([63043, 2])
We keep 2.72e+07/1.63e+09 =  1% of the original kernel matrix.

torch.Size([62415, 2])
We keep 1.27e+07/1.34e+09 =  0% of the original kernel matrix.

torch.Size([628553, 2])
We keep 4.96e+09/2.10e+11 =  2% of the original kernel matrix.

torch.Size([195714, 2])
We keep 1.02e+08/1.52e+10 =  0% of the original kernel matrix.

torch.Size([62954, 2])
We keep 2.64e+07/1.43e+09 =  1% of the original kernel matrix.

torch.Size([61844, 2])
We keep 1.18e+07/1.25e+09 =  0% of the original kernel matrix.

torch.Size([175795, 2])
We keep 4.08e+08/2.47e+10 =  1% of the original kernel matrix.

torch.Size([97887, 2])
We keep 3.94e+07/5.20e+09 =  0% of the original kernel matrix.

torch.Size([9650, 2])
We keep 7.01e+05/1.90e+07 =  3% of the original kernel matrix.

torch.Size([24871, 2])
We keep 2.23e+06/1.44e+08 =  1% of the original kernel matrix.

torch.Size([53907, 2])
We keep 4.01e+07/2.16e+09 =  1% of the original kernel matrix.

torch.Size([52511, 2])
We keep 1.39e+07/1.54e+09 =  0% of the original kernel matrix.

torch.Size([30917, 2])
We keep 4.57e+06/2.46e+08 =  1% of the original kernel matrix.

torch.Size([43514, 2])
We keep 5.76e+06/5.19e+08 =  1% of the original kernel matrix.

torch.Size([444934, 2])
We keep 2.48e+09/1.14e+11 =  2% of the original kernel matrix.

torch.Size([158337, 2])
We keep 7.73e+07/1.12e+10 =  0% of the original kernel matrix.

torch.Size([72559, 2])
We keep 1.96e+07/2.07e+09 =  0% of the original kernel matrix.

torch.Size([65804, 2])
We keep 1.34e+07/1.50e+09 =  0% of the original kernel matrix.

torch.Size([30944, 2])
We keep 3.76e+06/2.28e+08 =  1% of the original kernel matrix.

torch.Size([43403, 2])
We keep 5.62e+06/5.00e+08 =  1% of the original kernel matrix.

torch.Size([241205, 2])
We keep 1.08e+08/1.66e+10 =  0% of the original kernel matrix.

torch.Size([121607, 2])
We keep 3.24e+07/4.26e+09 =  0% of the original kernel matrix.

torch.Size([262138, 2])
We keep 1.30e+08/1.91e+10 =  0% of the original kernel matrix.

torch.Size([127293, 2])
We keep 3.43e+07/4.57e+09 =  0% of the original kernel matrix.

torch.Size([23817, 2])
We keep 1.82e+07/2.73e+08 =  6% of the original kernel matrix.

torch.Size([37039, 2])
We keep 6.03e+06/5.47e+08 =  1% of the original kernel matrix.

torch.Size([257869, 2])
We keep 3.02e+08/2.06e+10 =  1% of the original kernel matrix.

torch.Size([126024, 2])
We keep 3.57e+07/4.76e+09 =  0% of the original kernel matrix.

torch.Size([391814, 2])
We keep 3.25e+08/5.65e+10 =  0% of the original kernel matrix.

torch.Size([157856, 2])
We keep 5.56e+07/7.86e+09 =  0% of the original kernel matrix.

torch.Size([733265, 2])
We keep 9.30e+08/1.76e+11 =  0% of the original kernel matrix.

torch.Size([216608, 2])
We keep 9.27e+07/1.39e+10 =  0% of the original kernel matrix.

torch.Size([56987, 2])
We keep 6.18e+07/1.31e+09 =  4% of the original kernel matrix.

torch.Size([58385, 2])
We keep 1.11e+07/1.20e+09 =  0% of the original kernel matrix.

torch.Size([5625, 2])
We keep 2.18e+05/5.42e+06 =  4% of the original kernel matrix.

torch.Size([19723, 2])
We keep 1.46e+06/7.70e+07 =  1% of the original kernel matrix.

torch.Size([24768, 2])
We keep 2.22e+06/1.23e+08 =  1% of the original kernel matrix.

torch.Size([38506, 2])
We keep 4.44e+06/3.66e+08 =  1% of the original kernel matrix.

torch.Size([29819, 2])
We keep 2.97e+07/8.58e+08 =  3% of the original kernel matrix.

torch.Size([40693, 2])
We keep 9.05e+06/9.70e+08 =  0% of the original kernel matrix.

torch.Size([53718, 2])
We keep 1.28e+07/8.60e+08 =  1% of the original kernel matrix.

torch.Size([57469, 2])
We keep 9.28e+06/9.71e+08 =  0% of the original kernel matrix.

torch.Size([86733, 2])
We keep 5.73e+07/2.36e+09 =  2% of the original kernel matrix.

torch.Size([72517, 2])
We keep 1.43e+07/1.61e+09 =  0% of the original kernel matrix.

torch.Size([6333, 2])
We keep 2.67e+05/6.24e+06 =  4% of the original kernel matrix.

torch.Size([20683, 2])
We keep 1.52e+06/8.26e+07 =  1% of the original kernel matrix.

torch.Size([106307, 2])
We keep 4.36e+07/3.45e+09 =  1% of the original kernel matrix.

torch.Size([79597, 2])
We keep 1.68e+07/1.94e+09 =  0% of the original kernel matrix.

torch.Size([202374, 2])
We keep 1.01e+08/1.19e+10 =  0% of the original kernel matrix.

torch.Size([110549, 2])
We keep 2.83e+07/3.62e+09 =  0% of the original kernel matrix.

torch.Size([19913, 2])
We keep 5.65e+07/9.45e+08 =  5% of the original kernel matrix.

torch.Size([29571, 2])
We keep 9.23e+06/1.02e+09 =  0% of the original kernel matrix.

torch.Size([20471, 2])
We keep 2.09e+06/9.23e+07 =  2% of the original kernel matrix.

torch.Size([34932, 2])
We keep 4.01e+06/3.18e+08 =  1% of the original kernel matrix.

torch.Size([92804, 2])
We keep 3.22e+07/2.89e+09 =  1% of the original kernel matrix.

torch.Size([74136, 2])
We keep 1.56e+07/1.78e+09 =  0% of the original kernel matrix.

torch.Size([42726, 2])
We keep 7.88e+06/6.23e+08 =  1% of the original kernel matrix.

torch.Size([51699, 2])
We keep 8.43e+06/8.26e+08 =  1% of the original kernel matrix.

torch.Size([42816, 2])
We keep 7.28e+06/5.26e+08 =  1% of the original kernel matrix.

torch.Size([51910, 2])
We keep 7.82e+06/7.59e+08 =  1% of the original kernel matrix.

torch.Size([36050, 2])
We keep 4.99e+06/3.51e+08 =  1% of the original kernel matrix.

torch.Size([47024, 2])
We keep 6.63e+06/6.20e+08 =  1% of the original kernel matrix.

torch.Size([11732, 2])
We keep 1.11e+06/2.39e+07 =  4% of the original kernel matrix.

torch.Size([27149, 2])
We keep 2.44e+06/1.62e+08 =  1% of the original kernel matrix.

torch.Size([38496, 2])
We keep 2.49e+07/7.55e+08 =  3% of the original kernel matrix.

torch.Size([47612, 2])
We keep 9.01e+06/9.09e+08 =  0% of the original kernel matrix.

torch.Size([91509, 2])
We keep 2.05e+07/2.32e+09 =  0% of the original kernel matrix.

torch.Size([74566, 2])
We keep 1.41e+07/1.59e+09 =  0% of the original kernel matrix.

torch.Size([42492, 2])
We keep 7.67e+06/4.94e+08 =  1% of the original kernel matrix.

torch.Size([51444, 2])
We keep 7.55e+06/7.35e+08 =  1% of the original kernel matrix.

torch.Size([55103, 2])
We keep 4.15e+07/1.55e+09 =  2% of the original kernel matrix.

torch.Size([56767, 2])
We keep 1.21e+07/1.30e+09 =  0% of the original kernel matrix.

torch.Size([28380, 2])
We keep 5.01e+06/2.46e+08 =  2% of the original kernel matrix.

torch.Size([41360, 2])
We keep 5.86e+06/5.19e+08 =  1% of the original kernel matrix.

torch.Size([1239883, 2])
We keep 4.29e+09/6.05e+11 =  0% of the original kernel matrix.

torch.Size([287466, 2])
We keep 1.61e+08/2.57e+10 =  0% of the original kernel matrix.

torch.Size([40782, 2])
We keep 6.84e+06/4.99e+08 =  1% of the original kernel matrix.

torch.Size([50099, 2])
We keep 7.63e+06/7.39e+08 =  1% of the original kernel matrix.

torch.Size([270172, 2])
We keep 1.74e+08/2.49e+10 =  0% of the original kernel matrix.

torch.Size([129123, 2])
We keep 3.88e+07/5.22e+09 =  0% of the original kernel matrix.

torch.Size([4735, 2])
We keep 1.72e+05/3.74e+06 =  4% of the original kernel matrix.

torch.Size([18465, 2])
We keep 1.28e+06/6.40e+07 =  2% of the original kernel matrix.

torch.Size([13527, 2])
We keep 9.82e+05/3.13e+07 =  3% of the original kernel matrix.

torch.Size([28931, 2])
We keep 2.70e+06/1.85e+08 =  1% of the original kernel matrix.

torch.Size([14255, 2])
We keep 8.31e+05/3.34e+07 =  2% of the original kernel matrix.

torch.Size([29417, 2])
We keep 2.74e+06/1.91e+08 =  1% of the original kernel matrix.

torch.Size([42035, 2])
We keep 7.40e+06/4.72e+08 =  1% of the original kernel matrix.

torch.Size([51493, 2])
We keep 7.42e+06/7.19e+08 =  1% of the original kernel matrix.

torch.Size([17248, 2])
We keep 1.35e+06/5.58e+07 =  2% of the original kernel matrix.

torch.Size([32300, 2])
We keep 3.34e+06/2.47e+08 =  1% of the original kernel matrix.

torch.Size([156141, 2])
We keep 2.05e+08/1.11e+10 =  1% of the original kernel matrix.

torch.Size([94460, 2])
We keep 2.76e+07/3.49e+09 =  0% of the original kernel matrix.

torch.Size([28050, 2])
We keep 3.85e+06/2.04e+08 =  1% of the original kernel matrix.

torch.Size([41196, 2])
We keep 5.38e+06/4.73e+08 =  1% of the original kernel matrix.

torch.Size([13046, 2])
We keep 8.97e+05/3.29e+07 =  2% of the original kernel matrix.

torch.Size([28167, 2])
We keep 2.74e+06/1.90e+08 =  1% of the original kernel matrix.

torch.Size([557683, 2])
We keep 9.84e+08/1.11e+11 =  0% of the original kernel matrix.

torch.Size([187868, 2])
We keep 7.55e+07/1.10e+10 =  0% of the original kernel matrix.

torch.Size([82402, 2])
We keep 4.03e+07/2.45e+09 =  1% of the original kernel matrix.

torch.Size([69897, 2])
We keep 1.46e+07/1.64e+09 =  0% of the original kernel matrix.

torch.Size([76501, 2])
We keep 3.48e+07/2.06e+09 =  1% of the original kernel matrix.

torch.Size([67533, 2])
We keep 1.35e+07/1.50e+09 =  0% of the original kernel matrix.

torch.Size([265514, 2])
We keep 2.89e+08/2.73e+10 =  1% of the original kernel matrix.

torch.Size([128384, 2])
We keep 4.11e+07/5.47e+09 =  0% of the original kernel matrix.

torch.Size([433082, 2])
We keep 7.84e+08/9.10e+10 =  0% of the original kernel matrix.

torch.Size([164096, 2])
We keep 6.97e+07/9.98e+09 =  0% of the original kernel matrix.

torch.Size([18388, 2])
We keep 1.41e+06/6.85e+07 =  2% of the original kernel matrix.

torch.Size([33050, 2])
We keep 3.55e+06/2.74e+08 =  1% of the original kernel matrix.

torch.Size([27990, 2])
We keep 3.63e+06/1.77e+08 =  2% of the original kernel matrix.

torch.Size([41224, 2])
We keep 5.14e+06/4.41e+08 =  1% of the original kernel matrix.

torch.Size([27511, 2])
We keep 1.27e+07/2.99e+08 =  4% of the original kernel matrix.

torch.Size([40201, 2])
We keep 6.30e+06/5.73e+08 =  1% of the original kernel matrix.

torch.Size([2637, 2])
We keep 5.88e+04/1.02e+06 =  5% of the original kernel matrix.

torch.Size([14923, 2])
We keep 8.42e+05/3.34e+07 =  2% of the original kernel matrix.

torch.Size([19694, 2])
We keep 2.41e+06/9.54e+07 =  2% of the original kernel matrix.

torch.Size([34101, 2])
We keep 4.02e+06/3.23e+08 =  1% of the original kernel matrix.

torch.Size([36066, 2])
We keep 7.16e+06/4.43e+08 =  1% of the original kernel matrix.

torch.Size([46841, 2])
We keep 7.26e+06/6.97e+08 =  1% of the original kernel matrix.

torch.Size([6022, 2])
We keep 2.26e+05/5.52e+06 =  4% of the original kernel matrix.

torch.Size([20519, 2])
We keep 1.46e+06/7.78e+07 =  1% of the original kernel matrix.

torch.Size([18357, 2])
We keep 1.48e+06/6.58e+07 =  2% of the original kernel matrix.

torch.Size([33187, 2])
We keep 3.53e+06/2.69e+08 =  1% of the original kernel matrix.

torch.Size([33977, 2])
We keep 4.09e+06/2.86e+08 =  1% of the original kernel matrix.

torch.Size([45904, 2])
We keep 6.08e+06/5.60e+08 =  1% of the original kernel matrix.

torch.Size([12485, 2])
We keep 7.83e+05/2.79e+07 =  2% of the original kernel matrix.

torch.Size([27857, 2])
We keep 2.58e+06/1.75e+08 =  1% of the original kernel matrix.

torch.Size([511284, 2])
We keep 1.35e+09/1.02e+11 =  1% of the original kernel matrix.

torch.Size([179379, 2])
We keep 7.10e+07/1.06e+10 =  0% of the original kernel matrix.

torch.Size([29923, 2])
We keep 8.98e+06/4.14e+08 =  2% of the original kernel matrix.

torch.Size([41841, 2])
We keep 7.21e+06/6.74e+08 =  1% of the original kernel matrix.

torch.Size([164272, 2])
We keep 1.11e+08/9.02e+09 =  1% of the original kernel matrix.

torch.Size([98725, 2])
We keep 2.53e+07/3.14e+09 =  0% of the original kernel matrix.

torch.Size([8391, 2])
We keep 6.64e+05/1.65e+07 =  4% of the original kernel matrix.

torch.Size([23034, 2])
We keep 2.10e+06/1.34e+08 =  1% of the original kernel matrix.

torch.Size([21182, 2])
We keep 9.82e+06/1.76e+08 =  5% of the original kernel matrix.

torch.Size([34795, 2])
We keep 4.98e+06/4.40e+08 =  1% of the original kernel matrix.

torch.Size([159377, 2])
We keep 1.65e+08/1.36e+10 =  1% of the original kernel matrix.

torch.Size([94662, 2])
We keep 3.00e+07/3.86e+09 =  0% of the original kernel matrix.

torch.Size([1203087, 2])
We keep 5.57e+09/5.76e+11 =  0% of the original kernel matrix.

torch.Size([286527, 2])
We keep 1.57e+08/2.51e+10 =  0% of the original kernel matrix.

torch.Size([1269531, 2])
We keep 1.71e+09/4.05e+11 =  0% of the original kernel matrix.

torch.Size([293640, 2])
We keep 1.33e+08/2.11e+10 =  0% of the original kernel matrix.

torch.Size([55915, 2])
We keep 1.19e+07/8.89e+08 =  1% of the original kernel matrix.

torch.Size([60021, 2])
We keep 9.72e+06/9.87e+08 =  0% of the original kernel matrix.

torch.Size([161213, 2])
We keep 1.65e+08/7.72e+09 =  2% of the original kernel matrix.

torch.Size([97848, 2])
We keep 2.35e+07/2.91e+09 =  0% of the original kernel matrix.

torch.Size([13507, 2])
We keep 7.06e+05/2.77e+07 =  2% of the original kernel matrix.

torch.Size([28880, 2])
We keep 2.55e+06/1.74e+08 =  1% of the original kernel matrix.

torch.Size([23207, 2])
We keep 1.52e+07/3.23e+08 =  4% of the original kernel matrix.

torch.Size([36496, 2])
We keep 6.25e+06/5.95e+08 =  1% of the original kernel matrix.

torch.Size([63575, 2])
We keep 6.60e+07/2.37e+09 =  2% of the original kernel matrix.

torch.Size([59671, 2])
We keep 1.44e+07/1.61e+09 =  0% of the original kernel matrix.

torch.Size([55209, 2])
We keep 2.14e+07/9.11e+08 =  2% of the original kernel matrix.

torch.Size([59420, 2])
We keep 9.58e+06/9.99e+08 =  0% of the original kernel matrix.

torch.Size([29543, 2])
We keep 9.83e+06/2.39e+08 =  4% of the original kernel matrix.

torch.Size([42125, 2])
We keep 5.82e+06/5.11e+08 =  1% of the original kernel matrix.

torch.Size([149886, 2])
We keep 8.96e+07/8.11e+09 =  1% of the original kernel matrix.

torch.Size([94190, 2])
We keep 2.39e+07/2.98e+09 =  0% of the original kernel matrix.

torch.Size([1260467, 2])
We keep 5.17e+09/6.00e+11 =  0% of the original kernel matrix.

torch.Size([289623, 2])
We keep 1.64e+08/2.56e+10 =  0% of the original kernel matrix.

torch.Size([69847, 2])
We keep 3.27e+07/2.08e+09 =  1% of the original kernel matrix.

torch.Size([62954, 2])
We keep 1.36e+07/1.51e+09 =  0% of the original kernel matrix.

torch.Size([17725, 2])
We keep 3.10e+06/1.12e+08 =  2% of the original kernel matrix.

torch.Size([31934, 2])
We keep 4.29e+06/3.50e+08 =  1% of the original kernel matrix.

torch.Size([68547, 2])
We keep 2.01e+07/1.57e+09 =  1% of the original kernel matrix.

torch.Size([67985, 2])
We keep 1.24e+07/1.31e+09 =  0% of the original kernel matrix.

torch.Size([54398, 2])
We keep 1.48e+07/9.36e+08 =  1% of the original kernel matrix.

torch.Size([57398, 2])
We keep 9.85e+06/1.01e+09 =  0% of the original kernel matrix.

torch.Size([9407, 2])
We keep 4.09e+05/1.34e+07 =  3% of the original kernel matrix.

torch.Size([24865, 2])
We keep 1.98e+06/1.21e+08 =  1% of the original kernel matrix.

torch.Size([265555, 2])
We keep 3.09e+08/2.56e+10 =  1% of the original kernel matrix.

torch.Size([128165, 2])
We keep 3.95e+07/5.29e+09 =  0% of the original kernel matrix.

torch.Size([26200, 2])
We keep 7.46e+06/2.63e+08 =  2% of the original kernel matrix.

torch.Size([39171, 2])
We keep 5.84e+06/5.37e+08 =  1% of the original kernel matrix.

torch.Size([6116, 2])
We keep 2.34e+05/5.81e+06 =  4% of the original kernel matrix.

torch.Size([20555, 2])
We keep 1.48e+06/7.98e+07 =  1% of the original kernel matrix.

torch.Size([165225, 2])
We keep 8.46e+07/8.52e+09 =  0% of the original kernel matrix.

torch.Size([98355, 2])
We keep 2.47e+07/3.05e+09 =  0% of the original kernel matrix.

torch.Size([44077, 2])
We keep 9.08e+06/6.61e+08 =  1% of the original kernel matrix.

torch.Size([52568, 2])
We keep 8.70e+06/8.51e+08 =  1% of the original kernel matrix.

torch.Size([1901, 2])
We keep 2.91e+04/3.91e+05 =  7% of the original kernel matrix.

torch.Size([13319, 2])
We keep 6.15e+05/2.07e+07 =  2% of the original kernel matrix.

torch.Size([219084, 2])
We keep 2.29e+08/1.76e+10 =  1% of the original kernel matrix.

torch.Size([115191, 2])
We keep 3.34e+07/4.39e+09 =  0% of the original kernel matrix.

torch.Size([194043, 2])
We keep 1.15e+08/1.21e+10 =  0% of the original kernel matrix.

torch.Size([108046, 2])
We keep 2.84e+07/3.64e+09 =  0% of the original kernel matrix.

torch.Size([282797, 2])
We keep 5.02e+08/3.12e+10 =  1% of the original kernel matrix.

torch.Size([132054, 2])
We keep 4.32e+07/5.84e+09 =  0% of the original kernel matrix.

torch.Size([370745, 2])
We keep 7.22e+08/5.42e+10 =  1% of the original kernel matrix.

torch.Size([153756, 2])
We keep 5.55e+07/7.70e+09 =  0% of the original kernel matrix.

torch.Size([240037, 2])
We keep 3.58e+08/2.42e+10 =  1% of the original kernel matrix.

torch.Size([119041, 2])
We keep 3.85e+07/5.15e+09 =  0% of the original kernel matrix.

torch.Size([27106, 2])
We keep 8.12e+06/3.65e+08 =  2% of the original kernel matrix.

torch.Size([38984, 2])
We keep 6.82e+06/6.33e+08 =  1% of the original kernel matrix.

torch.Size([64487, 2])
We keep 3.38e+07/1.66e+09 =  2% of the original kernel matrix.

torch.Size([61451, 2])
We keep 1.22e+07/1.35e+09 =  0% of the original kernel matrix.

torch.Size([218396, 2])
We keep 9.35e+07/1.32e+10 =  0% of the original kernel matrix.

torch.Size([115307, 2])
We keep 2.92e+07/3.80e+09 =  0% of the original kernel matrix.

torch.Size([253734, 2])
We keep 1.27e+08/1.77e+10 =  0% of the original kernel matrix.

torch.Size([125185, 2])
We keep 3.30e+07/4.40e+09 =  0% of the original kernel matrix.

torch.Size([34569, 2])
We keep 5.22e+06/3.24e+08 =  1% of the original kernel matrix.

torch.Size([46026, 2])
We keep 6.43e+06/5.96e+08 =  1% of the original kernel matrix.

torch.Size([156271, 2])
We keep 3.97e+08/1.39e+10 =  2% of the original kernel matrix.

torch.Size([97436, 2])
We keep 2.94e+07/3.90e+09 =  0% of the original kernel matrix.

torch.Size([277102, 2])
We keep 6.40e+08/3.20e+10 =  1% of the original kernel matrix.

torch.Size([130893, 2])
We keep 4.29e+07/5.92e+09 =  0% of the original kernel matrix.

torch.Size([223957, 2])
We keep 2.31e+08/1.62e+10 =  1% of the original kernel matrix.

torch.Size([116823, 2])
We keep 3.23e+07/4.21e+09 =  0% of the original kernel matrix.

torch.Size([54041, 2])
We keep 3.75e+07/1.60e+09 =  2% of the original kernel matrix.

torch.Size([55778, 2])
We keep 1.21e+07/1.32e+09 =  0% of the original kernel matrix.

torch.Size([51092, 2])
We keep 1.15e+08/2.84e+09 =  4% of the original kernel matrix.

torch.Size([51104, 2])
We keep 1.54e+07/1.76e+09 =  0% of the original kernel matrix.

torch.Size([32663, 2])
We keep 8.04e+06/3.77e+08 =  2% of the original kernel matrix.

torch.Size([44165, 2])
We keep 6.90e+06/6.43e+08 =  1% of the original kernel matrix.

torch.Size([23552, 2])
We keep 2.20e+06/1.16e+08 =  1% of the original kernel matrix.

torch.Size([37549, 2])
We keep 4.34e+06/3.56e+08 =  1% of the original kernel matrix.

torch.Size([15293, 2])
We keep 5.91e+06/6.94e+07 =  8% of the original kernel matrix.

torch.Size([29855, 2])
We keep 3.62e+06/2.76e+08 =  1% of the original kernel matrix.

torch.Size([315779, 2])
We keep 1.74e+08/2.75e+10 =  0% of the original kernel matrix.

torch.Size([140313, 2])
We keep 4.01e+07/5.49e+09 =  0% of the original kernel matrix.

torch.Size([218735, 2])
We keep 9.78e+07/1.38e+10 =  0% of the original kernel matrix.

torch.Size([115501, 2])
We keep 2.98e+07/3.89e+09 =  0% of the original kernel matrix.

torch.Size([712860, 2])
We keep 1.51e+09/1.74e+11 =  0% of the original kernel matrix.

torch.Size([210736, 2])
We keep 9.22e+07/1.38e+10 =  0% of the original kernel matrix.

torch.Size([214716, 2])
We keep 3.35e+08/2.11e+10 =  1% of the original kernel matrix.

torch.Size([113642, 2])
We keep 3.62e+07/4.81e+09 =  0% of the original kernel matrix.

torch.Size([140722, 2])
We keep 7.67e+07/7.10e+09 =  1% of the original kernel matrix.

torch.Size([90935, 2])
We keep 2.27e+07/2.79e+09 =  0% of the original kernel matrix.

torch.Size([26557, 2])
We keep 3.95e+06/2.63e+08 =  1% of the original kernel matrix.

torch.Size([39848, 2])
We keep 5.89e+06/5.37e+08 =  1% of the original kernel matrix.

torch.Size([259184, 2])
We keep 1.85e+08/1.91e+10 =  0% of the original kernel matrix.

torch.Size([126598, 2])
We keep 3.45e+07/4.57e+09 =  0% of the original kernel matrix.

torch.Size([7915, 2])
We keep 5.73e+05/1.39e+07 =  4% of the original kernel matrix.

torch.Size([22312, 2])
We keep 2.02e+06/1.23e+08 =  1% of the original kernel matrix.

torch.Size([20660, 2])
We keep 2.55e+06/1.13e+08 =  2% of the original kernel matrix.

torch.Size([34674, 2])
We keep 4.26e+06/3.51e+08 =  1% of the original kernel matrix.

torch.Size([331893, 2])
We keep 2.68e+08/3.29e+10 =  0% of the original kernel matrix.

torch.Size([144628, 2])
We keep 4.38e+07/6.00e+09 =  0% of the original kernel matrix.

torch.Size([125888, 2])
We keep 6.67e+07/5.01e+09 =  1% of the original kernel matrix.

torch.Size([86038, 2])
We keep 1.96e+07/2.34e+09 =  0% of the original kernel matrix.

torch.Size([12710, 2])
We keep 9.77e+05/3.26e+07 =  3% of the original kernel matrix.

torch.Size([27788, 2])
We keep 2.74e+06/1.89e+08 =  1% of the original kernel matrix.

torch.Size([31914, 2])
We keep 5.11e+06/3.19e+08 =  1% of the original kernel matrix.

torch.Size([44125, 2])
We keep 6.30e+06/5.91e+08 =  1% of the original kernel matrix.

torch.Size([240948, 2])
We keep 7.63e+08/3.91e+10 =  1% of the original kernel matrix.

torch.Size([120368, 2])
We keep 4.80e+07/6.55e+09 =  0% of the original kernel matrix.

torch.Size([37807, 2])
We keep 7.80e+06/4.17e+08 =  1% of the original kernel matrix.

torch.Size([47915, 2])
We keep 7.07e+06/6.76e+08 =  1% of the original kernel matrix.

torch.Size([159448, 2])
We keep 1.25e+08/1.00e+10 =  1% of the original kernel matrix.

torch.Size([97140, 2])
We keep 2.67e+07/3.31e+09 =  0% of the original kernel matrix.

torch.Size([15690, 2])
We keep 1.29e+07/1.77e+08 =  7% of the original kernel matrix.

torch.Size([29019, 2])
We keep 4.92e+06/4.40e+08 =  1% of the original kernel matrix.

torch.Size([15723, 2])
We keep 4.96e+06/9.15e+07 =  5% of the original kernel matrix.

torch.Size([30163, 2])
We keep 3.86e+06/3.17e+08 =  1% of the original kernel matrix.

torch.Size([12115, 2])
We keep 8.68e+05/2.79e+07 =  3% of the original kernel matrix.

torch.Size([27434, 2])
We keep 2.60e+06/1.75e+08 =  1% of the original kernel matrix.

torch.Size([14400, 2])
We keep 1.16e+06/4.35e+07 =  2% of the original kernel matrix.

torch.Size([29575, 2])
We keep 3.06e+06/2.18e+08 =  1% of the original kernel matrix.

torch.Size([135127, 2])
We keep 8.98e+07/6.16e+09 =  1% of the original kernel matrix.

torch.Size([88862, 2])
We keep 2.17e+07/2.60e+09 =  0% of the original kernel matrix.

torch.Size([113752, 2])
We keep 7.24e+07/4.79e+09 =  1% of the original kernel matrix.

torch.Size([80146, 2])
We keep 1.92e+07/2.29e+09 =  0% of the original kernel matrix.

torch.Size([6499, 2])
We keep 3.62e+05/7.74e+06 =  4% of the original kernel matrix.

torch.Size([20776, 2])
We keep 1.63e+06/9.21e+07 =  1% of the original kernel matrix.

torch.Size([224797, 2])
We keep 2.04e+08/1.85e+10 =  1% of the original kernel matrix.

torch.Size([116164, 2])
We keep 3.37e+07/4.50e+09 =  0% of the original kernel matrix.

torch.Size([22226, 2])
We keep 7.80e+06/2.03e+08 =  3% of the original kernel matrix.

torch.Size([36144, 2])
We keep 5.41e+06/4.72e+08 =  1% of the original kernel matrix.

torch.Size([85165, 2])
We keep 2.99e+07/2.01e+09 =  1% of the original kernel matrix.

torch.Size([72014, 2])
We keep 1.33e+07/1.48e+09 =  0% of the original kernel matrix.

torch.Size([14567, 2])
We keep 3.54e+06/7.01e+07 =  5% of the original kernel matrix.

torch.Size([29506, 2])
We keep 3.57e+06/2.77e+08 =  1% of the original kernel matrix.

torch.Size([240141, 2])
We keep 1.28e+08/1.71e+10 =  0% of the original kernel matrix.

torch.Size([121639, 2])
We keep 3.26e+07/4.32e+09 =  0% of the original kernel matrix.

torch.Size([13525, 2])
We keep 1.60e+06/5.10e+07 =  3% of the original kernel matrix.

torch.Size([28513, 2])
We keep 3.30e+06/2.36e+08 =  1% of the original kernel matrix.

torch.Size([93155, 2])
We keep 1.08e+08/3.07e+09 =  3% of the original kernel matrix.

torch.Size([73925, 2])
We keep 1.55e+07/1.83e+09 =  0% of the original kernel matrix.

torch.Size([72540, 2])
We keep 2.24e+07/1.56e+09 =  1% of the original kernel matrix.

torch.Size([66848, 2])
We keep 1.21e+07/1.31e+09 =  0% of the original kernel matrix.

torch.Size([75259, 2])
We keep 6.33e+07/2.72e+09 =  2% of the original kernel matrix.

torch.Size([65822, 2])
We keep 1.52e+07/1.73e+09 =  0% of the original kernel matrix.

torch.Size([115490, 2])
We keep 4.40e+07/3.99e+09 =  1% of the original kernel matrix.

torch.Size([82824, 2])
We keep 1.78e+07/2.09e+09 =  0% of the original kernel matrix.

torch.Size([803164, 2])
We keep 2.32e+09/2.60e+11 =  0% of the original kernel matrix.

torch.Size([225730, 2])
We keep 1.09e+08/1.69e+10 =  0% of the original kernel matrix.

torch.Size([34862, 2])
We keep 3.95e+06/3.04e+08 =  1% of the original kernel matrix.

torch.Size([46613, 2])
We keep 6.26e+06/5.77e+08 =  1% of the original kernel matrix.

torch.Size([22038, 2])
We keep 7.79e+06/2.37e+08 =  3% of the original kernel matrix.

torch.Size([35200, 2])
We keep 5.75e+06/5.09e+08 =  1% of the original kernel matrix.

torch.Size([188008, 2])
We keep 2.12e+08/1.20e+10 =  1% of the original kernel matrix.

torch.Size([105896, 2])
We keep 2.85e+07/3.63e+09 =  0% of the original kernel matrix.

torch.Size([43857, 2])
We keep 1.06e+07/6.64e+08 =  1% of the original kernel matrix.

torch.Size([51976, 2])
We keep 8.68e+06/8.53e+08 =  1% of the original kernel matrix.

torch.Size([1054933, 2])
We keep 1.50e+09/3.11e+11 =  0% of the original kernel matrix.

torch.Size([264561, 2])
We keep 1.19e+08/1.85e+10 =  0% of the original kernel matrix.

torch.Size([15074, 2])
We keep 1.89e+06/6.19e+07 =  3% of the original kernel matrix.

torch.Size([29682, 2])
We keep 3.45e+06/2.60e+08 =  1% of the original kernel matrix.

torch.Size([231128, 2])
We keep 1.68e+08/1.97e+10 =  0% of the original kernel matrix.

torch.Size([118457, 2])
We keep 3.49e+07/4.64e+09 =  0% of the original kernel matrix.

torch.Size([1024852, 2])
We keep 1.53e+09/3.24e+11 =  0% of the original kernel matrix.

torch.Size([258638, 2])
We keep 1.22e+08/1.89e+10 =  0% of the original kernel matrix.

torch.Size([10593, 2])
We keep 6.33e+05/2.09e+07 =  3% of the original kernel matrix.

torch.Size([25439, 2])
We keep 2.30e+06/1.51e+08 =  1% of the original kernel matrix.

torch.Size([273551, 2])
We keep 5.23e+08/4.74e+10 =  1% of the original kernel matrix.

torch.Size([124311, 2])
We keep 5.07e+07/7.20e+09 =  0% of the original kernel matrix.

torch.Size([26533, 2])
We keep 9.89e+06/4.46e+08 =  2% of the original kernel matrix.

torch.Size([38188, 2])
We keep 7.27e+06/6.99e+08 =  1% of the original kernel matrix.

torch.Size([1083920, 2])
We keep 3.77e+09/4.50e+11 =  0% of the original kernel matrix.

torch.Size([269684, 2])
We keep 1.43e+08/2.22e+10 =  0% of the original kernel matrix.

torch.Size([24174, 2])
We keep 2.46e+06/1.31e+08 =  1% of the original kernel matrix.

torch.Size([38122, 2])
We keep 4.57e+06/3.78e+08 =  1% of the original kernel matrix.

torch.Size([39002, 2])
We keep 1.45e+07/6.84e+08 =  2% of the original kernel matrix.

torch.Size([48348, 2])
We keep 8.58e+06/8.66e+08 =  0% of the original kernel matrix.

torch.Size([9904, 2])
We keep 2.47e+06/4.52e+07 =  5% of the original kernel matrix.

torch.Size([23930, 2])
We keep 3.07e+06/2.23e+08 =  1% of the original kernel matrix.

torch.Size([17487, 2])
We keep 1.32e+06/5.82e+07 =  2% of the original kernel matrix.

torch.Size([32312, 2])
We keep 3.37e+06/2.53e+08 =  1% of the original kernel matrix.

torch.Size([26334, 2])
We keep 4.87e+06/2.45e+08 =  1% of the original kernel matrix.

torch.Size([39676, 2])
We keep 5.84e+06/5.18e+08 =  1% of the original kernel matrix.

torch.Size([72159, 2])
We keep 2.40e+07/1.70e+09 =  1% of the original kernel matrix.

torch.Size([66185, 2])
We keep 1.24e+07/1.36e+09 =  0% of the original kernel matrix.

torch.Size([41939, 2])
We keep 2.37e+07/7.67e+08 =  3% of the original kernel matrix.

torch.Size([50324, 2])
We keep 9.24e+06/9.17e+08 =  1% of the original kernel matrix.

torch.Size([225840, 2])
We keep 2.08e+08/1.92e+10 =  1% of the original kernel matrix.

torch.Size([117523, 2])
We keep 3.49e+07/4.58e+09 =  0% of the original kernel matrix.

torch.Size([32177, 2])
We keep 4.50e+06/3.05e+08 =  1% of the original kernel matrix.

torch.Size([44111, 2])
We keep 6.29e+06/5.78e+08 =  1% of the original kernel matrix.

torch.Size([17126, 2])
We keep 1.60e+06/6.46e+07 =  2% of the original kernel matrix.

torch.Size([31729, 2])
We keep 3.48e+06/2.66e+08 =  1% of the original kernel matrix.

torch.Size([19530, 2])
We keep 4.89e+06/1.44e+08 =  3% of the original kernel matrix.

torch.Size([33978, 2])
We keep 4.77e+06/3.98e+08 =  1% of the original kernel matrix.

torch.Size([390141, 2])
We keep 8.49e+08/7.03e+10 =  1% of the original kernel matrix.

torch.Size([156848, 2])
We keep 6.23e+07/8.77e+09 =  0% of the original kernel matrix.

torch.Size([260226, 2])
We keep 8.68e+08/4.68e+10 =  1% of the original kernel matrix.

torch.Size([124713, 2])
We keep 5.26e+07/7.16e+09 =  0% of the original kernel matrix.

torch.Size([857888, 2])
We keep 1.65e+09/2.27e+11 =  0% of the original kernel matrix.

torch.Size([234197, 2])
We keep 1.05e+08/1.58e+10 =  0% of the original kernel matrix.

torch.Size([52826, 2])
We keep 1.64e+07/9.56e+08 =  1% of the original kernel matrix.

torch.Size([54748, 2])
We keep 9.22e+06/1.02e+09 =  0% of the original kernel matrix.

torch.Size([18766, 2])
We keep 2.47e+06/9.53e+07 =  2% of the original kernel matrix.

torch.Size([33866, 2])
We keep 4.09e+06/3.23e+08 =  1% of the original kernel matrix.

torch.Size([16295, 2])
We keep 1.10e+06/4.48e+07 =  2% of the original kernel matrix.

torch.Size([31305, 2])
We keep 3.04e+06/2.22e+08 =  1% of the original kernel matrix.

torch.Size([14582, 2])
We keep 3.65e+06/6.79e+07 =  5% of the original kernel matrix.

torch.Size([29518, 2])
We keep 3.60e+06/2.73e+08 =  1% of the original kernel matrix.

torch.Size([934957, 2])
We keep 2.70e+09/2.77e+11 =  0% of the original kernel matrix.

torch.Size([245520, 2])
We keep 1.12e+08/1.74e+10 =  0% of the original kernel matrix.

torch.Size([25310, 2])
We keep 3.04e+06/1.58e+08 =  1% of the original kernel matrix.

torch.Size([39127, 2])
We keep 4.93e+06/4.16e+08 =  1% of the original kernel matrix.

torch.Size([35731, 2])
We keep 5.83e+06/3.61e+08 =  1% of the original kernel matrix.

torch.Size([47020, 2])
We keep 6.73e+06/6.29e+08 =  1% of the original kernel matrix.

torch.Size([125182, 2])
We keep 9.25e+07/5.59e+09 =  1% of the original kernel matrix.

torch.Size([85074, 2])
We keep 2.05e+07/2.47e+09 =  0% of the original kernel matrix.

torch.Size([65261, 2])
We keep 2.97e+07/1.95e+09 =  1% of the original kernel matrix.

torch.Size([61438, 2])
We keep 1.32e+07/1.46e+09 =  0% of the original kernel matrix.

torch.Size([46293, 2])
We keep 3.46e+07/1.11e+09 =  3% of the original kernel matrix.

torch.Size([52410, 2])
We keep 1.06e+07/1.10e+09 =  0% of the original kernel matrix.

torch.Size([23685, 2])
We keep 3.39e+06/1.76e+08 =  1% of the original kernel matrix.

torch.Size([37453, 2])
We keep 5.15e+06/4.39e+08 =  1% of the original kernel matrix.

torch.Size([278263, 2])
We keep 5.95e+08/4.95e+10 =  1% of the original kernel matrix.

torch.Size([129042, 2])
We keep 5.30e+07/7.36e+09 =  0% of the original kernel matrix.

torch.Size([110471, 2])
We keep 5.95e+07/4.19e+09 =  1% of the original kernel matrix.

torch.Size([80505, 2])
We keep 1.82e+07/2.14e+09 =  0% of the original kernel matrix.

torch.Size([62345, 2])
We keep 2.53e+08/3.82e+09 =  6% of the original kernel matrix.

torch.Size([58565, 2])
We keep 1.77e+07/2.04e+09 =  0% of the original kernel matrix.

torch.Size([83815, 2])
We keep 2.76e+07/2.10e+09 =  1% of the original kernel matrix.

torch.Size([71446, 2])
We keep 1.34e+07/1.52e+09 =  0% of the original kernel matrix.

torch.Size([179214, 2])
We keep 3.10e+08/1.55e+10 =  1% of the original kernel matrix.

torch.Size([103240, 2])
We keep 3.25e+07/4.13e+09 =  0% of the original kernel matrix.

torch.Size([256034, 2])
We keep 3.22e+08/2.31e+10 =  1% of the original kernel matrix.

torch.Size([125073, 2])
We keep 3.78e+07/5.03e+09 =  0% of the original kernel matrix.

torch.Size([747895, 2])
We keep 1.86e+09/2.11e+11 =  0% of the original kernel matrix.

torch.Size([217111, 2])
We keep 1.02e+08/1.52e+10 =  0% of the original kernel matrix.

torch.Size([324421, 2])
We keep 4.86e+08/3.28e+10 =  1% of the original kernel matrix.

torch.Size([142896, 2])
We keep 4.40e+07/5.99e+09 =  0% of the original kernel matrix.

torch.Size([18081, 2])
We keep 6.11e+06/9.68e+07 =  6% of the original kernel matrix.

torch.Size([32983, 2])
We keep 4.11e+06/3.26e+08 =  1% of the original kernel matrix.

torch.Size([76542, 2])
We keep 1.73e+07/1.74e+09 =  0% of the original kernel matrix.

torch.Size([68161, 2])
We keep 1.24e+07/1.38e+09 =  0% of the original kernel matrix.

torch.Size([33731, 2])
We keep 1.17e+07/4.38e+08 =  2% of the original kernel matrix.

torch.Size([45144, 2])
We keep 7.30e+06/6.92e+08 =  1% of the original kernel matrix.

torch.Size([16397, 2])
We keep 2.84e+06/5.94e+07 =  4% of the original kernel matrix.

torch.Size([31386, 2])
We keep 3.35e+06/2.55e+08 =  1% of the original kernel matrix.

torch.Size([31275, 2])
We keep 4.97e+06/2.93e+08 =  1% of the original kernel matrix.

torch.Size([43259, 2])
We keep 6.14e+06/5.67e+08 =  1% of the original kernel matrix.

torch.Size([14111, 2])
We keep 7.99e+05/3.19e+07 =  2% of the original kernel matrix.

torch.Size([29422, 2])
We keep 2.69e+06/1.87e+08 =  1% of the original kernel matrix.

torch.Size([40636, 2])
We keep 1.09e+07/4.92e+08 =  2% of the original kernel matrix.

torch.Size([49701, 2])
We keep 7.49e+06/7.34e+08 =  1% of the original kernel matrix.

torch.Size([85757, 2])
We keep 4.91e+07/3.19e+09 =  1% of the original kernel matrix.

torch.Size([70081, 2])
We keep 1.63e+07/1.87e+09 =  0% of the original kernel matrix.

torch.Size([10095, 2])
We keep 1.97e+06/3.14e+07 =  6% of the original kernel matrix.

torch.Size([23843, 2])
We keep 2.63e+06/1.86e+08 =  1% of the original kernel matrix.

torch.Size([51904, 2])
We keep 1.11e+07/8.90e+08 =  1% of the original kernel matrix.

torch.Size([57026, 2])
We keep 9.80e+06/9.87e+08 =  0% of the original kernel matrix.

torch.Size([13756, 2])
We keep 2.85e+06/6.33e+07 =  4% of the original kernel matrix.

torch.Size([28651, 2])
We keep 3.46e+06/2.63e+08 =  1% of the original kernel matrix.

torch.Size([53474, 2])
We keep 7.40e+07/2.38e+09 =  3% of the original kernel matrix.

torch.Size([53656, 2])
We keep 1.41e+07/1.62e+09 =  0% of the original kernel matrix.

torch.Size([19900, 2])
We keep 2.59e+06/1.10e+08 =  2% of the original kernel matrix.

torch.Size([34363, 2])
We keep 4.26e+06/3.47e+08 =  1% of the original kernel matrix.

torch.Size([46097, 2])
We keep 9.42e+06/5.87e+08 =  1% of the original kernel matrix.

torch.Size([53712, 2])
We keep 8.06e+06/8.02e+08 =  1% of the original kernel matrix.

torch.Size([17867, 2])
We keep 1.25e+07/2.76e+08 =  4% of the original kernel matrix.

torch.Size([30590, 2])
We keep 5.96e+06/5.50e+08 =  1% of the original kernel matrix.

torch.Size([55511, 2])
We keep 2.46e+07/1.09e+09 =  2% of the original kernel matrix.

torch.Size([58004, 2])
We keep 1.04e+07/1.09e+09 =  0% of the original kernel matrix.

torch.Size([12980, 2])
We keep 1.15e+06/3.47e+07 =  3% of the original kernel matrix.

torch.Size([28180, 2])
We keep 2.79e+06/1.95e+08 =  1% of the original kernel matrix.

torch.Size([20547, 2])
We keep 1.74e+06/8.44e+07 =  2% of the original kernel matrix.

torch.Size([35191, 2])
We keep 3.87e+06/3.04e+08 =  1% of the original kernel matrix.

torch.Size([47745, 2])
We keep 7.41e+06/6.30e+08 =  1% of the original kernel matrix.

torch.Size([54908, 2])
We keep 8.26e+06/8.31e+08 =  0% of the original kernel matrix.

torch.Size([236763, 2])
We keep 2.36e+08/2.29e+10 =  1% of the original kernel matrix.

torch.Size([120156, 2])
We keep 3.80e+07/5.01e+09 =  0% of the original kernel matrix.

torch.Size([19139, 2])
We keep 1.63e+06/7.11e+07 =  2% of the original kernel matrix.

torch.Size([33988, 2])
We keep 3.62e+06/2.79e+08 =  1% of the original kernel matrix.

torch.Size([5358, 2])
We keep 2.19e+05/4.94e+06 =  4% of the original kernel matrix.

torch.Size([19476, 2])
We keep 1.41e+06/7.36e+07 =  1% of the original kernel matrix.

torch.Size([24806, 2])
We keep 4.99e+06/1.68e+08 =  2% of the original kernel matrix.

torch.Size([38466, 2])
We keep 5.05e+06/4.29e+08 =  1% of the original kernel matrix.

torch.Size([298729, 2])
We keep 3.52e+08/3.14e+10 =  1% of the original kernel matrix.

torch.Size([136554, 2])
We keep 4.29e+07/5.86e+09 =  0% of the original kernel matrix.

torch.Size([591082, 2])
We keep 1.30e+09/1.20e+11 =  1% of the original kernel matrix.

torch.Size([194515, 2])
We keep 7.80e+07/1.15e+10 =  0% of the original kernel matrix.

torch.Size([109984, 2])
We keep 1.09e+08/6.67e+09 =  1% of the original kernel matrix.

torch.Size([77017, 2])
We keep 2.20e+07/2.70e+09 =  0% of the original kernel matrix.

torch.Size([15794, 2])
We keep 1.87e+06/6.86e+07 =  2% of the original kernel matrix.

torch.Size([30337, 2])
We keep 3.61e+06/2.74e+08 =  1% of the original kernel matrix.

torch.Size([447071, 2])
We keep 8.86e+08/8.45e+10 =  1% of the original kernel matrix.

torch.Size([166221, 2])
We keep 6.68e+07/9.62e+09 =  0% of the original kernel matrix.

torch.Size([386451, 2])
We keep 3.49e+08/5.59e+10 =  0% of the original kernel matrix.

torch.Size([159674, 2])
We keep 5.60e+07/7.83e+09 =  0% of the original kernel matrix.

torch.Size([6535, 2])
We keep 2.38e+05/6.08e+06 =  3% of the original kernel matrix.

torch.Size([21129, 2])
We keep 1.51e+06/8.16e+07 =  1% of the original kernel matrix.

torch.Size([20893, 2])
We keep 2.73e+06/1.17e+08 =  2% of the original kernel matrix.

torch.Size([35460, 2])
We keep 4.38e+06/3.57e+08 =  1% of the original kernel matrix.

torch.Size([95235, 2])
We keep 2.47e+07/2.88e+09 =  0% of the original kernel matrix.

torch.Size([76113, 2])
We keep 1.56e+07/1.77e+09 =  0% of the original kernel matrix.

torch.Size([49822, 2])
We keep 8.86e+07/2.92e+09 =  3% of the original kernel matrix.

torch.Size([50569, 2])
We keep 1.57e+07/1.79e+09 =  0% of the original kernel matrix.

torch.Size([43476, 2])
We keep 2.43e+07/7.06e+08 =  3% of the original kernel matrix.

torch.Size([51443, 2])
We keep 8.76e+06/8.79e+08 =  0% of the original kernel matrix.

torch.Size([288239, 2])
We keep 2.38e+08/2.74e+10 =  0% of the original kernel matrix.

torch.Size([133769, 2])
We keep 4.08e+07/5.48e+09 =  0% of the original kernel matrix.

torch.Size([57229, 2])
We keep 1.19e+07/9.32e+08 =  1% of the original kernel matrix.

torch.Size([60217, 2])
We keep 9.77e+06/1.01e+09 =  0% of the original kernel matrix.

torch.Size([21651, 2])
We keep 3.06e+06/1.07e+08 =  2% of the original kernel matrix.

torch.Size([36042, 2])
We keep 4.10e+06/3.42e+08 =  1% of the original kernel matrix.

torch.Size([9910, 2])
We keep 4.90e+05/1.55e+07 =  3% of the original kernel matrix.

torch.Size([25254, 2])
We keep 2.11e+06/1.30e+08 =  1% of the original kernel matrix.

torch.Size([58194, 2])
We keep 2.12e+07/1.09e+09 =  1% of the original kernel matrix.

torch.Size([59523, 2])
We keep 1.03e+07/1.09e+09 =  0% of the original kernel matrix.

torch.Size([34422, 2])
We keep 4.56e+06/2.98e+08 =  1% of the original kernel matrix.

torch.Size([45754, 2])
We keep 6.16e+06/5.71e+08 =  1% of the original kernel matrix.

torch.Size([34613, 2])
We keep 1.86e+07/4.96e+08 =  3% of the original kernel matrix.

torch.Size([45255, 2])
We keep 7.41e+06/7.37e+08 =  1% of the original kernel matrix.

torch.Size([190975, 2])
We keep 3.25e+08/1.39e+10 =  2% of the original kernel matrix.

torch.Size([106849, 2])
We keep 3.04e+07/3.90e+09 =  0% of the original kernel matrix.

torch.Size([875397, 2])
We keep 1.22e+09/2.18e+11 =  0% of the original kernel matrix.

torch.Size([236397, 2])
We keep 1.02e+08/1.55e+10 =  0% of the original kernel matrix.

torch.Size([23574, 2])
We keep 3.72e+06/1.45e+08 =  2% of the original kernel matrix.

torch.Size([37660, 2])
We keep 4.74e+06/3.99e+08 =  1% of the original kernel matrix.

torch.Size([6677, 2])
We keep 2.99e+05/8.12e+06 =  3% of the original kernel matrix.

torch.Size([20970, 2])
We keep 1.67e+06/9.43e+07 =  1% of the original kernel matrix.

torch.Size([31939, 2])
We keep 4.13e+06/2.73e+08 =  1% of the original kernel matrix.

torch.Size([44234, 2])
We keep 6.09e+06/5.47e+08 =  1% of the original kernel matrix.

torch.Size([348314, 2])
We keep 4.27e+09/6.21e+10 =  6% of the original kernel matrix.

torch.Size([148145, 2])
We keep 5.89e+07/8.25e+09 =  0% of the original kernel matrix.

torch.Size([67703, 2])
We keep 1.81e+07/1.44e+09 =  1% of the original kernel matrix.

torch.Size([63805, 2])
We keep 1.15e+07/1.26e+09 =  0% of the original kernel matrix.

torch.Size([11933, 2])
We keep 6.71e+06/7.27e+07 =  9% of the original kernel matrix.

torch.Size([25966, 2])
We keep 3.58e+06/2.82e+08 =  1% of the original kernel matrix.

torch.Size([5756, 2])
We keep 3.23e+05/6.86e+06 =  4% of the original kernel matrix.

torch.Size([19582, 2])
We keep 1.60e+06/8.67e+07 =  1% of the original kernel matrix.

torch.Size([141213, 2])
We keep 3.00e+08/6.78e+09 =  4% of the original kernel matrix.

torch.Size([91261, 2])
We keep 2.23e+07/2.73e+09 =  0% of the original kernel matrix.

torch.Size([11029, 2])
We keep 9.01e+05/2.40e+07 =  3% of the original kernel matrix.

torch.Size([26171, 2])
We keep 2.44e+06/1.62e+08 =  1% of the original kernel matrix.

torch.Size([67582, 2])
We keep 5.05e+07/2.42e+09 =  2% of the original kernel matrix.

torch.Size([61108, 2])
We keep 1.45e+07/1.63e+09 =  0% of the original kernel matrix.

torch.Size([13344, 2])
We keep 1.01e+06/3.38e+07 =  2% of the original kernel matrix.

torch.Size([28877, 2])
We keep 2.78e+06/1.92e+08 =  1% of the original kernel matrix.

torch.Size([31575, 2])
We keep 3.47e+06/2.28e+08 =  1% of the original kernel matrix.

torch.Size([44146, 2])
We keep 5.62e+06/5.00e+08 =  1% of the original kernel matrix.

torch.Size([34972, 2])
We keep 5.68e+06/3.71e+08 =  1% of the original kernel matrix.

torch.Size([46350, 2])
We keep 6.83e+06/6.38e+08 =  1% of the original kernel matrix.

torch.Size([20336, 2])
We keep 1.42e+06/7.68e+07 =  1% of the original kernel matrix.

torch.Size([35065, 2])
We keep 3.70e+06/2.90e+08 =  1% of the original kernel matrix.

torch.Size([27270, 2])
We keep 3.18e+06/1.81e+08 =  1% of the original kernel matrix.

torch.Size([40422, 2])
We keep 5.14e+06/4.45e+08 =  1% of the original kernel matrix.

torch.Size([301183, 2])
We keep 1.94e+08/2.63e+10 =  0% of the original kernel matrix.

torch.Size([137188, 2])
We keep 3.95e+07/5.37e+09 =  0% of the original kernel matrix.

torch.Size([658952, 2])
We keep 7.95e+08/1.17e+11 =  0% of the original kernel matrix.

torch.Size([205195, 2])
We keep 7.67e+07/1.13e+10 =  0% of the original kernel matrix.

torch.Size([256053, 2])
We keep 3.03e+08/2.19e+10 =  1% of the original kernel matrix.

torch.Size([125713, 2])
We keep 3.66e+07/4.90e+09 =  0% of the original kernel matrix.

torch.Size([166378, 2])
We keep 1.51e+08/9.46e+09 =  1% of the original kernel matrix.

torch.Size([98260, 2])
We keep 2.56e+07/3.22e+09 =  0% of the original kernel matrix.

torch.Size([46857, 2])
We keep 7.17e+06/6.00e+08 =  1% of the original kernel matrix.

torch.Size([54160, 2])
We keep 8.15e+06/8.11e+08 =  1% of the original kernel matrix.

torch.Size([29927, 2])
We keep 6.50e+06/2.68e+08 =  2% of the original kernel matrix.

torch.Size([42395, 2])
We keep 5.95e+06/5.41e+08 =  1% of the original kernel matrix.

torch.Size([35836, 2])
We keep 7.44e+06/4.27e+08 =  1% of the original kernel matrix.

torch.Size([47110, 2])
We keep 7.39e+06/6.84e+08 =  1% of the original kernel matrix.

torch.Size([264526, 2])
We keep 1.35e+08/1.98e+10 =  0% of the original kernel matrix.

torch.Size([128007, 2])
We keep 3.51e+07/4.66e+09 =  0% of the original kernel matrix.

torch.Size([56167, 2])
We keep 4.42e+07/1.38e+09 =  3% of the original kernel matrix.

torch.Size([59982, 2])
We keep 1.21e+07/1.23e+09 =  0% of the original kernel matrix.

torch.Size([115250, 2])
We keep 1.70e+08/6.26e+09 =  2% of the original kernel matrix.

torch.Size([81655, 2])
We keep 2.19e+07/2.62e+09 =  0% of the original kernel matrix.

torch.Size([27653, 2])
We keep 3.75e+06/2.03e+08 =  1% of the original kernel matrix.

torch.Size([40930, 2])
We keep 5.40e+06/4.71e+08 =  1% of the original kernel matrix.

torch.Size([1439138, 2])
We keep 6.99e+09/8.62e+11 =  0% of the original kernel matrix.

torch.Size([307783, 2])
We keep 1.94e+08/3.07e+10 =  0% of the original kernel matrix.

torch.Size([55737, 2])
We keep 2.76e+07/1.04e+09 =  2% of the original kernel matrix.

torch.Size([58489, 2])
We keep 1.01e+07/1.07e+09 =  0% of the original kernel matrix.

torch.Size([95008, 2])
We keep 5.18e+07/3.73e+09 =  1% of the original kernel matrix.

torch.Size([74968, 2])
We keep 1.76e+07/2.02e+09 =  0% of the original kernel matrix.

torch.Size([331565, 2])
We keep 4.32e+08/4.36e+10 =  0% of the original kernel matrix.

torch.Size([144680, 2])
We keep 4.97e+07/6.91e+09 =  0% of the original kernel matrix.

torch.Size([100994, 2])
We keep 2.73e+07/2.78e+09 =  0% of the original kernel matrix.

torch.Size([78057, 2])
We keep 1.51e+07/1.75e+09 =  0% of the original kernel matrix.

torch.Size([120364, 2])
We keep 4.88e+08/7.62e+09 =  6% of the original kernel matrix.

torch.Size([83358, 2])
We keep 2.37e+07/2.89e+09 =  0% of the original kernel matrix.

torch.Size([724349, 2])
We keep 2.44e+09/2.18e+11 =  1% of the original kernel matrix.

torch.Size([213844, 2])
We keep 1.03e+08/1.55e+10 =  0% of the original kernel matrix.

torch.Size([402889, 2])
We keep 3.28e+08/4.94e+10 =  0% of the original kernel matrix.

torch.Size([160168, 2])
We keep 5.22e+07/7.35e+09 =  0% of the original kernel matrix.

torch.Size([151444, 2])
We keep 1.34e+08/8.68e+09 =  1% of the original kernel matrix.

torch.Size([93953, 2])
We keep 2.46e+07/3.08e+09 =  0% of the original kernel matrix.

torch.Size([28076, 2])
We keep 5.21e+06/2.18e+08 =  2% of the original kernel matrix.

torch.Size([41192, 2])
We keep 5.39e+06/4.89e+08 =  1% of the original kernel matrix.

torch.Size([86414, 2])
We keep 4.97e+07/2.71e+09 =  1% of the original kernel matrix.

torch.Size([71366, 2])
We keep 1.51e+07/1.72e+09 =  0% of the original kernel matrix.

torch.Size([23459, 2])
We keep 5.70e+06/1.62e+08 =  3% of the original kernel matrix.

torch.Size([37792, 2])
We keep 4.97e+06/4.21e+08 =  1% of the original kernel matrix.

torch.Size([313553, 2])
We keep 3.42e+08/2.85e+10 =  1% of the original kernel matrix.

torch.Size([140120, 2])
We keep 4.10e+07/5.59e+09 =  0% of the original kernel matrix.

torch.Size([1711445, 2])
We keep 4.85e+09/8.60e+11 =  0% of the original kernel matrix.

torch.Size([339749, 2])
We keep 1.92e+08/3.07e+10 =  0% of the original kernel matrix.

torch.Size([179065, 2])
We keep 2.93e+08/1.33e+10 =  2% of the original kernel matrix.

torch.Size([103474, 2])
We keep 2.98e+07/3.82e+09 =  0% of the original kernel matrix.

torch.Size([205970, 2])
We keep 2.90e+08/2.17e+10 =  1% of the original kernel matrix.

torch.Size([107731, 2])
We keep 3.69e+07/4.87e+09 =  0% of the original kernel matrix.

torch.Size([48198, 2])
We keep 4.24e+07/9.18e+08 =  4% of the original kernel matrix.

torch.Size([54622, 2])
We keep 9.69e+06/1.00e+09 =  0% of the original kernel matrix.

torch.Size([51802, 2])
We keep 3.26e+07/1.35e+09 =  2% of the original kernel matrix.

torch.Size([54524, 2])
We keep 1.15e+07/1.22e+09 =  0% of the original kernel matrix.

torch.Size([106318, 2])
We keep 4.80e+07/3.99e+09 =  1% of the original kernel matrix.

torch.Size([81759, 2])
We keep 1.81e+07/2.09e+09 =  0% of the original kernel matrix.

torch.Size([33973, 2])
We keep 1.05e+07/4.12e+08 =  2% of the original kernel matrix.

torch.Size([45210, 2])
We keep 7.02e+06/6.72e+08 =  1% of the original kernel matrix.

torch.Size([46812, 2])
We keep 2.17e+07/8.39e+08 =  2% of the original kernel matrix.

torch.Size([54157, 2])
We keep 9.57e+06/9.59e+08 =  0% of the original kernel matrix.

torch.Size([849810, 2])
We keep 1.05e+09/2.28e+11 =  0% of the original kernel matrix.

torch.Size([233681, 2])
We keep 1.04e+08/1.58e+10 =  0% of the original kernel matrix.

torch.Size([53585, 2])
We keep 5.53e+07/2.34e+09 =  2% of the original kernel matrix.

torch.Size([53024, 2])
We keep 1.44e+07/1.60e+09 =  0% of the original kernel matrix.

torch.Size([213577, 2])
We keep 7.64e+08/3.53e+10 =  2% of the original kernel matrix.

torch.Size([108547, 2])
We keep 4.51e+07/6.22e+09 =  0% of the original kernel matrix.

torch.Size([209870, 2])
We keep 3.71e+08/2.38e+10 =  1% of the original kernel matrix.

torch.Size([111341, 2])
We keep 3.84e+07/5.10e+09 =  0% of the original kernel matrix.

torch.Size([103521, 2])
We keep 3.13e+07/3.23e+09 =  0% of the original kernel matrix.

torch.Size([78698, 2])
We keep 1.62e+07/1.88e+09 =  0% of the original kernel matrix.

torch.Size([45616, 2])
We keep 3.47e+07/1.09e+09 =  3% of the original kernel matrix.

torch.Size([51600, 2])
We keep 1.05e+07/1.09e+09 =  0% of the original kernel matrix.

torch.Size([199759, 2])
We keep 3.02e+08/1.48e+10 =  2% of the original kernel matrix.

torch.Size([110142, 2])
We keep 3.14e+07/4.03e+09 =  0% of the original kernel matrix.

torch.Size([343734, 2])
We keep 2.38e+08/3.72e+10 =  0% of the original kernel matrix.

torch.Size([147775, 2])
We keep 4.59e+07/6.38e+09 =  0% of the original kernel matrix.

torch.Size([14570, 2])
We keep 2.19e+06/7.13e+07 =  3% of the original kernel matrix.

torch.Size([29087, 2])
We keep 3.62e+06/2.79e+08 =  1% of the original kernel matrix.

torch.Size([1186906, 2])
We keep 2.22e+09/4.72e+11 =  0% of the original kernel matrix.

torch.Size([284780, 2])
We keep 1.44e+08/2.27e+10 =  0% of the original kernel matrix.

torch.Size([60136, 2])
We keep 2.77e+07/1.44e+09 =  1% of the original kernel matrix.

torch.Size([60453, 2])
We keep 1.14e+07/1.26e+09 =  0% of the original kernel matrix.

torch.Size([170709, 2])
We keep 2.26e+08/1.04e+10 =  2% of the original kernel matrix.

torch.Size([100485, 2])
We keep 2.69e+07/3.38e+09 =  0% of the original kernel matrix.

torch.Size([10855, 2])
We keep 5.29e+05/1.83e+07 =  2% of the original kernel matrix.

torch.Size([26588, 2])
We keep 2.19e+06/1.42e+08 =  1% of the original kernel matrix.

torch.Size([21138, 2])
We keep 2.06e+06/1.01e+08 =  2% of the original kernel matrix.

torch.Size([35564, 2])
We keep 4.11e+06/3.32e+08 =  1% of the original kernel matrix.

torch.Size([5478, 2])
We keep 2.69e+05/5.27e+06 =  5% of the original kernel matrix.

torch.Size([19360, 2])
We keep 1.45e+06/7.60e+07 =  1% of the original kernel matrix.

torch.Size([7018, 2])
We keep 3.55e+05/1.01e+07 =  3% of the original kernel matrix.

torch.Size([21444, 2])
We keep 1.78e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([44579, 2])
We keep 1.72e+07/6.27e+08 =  2% of the original kernel matrix.

torch.Size([52137, 2])
We keep 8.44e+06/8.28e+08 =  1% of the original kernel matrix.

torch.Size([144224, 2])
We keep 2.23e+08/9.71e+09 =  2% of the original kernel matrix.

torch.Size([90970, 2])
We keep 2.58e+07/3.26e+09 =  0% of the original kernel matrix.

Thu Feb 2 04:28:07 EST 2023
