Wed Feb 1 07:13:47 EST 2023
| ID | GPU | MEM |
------------------
|  0 |  0% |  0% |
|  1 |  0% |  0% |
numbers of X: 47512099
numbers of Z: 25526
shape of features
(25526,)
shape of features
(25526,)
ZX	Vol	Parts	Cubes	Eps
Z	0.01907094211459766	25526	25.526	0.0907395165402694
X	0.018494425108869048	1689	1.689	0.2220600306786514
X	0.018502891769672118	23493	23.493	0.09234932170204226
X	0.018442736762047014	2585	2.585	0.19251072963071716
X	0.018501919698142726	16386	16.386	0.10413129763404967
X	0.01849418945869016	8288	8.288	0.13067580574827706
X	0.018497749749250836	10637	10.637	0.12025410585593657
X	0.018549198183533535	70938	70.938	0.06394629700343417
X	0.018584863645120804	47725	47.725	0.07302492966306154
X	0.018545189071232638	10036	10.036	0.12271289564868881
X	0.018420419625643808	13287	13.287	0.11150410636794862
X	0.0185440015035654	18388	18.388	0.10028199986481755
X	0.018486672532248463	183353	183.353	0.04654327182450568
X	0.018725280441419006	6696	6.696	0.14088701310343052
X	0.01863507860298111	298733	298.733	0.03965969252752711
X	0.018540711026722563	22580	22.58	0.09364131039899071
X	0.018580303304432305	46396	46.396	0.0737096054372335
X	0.018563135636174545	73042	73.042	0.06334216363565785
X	0.0185125035080154	37193	37.193	0.07925037293158901
X	0.018590571217153757	217944	217.944	0.044019922363382494
X	0.01856813281781469	138945	138.945	0.05112599465501814
X	0.018449823074372804	8691	8.691	0.12852101654331233
X	0.018605740724445267	254495	254.495	0.041814082341287265
X	0.018476036147370478	13797	13.797	0.11022363086787552
X	0.018509345775202576	54133	54.133	0.06992669315784118
X	0.018373459458507737	2078	2.078	0.2067831423494629
X	0.018592134486933795	100824	100.824	0.056918717986285366
X	0.018604342453173703	99311	99.311	0.05721883221750409
X	0.018506958399877094	7809	7.809	0.1333254961882231
X	0.01854626932083759	95844	95.844	0.057840300937232324
X	0.018630374804918148	1267334	1267.334	0.02449684580892538
X	0.018455454760930794	7790	7.79	0.13330990874907903
X	0.01865196997188369	1145760	1145.76	0.02534410837827506
X	0.018519667677927207	49183	49.183	0.0722114486997685
X	0.018555095437439426	6709	6.709	0.1403681146907077
X	0.01854025061643699	5173	5.173	0.15303509612604693
X	0.018556011672484246	173121	173.121	0.04750197079674436
X	0.018537105358883137	97181	97.181	0.057564338484427456
X	0.018432649903614793	1603	1.603	0.2257103204652005
X	0.018537169572958027	5973	5.973	0.14586473343125703
X	0.018419555462523694	3362	3.362	0.1762897838220143
X	0.018560930119636526	4287	4.287	0.16298541803306243
X	0.018441197452144148	4104	4.104	0.16501645583966526
X	0.018480422140512823	1374	1.374	0.23781635489656755
X	0.018304913252053003	4879	4.879	0.15538614260847192
X	0.018467997389406205	1453	1.453	0.23337342325206464
X	0.018490234924852113	2311	2.311	0.2000080586860008
X	0.018485067644961654	5193	5.193	0.15268659394903977
X	0.01850036980615909	4790	4.79	0.15689711770711076
X	0.01845211937694132	1962	1.962	0.21108097142595422
X	0.018405159003746622	13725	13.725	0.11027466324087053
X	0.018555977990397862	15452	15.452	0.10629178892162708
X	0.018452317261482463	3310	3.31	0.17731316139437256
X	0.018429067885534434	8875	8.875	0.1275787480478674
X	0.01817649596563171	2769	2.769	0.187238751331051
X	0.01849138183674124	7166	7.166	0.13716106679708015
X	0.0184588478484839	4951	4.951	0.15506146681929603
X	0.018272546395034513	2235	2.235	0.20145305074289777
X	0.018292668487719557	4548	4.548	0.15903237176779494
X	0.01850608358480076	4564	4.564	0.1594616650469864
X	0.018405984773476082	3830	3.83	0.16875374835439627
X	0.018521585211908404	5245	5.245	0.15228047418663002
X	0.018451405224613658	2343	2.343	0.19895386758193695
X	0.01845899119462904	9679	9.679	0.12401069961085534
X	0.018498474124529922	8932	8.932	0.12746640303980358
X	0.018461744405763585	3663	3.663	0.17145307232987347
X	0.018492580216169962	3444	3.444	0.17511020487797824
X	0.01839913674161062	4108	4.108	0.16483736773411534
X	0.018343204772917374	5426	5.426	0.1500831057761149
X	0.018539261501289914	6061	6.061	0.1451608097328268
X	0.018420143900927957	2869	2.869	0.18586066646945576
X	0.01849153799841248	2835	2.835	0.18684149072969453
X	0.01825624172580412	4080	4.08	0.16478477049478008
X	0.01844589651055294	5160	5.16	0.15290324019241316
X	0.018476512412894188	2550	2.55	0.19350548177408627
X	0.01851898945720643	6139	6.139	0.1444906962164359
X	0.018420247122117414	7928	7.928	0.13244755236810846
X	0.018486238876487364	1725	1.725	0.22047185376620243
X	0.018386539575329437	967	0.967	0.26690569609361625
X	0.018479044109790472	4300	4.3	0.16258120903199375
X	0.018473814302040415	12902	12.902	0.11271105427013892
X	0.018365220308807627	5255	5.255	0.15175434715041405
X	0.018349058140060503	2569	2.569	0.19258238351746962
X	0.018505497463513168	6527	6.527	0.14153452243718107
X	0.01830748926311507	2836	2.836	0.18619764646200268
X	0.018465589372974867	3106	3.106	0.1811564941865724
X	0.018471689750030478	1890	1.89	0.21380356402880574
X	0.018417753063071647	5125	5.125	0.15317254395785418
X	0.018467833115899404	2142	2.142	0.20505269974952378
X	0.018820073187158507	4318	4.318	0.16334764966507362
X	0.01852137766649619	4689	4.689	0.1580754226148112
X	0.018496645329466294	3414	3.414	0.17563449544730614
X	0.018472466048302372	2239	2.239	0.20206461194206435
X	0.018470788302597005	2574	2.574	0.19288226446526952
X	0.018512085086988105	4977	4.977	0.15493964824696596
X	0.018323409964515494	4502	4.502	0.15966152359934627
X	0.018520778031531154	6040	6.04	0.14528053463797364
X	0.01842115558569383	3436	3.436	0.17502009093798143
X	0.01850443895707417	12600	12.6	0.11366719048512185
X	0.01852021518183722	4284	4.284	0.16290416522135862
X	0.01850256739791423	3287	3.287	0.17788695329171256
X	0.018531355350365448	14116	14.116	0.10949606484418851
X	0.01844130883226751	4919	4.919	0.15534775190148056
X	0.01849040680751216	9136	9.136	0.12649211622564285
X	0.018312938092017724	1896	1.896	0.21296418114121354
X	0.018494553367044732	5242	5.242	0.15223538518043989
X	0.018283422173499805	2524	2.524	0.19348889554690876
X	0.018533350406203433	7255	7.255	0.1367011516670116
X	0.018106447191649045	1380	1.38	0.23585842022220568
X	0.018481219944978467	5056	5.056	0.15404272410097314
X	0.018479210279950812	1817	1.817	0.2166587135149803
X	0.0183041875689309	2386	2.386	0.19722411051189478
X	0.0179625329752692	1536	1.536	0.226982367172178
X	0.0183640480898422	2734	2.734	0.18867888613089578
X	0.018494483161302762	3968	3.968	0.16704116564110616
X	0.018485716887498407	5202	5.202	0.15260027509450022
X	0.018381257856867807	2256	2.256	0.20122350558450325
X	0.018461045891450176	2080	2.08	0.2070447975145629
X	0.01837760436049816	1907	1.907	0.2128038111334358
X	0.018530813244100237	10013	10.013	0.12277504095642798
X	0.01808154675834932	2808	2.808	0.18604278199049457
X	0.0185200540088476	10608	10.608	0.1204119471364185
X	0.018322084590604658	3373	3.373	0.17578676783282188
X	0.018324357288434845	3105	3.105	0.18071285569652815
X	0.018523766091209693	3575	3.575	0.17304182258718087
X	0.018298124280100178	2145	2.145	0.20432731376328706
X	0.01842753317678454	3516	3.516	0.1737025170977093
X	0.01847845348135062	2627	2.627	0.19160279912324968
X	0.018407235369069214	3203	3.203	0.17911991547730624
X	0.018524132453133092	12317	12.317	0.11457177604865036
X	0.018418377401179974	2946	2.946	0.18422117233197854
X	0.018438248509228834	5863	5.863	0.1465097711432197
X	0.018398428961035978	2834	2.834	0.1865493033061699
X	0.018407422650597822	4943	4.943	0.15500086599127125
X	0.01835702682896504	1659	1.659	0.22283598193071036
X	0.01855943309283123	6627	6.627	0.14095567920143448
X	0.018480503328069064	2909	2.909	0.18520669905363168
X	0.018522410190840787	1542	1.542	0.22901875073841924
X	0.018461443880366718	1719	1.719	0.22062933835539497
X	0.018288417008877657	3243	3.243	0.17799578672329489
X	0.018518230316982298	2280	2.28	0.20101179638185382
X	0.01851991791040639	4657	4.657	0.15843249922803254
X	0.018260054278806396	2489	2.489	0.19430876397890073
X	0.01838357528896333	12562	12.562	0.11353342241463983
X	0.01836470363708912	8974	8.974	0.12695971914453666
X	0.018483256276552975	4893	4.893	0.15574032971974197
X	0.018198506465320754	2610	2.61	0.19104327154900172
X	0.01852942818767941	2797	2.797	0.18781193347346956
X	0.018647149702179486	3159	3.159	0.18072612790299694
X	0.018438570746798635	2301	2.301	0.20011065420515398
X	0.018496064684856747	3281	3.281	0.1779744673058567
X	0.01836488571689155	2608	2.608	0.1916726795927749
X	0.018496817544601557	4332	4.332	0.16223187523978197
X	0.018468648905933048	4919	4.919	0.1554244840150266
X	0.018472107626114304	14169	14.169	0.10924269778965337
X	0.018116607541933012	3134	3.134	0.17947031624113022
X	0.01849589442286478	21351	21.351	0.0953276833766364
X	0.018458100913999784	3381	3.381	0.17608158887298506
X	0.018514380570849483	5376	5.376	0.15101380216030805
X	0.018352852176683098	5730	5.73	0.1474063915188206
X	0.018138587818398756	724	0.724	0.2926094190839387
X	0.018791324639384765	8375	8.375	0.13091543705209505
X	0.01833539726298782	3263	3.263	0.1777833491769126
X	0.01834569416057692	4882	4.882	0.15546959170649732
X	0.01851122006065845	1443	1.443	0.23409361639002232
X	0.01835847295753296	4689	4.689	0.15761060657797074
X	0.01828591723450828	2767	2.767	0.1876589132102072
X	0.018529933650781493	3274	3.274	0.1782098602901488
X	0.01841650081080906	4849	4.849	0.15602168987746898
X	0.018911751993987046	5110	5.11	0.15468099413072744
X	0.018137772234910154	1168	1.168	0.24948649040540785
X	0.018292267432052884	2457	2.457	0.19526337665297583
X	0.018317604965637408	1925	1.925	0.21190733269925993
X	0.018502206476940453	7715	7.715	0.13385333541607358
X	0.018443921232253076	2185	2.185	0.2036107041495714
X	0.01853580176493365	4968	4.968	0.15509933282640911
X	0.018492731500214965	3741	3.741	0.1703482927199208
X	0.018493610299803443	4844	4.844	0.15629287825975657
X	0.018534962910194058	4008	4.008	0.16660498921800532
X	0.018501623183082565	7705	7.705	0.13390981071974317
X	0.01843436936303489	3097	3.097	0.18122955604386887
X	0.01854252707500989	3343	3.343	0.17701531751067326
X	0.01839381451847111	3411	3.411	0.1753597944707421
X	0.018158399314353677	4432	4.432	0.1600144747146151
X	0.018422904376431497	2692	2.692	0.18985746629582456
X	0.018522240106360034	5101	5.101	0.15370195637573986
X	0.01853171595604057	6533	6.533	0.14155796985046648
X	0.018469183979835976	3224	3.224	0.17893043790195254
X	0.01849587905023523	4881	4.881	0.15590332933709042
X	0.018360817978285093	6097	6.097	0.14440822949694843
X	0.018496572094183716	12158	12.158	0.11501196852929266
X	0.01846863789096668	2396	2.396	0.19753740800627348
X	0.018342120052986893	815	0.815	0.28233451566495993
X	0.018578214681094992	3641	3.641	0.1721582209313741
X	0.018483819299285248	3073	3.073	0.18186245578259153
X	0.018343578227963304	4232	4.232	0.163046994995728
X	0.018434467335306112	4658	4.658	0.15817713424149732
X	0.018393151131947828	3227	3.227	0.17862917453753857
X	0.018433798062677573	1829	1.829	0.21600660944208266
X	0.018478831237309163	3240	3.24	0.17866651363462954
X	0.018514173463187403	1815	1.815	0.21687487060109603
X	0.01849988827544413	3803	3.803	0.16943934349806902
X	0.01839179944454703	2175	2.175	0.20373000087941145
X	0.01851790208509005	5969	5.969	0.14584674292852287
X	0.018525111065127026	4477	4.477	0.16054295113643208
X	0.018546571629007483	6153	6.153	0.144452670596952
X	0.018373760935611026	1461	1.461	0.2325497882970457
X	0.01870731387482358	5722	5.722	0.14841843909513516
X	0.01849079056723514	3597	3.597	0.17258578169775604
X	0.018533342636188704	5249	5.249	0.15227398991593763
X	0.018542551170765434	6206	6.206	0.1440298709769068
X	0.01849901453120467	7091	7.091	0.13766188204594929
X	0.01833319547422888	5177	5.177	0.15242399306403406
X	0.018417995397233898	3174	3.174	0.17969878714199267
X	0.01829751935325231	3087	3.087	0.18097497635854884
X	0.01831459161217278	1082	1.082	0.25675761096148464
X	0.01833579328693129	2629	2.629	0.19105997035648475
X	0.01842325245278086	1629	1.629	0.22446488300327166
X	0.018357022570349643	1255	1.255	0.2445604202606882
X	0.018488690707341555	11982	11.982	0.11555594158665528
X	0.018525072969279938	2633	2.633	0.19161802344470713
X	0.017970780284361155	2777	2.777	0.18635040954910856
X	0.018489619864147593	2443	2.443	0.1963367081313612
X	0.018470058325872295	5022	5.022	0.15435848930138066
X	0.018372653525790716	2942	2.942	0.1841519854411009
X	0.018440392114837827	6282	6.282	0.14318276336287625
X	0.018471838472369016	5713	5.713	0.14787064459737215
X	0.01809192435104335	1485	1.485	0.2301014929583803
X	0.018480531338132822	2273	2.273	0.20108129458967602
X	0.018494425103582793	4452	4.452	0.16075403895429063
X	0.01793230944457255	1260	1.26	0.24233820857211966
X	0.018467116162049768	2419	2.419	0.1969039390301523
X	0.018399591656049676	3452	3.452	0.17468105219709823
X	0.01852370180751483	5139	5.139	0.15332620546008024
X	0.018610521966951694	5328	5.328	0.15172766671579707
X	0.018494851563687846	2000	2.0	0.2098973480298308
X	0.018453814302384505	2473	2.473	0.1954132509775829
X	0.018482292425126015	3516	3.516	0.17387440505346954
X	0.018551260493153934	7359	7.359	0.13609793641780615
X	0.018291291973569206	1968	1.968	0.21025181943650778
X	0.01850063409544453	17789	17.789	0.10131607563989854
X	0.018555795816582146	71659	71.659	0.06373866268932782
X	0.018541386591152537	4610	4.61	0.1590305012877445
X	0.018480830044499266	5291	5.291	0.15172642925164243
X	0.018303213359788545	1040	1.04	0.2601145630001307
X	0.018517260804712027	6064	6.064	0.14507943321929462
X	0.01848026740798383	62102	62.102	0.0667627506416825
X	0.018569900206217505	215203	215.203	0.04418963518729092
X	0.018447134024749425	2740	2.74	0.18882497973116275
X	0.01858950049826852	95607	95.607	0.05793299883370727
X	0.01852554562041401	52996	52.996	0.0704437778458515
X	0.018491014440078866	19337	19.337	0.09851988135861149
X	0.01854730379732298	119097	119.097	0.05380136833019834
X	0.01833266320535524	2163	2.163	0.2038870678292341
X	0.01836321584180886	5390	5.39	0.15047117925647677
X	0.0185758423268486	167637	167.637	0.0480315068919428
X	0.018590019420011285	245018	245.018	0.04233445283535797
X	0.01847586103894543	5957	5.957	0.14583408094028463
X	0.01855755432881204	34270	34.27	0.08150837072259902
X	0.018429542910770067	28385	28.385	0.08659149181330081
X	0.018484133440187952	48854	48.854	0.07232686743472116
X	0.018510320567875722	70821	70.821	0.06393676056723688
X	0.018247787056361455	69063	69.063	0.06416845580309563
X	0.01857415716340369	69514	69.514	0.06440885995192007
X	0.018538165220313745	20881	20.881	0.0961107172653806
X	0.018277200879979805	4748	4.748	0.1567230921099199
X	0.018564804219797212	163295	163.295	0.04844390705035812
X	0.018380178007142492	5400	5.4	0.15042452580015772
X	0.01829416842383138	2766	2.766	0.18770975049509125
X	0.01846102145547476	31849	31.849	0.08337835235100649
X	0.01846346392989014	59966	59.966	0.0675257423431707
X	0.018558376433267708	234947	234.947	0.042906526590916795
X	0.018921622090887963	85224	85.224	0.06055251000690306
X	0.018487881096167613	2088	2.088	0.20688017822159252
X	0.01851768271446418	16524	16.524	0.10387008429715158
X	0.018346802679553926	11725	11.725	0.11609562295550567
X	0.01854314456611202	20463	20.463	0.09676939517401249
X	0.018593470585945047	82444	82.444	0.060869602941987545
X	0.018391287460125673	13826	13.826	0.10997784192304844
X	0.01849897678350758	31790	31.79	0.08348703927387144
X	0.01779244270129248	836	0.836	0.2771254637093061
X	0.018502099918930235	4898	4.898	0.15574020681048883
X	0.01851196564974801	70145	70.145	0.06414339441883973
X	0.018513632504611844	62986	62.986	0.06648890846702357
X	0.018449534060463357	41985	41.985	0.07602628132678842
X	0.01845567946491347	5280	5.28	0.15176281449416354
X	0.0185904783608299	322955	322.955	0.03861145647473182
X	0.018581543724509975	15474	15.474	0.10629016136305479
X	0.018531430526000068	32322	32.322	0.08307497895912602
X	0.0185778726007156	116329	116.329	0.05425452869967225
X	0.018117999706715675	3029	3.029	0.18152522830896967
X	0.018579427026924715	80062	80.062	0.06145189699402689
X	0.018628719492762538	282814	282.814	0.04038567688749354
X	0.018737138499163693	302618	302.618	0.039561204277262
X	0.018460811291561924	11966	11.966	0.11554928473100715
X	0.018460342150255476	7213	7.213	0.1367858808010209
X	0.018143182642704644	7400	7.4	0.13484264130933718
X	0.018532463830641933	3957	3.957	0.1673101814883539
X	0.018589608565797222	50834	50.834	0.07151085767409253
X	0.018532396974744087	8779	8.779	0.12828095423194522
X	0.018542220625543494	25148	25.148	0.0903412504518688
X	0.018598379808595335	66999	66.999	0.06523323715156
X	0.018558811037507856	22734	22.734	0.09345978222941634
X	0.01846377082788474	16087	16.087	0.10470042544375223
X	0.018540451046281374	5956	5.956	0.1460119951780943
X	0.018587502655585206	158225	158.225	0.048975849731241444
X	0.018521822680136534	33830	33.83	0.08180764826421044
X	0.01854725242425561	29788	29.788	0.08539112707430407
X	0.018511262829331448	10768	10.768	0.11979361388951143
X	0.01856020889757189	195058	195.058	0.04565338992987016
X	0.01846632200228795	6896	6.896	0.1388655068988399
X	0.018571026843039688	229354	229.354	0.04326232607404579
X	0.018387393911814823	6748	6.748	0.1396738278324863
X	0.018491090461994996	29608	29.608	0.08547736984816204
X	0.01853545589517269	13011	13.011	0.11252029579021407
X	0.01849412515687556	203466	203.466	0.0449621753525306
X	0.01853793663204377	48531	48.531	0.07255723388901511
X	0.018531729483453125	4832	4.832	0.15652955194982174
X	0.01860857824843619	141253	141.253	0.050882897913627025
X	0.018600088623382336	167037	167.037	0.04810986194812146
X	0.018520689356433924	4107	4.107	0.16521297369427096
X	0.018579059257305557	82062	82.062	0.06094815184425044
X	0.01856184887740955	127935	127.935	0.052546519241690404
X	0.018646559113604546	402965	402.965	0.035901323454913515
X	0.01856284990631604	50357	50.357	0.07170150441063129
X	0.018414899054434566	2300	2.3	0.2000539675175101
X	0.0185423359314858	11144	11.144	0.11849711598641488
X	0.018578631235491787	4664	4.664	0.158520362795525
X	0.01848194519025209	27196	27.196	0.08791862388402566
X	0.01846385827261992	23779	23.779	0.09191286218447554
X	0.01843848717031387	2587	2.587	0.19244632357799946
X	0.01855917315979001	89020	89.02	0.05929576520516727
X	0.018582513170367073	199745	199.745	0.045311611784678914
X	0.01848577700202243	2267	2.267	0.20127757738159074
X	0.018518157637399515	7526	7.526	0.13500334242201442
X	0.018393763567947193	17666	17.666	0.10135475415573712
X	0.01849596505916671	9658	9.658	0.12418331962780244
X	0.01840690327087458	8439	8.439	0.1296870409300464
X	0.01846445222909682	9453	9.453	0.12500352409621598
X	0.018541804802042715	5367	5.367	0.15117273481480742
X	0.018560732633438364	29284	29.284	0.08589902588728623
X	0.018571370045324023	30708	30.708	0.08456632747543398
X	0.01857654921583959	23859	23.859	0.09199642165523603
X	0.018544513931906332	50787	50.787	0.07147502209572557
X	0.018494700707681885	8719	8.719	0.12848730205737285
X	0.01859567734803991	489888	489.888	0.03360766970085799
X	0.018479492331689037	7093	7.093	0.13760050425235357
X	0.018530339518093717	71256	71.256	0.06382938291108038
X	0.018508371534447943	1906	1.906	0.21334465699606084
X	0.0184606577222961	5488	5.488	0.14983422383760703
X	0.018548819591416733	4001	4.001	0.16674362620560862
X	0.018560130775528327	15444	15.444	0.106318068883993
X	0.018491997127002602	3878	3.878	0.16831597513861737
X	0.018569068482458043	125356	125.356	0.05291128765799681
X	0.018386153609204047	3466	3.466	0.1744030632080349
X	0.018495509002430372	4639	4.639	0.15856742429329856
X	0.018604802606642247	394008	394.008	0.03614431586590772
X	0.018568278297089947	71562	71.562	0.06378174383810656
X	0.018545357584921457	49426	49.426	0.07212623274025773
X	0.018578471012859952	157231	157.231	0.04907088954887878
X	0.018672798042195456	311514	311.514	0.039136075833797586
X	0.018509375070535843	4721	4.721	0.15768337923217807
X	0.01849810278585998	6161	6.161	0.14426422925619747
X	0.018505123283429924	35112	35.112	0.08077534190598316
X	0.018275281157099303	1796	1.796	0.21669684001466455
X	0.018281279305315916	6121	6.121	0.1440106911884132
X	0.018508913220874997	12525	12.525	0.11390279861110028
X	0.018428635491968295	5179	5.179	0.15266837734660418
X	0.0185088286662852	6163	6.163	0.14427649698815287
X	0.01842224802182922	2492	2.492	0.1948041459880343
X	0.018513955231973613	5508	5.508	0.14979653209160554
X	0.018652669609730246	335187	335.187	0.03817841933605822
X	0.018498197035438917	19079	19.079	0.09897479198887074
X	0.018477904993062982	70639	70.639	0.06395424786187878
X	0.0184766164512873	9004	9.004	0.12707564392912413
X	0.01850539544671402	4448	4.448	0.1608340002577663
X	0.018274975943902674	7922	7.922	0.13213179208174294
X	0.019003113282322848	556141	556.141	0.03244989391029726
X	0.018607201621087126	517363	517.363	0.03300871103186501
X	0.018575884368335613	10142	10.142	0.12235131205064645
X	0.018548191860821062	29459	29.459	0.0857092825416552
X	0.018328056874997837	2863	2.863	0.18567995632011475
X	0.01844679219470676	4345	4.345	0.1619236773277723
X	0.01853806848919622	327728	327.728	0.03838695334774676
X	0.018607509780987082	22138	22.138	0.09437347734063507
X	0.018473295547370466	8666	8.666	0.1286990174295336
X	0.018404957241930312	44364	44.364	0.07458211679990305
X	0.018498397039487104	498348	498.348	0.03335803492199326
X	0.0182966086137775	26731	26.731	0.08812892326513275
X	0.0184709258561652	7176	7.176	0.13704675129033606
X	0.01890334929331587	19553	19.553	0.09887999891706888
X	0.01845482282882208	11243	11.243	0.1179621165996125
X	0.018524040678570768	3945	3.945	0.16745427508403302
X	0.018557288273249043	172916	172.916	0.04752182505759106
X	0.018535713266526352	19210	19.21	0.0988160096939368
X	0.018002091594485067	1638	1.638	0.22233253676111492
X	0.018583966100234526	72073	72.073	0.06364856279957673
X	0.01893095334830004	16615	16.615	0.10444573566765572
X	0.018370089789983324	1679	1.679	0.22200028277836736
X	0.018593975073900523	82686	82.686	0.06081071182443081
X	0.018569524506844147	173376	173.376	0.04749019302204201
X	0.018613634457392093	191999	191.999	0.04593856286651601
X	0.018549816734111615	304344	304.344	0.03935424874674903
X	0.018521997033762966	251963	251.963	0.04189064170880647
X	0.018522839186303253	20997	20.997	0.09590695502199921
X	0.01850510657887545	14892	14.892	0.10750933801808657
X	0.01859320092385904	172434	172.434	0.04759672668997388
X	0.018604489250935916	250789	250.789	0.04201810119748441
X	0.018541017816428623	7395	7.395	0.13585171675727256
X	0.01859652648184543	63652	63.652	0.06635493981472276
X	0.01860639221877492	284649	284.649	0.04028260084894751
X	0.01858614412625901	206068	206.068	0.04484626182918439
X	0.018597688039409577	156083	156.083	0.049207856956496904
X	0.018517713664643942	68124	68.124	0.06477822963261834
X	0.018465171913037256	6473	6.473	0.1418238430547401
X	0.018264254448379726	4105	4.105	0.16447362428004356
X	0.018397982806895842	21667	21.667	0.09469429355652537
X	0.018572046020021438	83359	83.359	0.06062276654539189
X	0.018585862069543053	78172	78.172	0.06195035919698693
X	0.01852279262014023	515198	515.198	0.03300482482116761
X	0.018517589483191696	128298	128.298	0.05245515667685193
X	0.018513914816915528	102315	102.315	0.056561334926957946
X	0.018488598610925062	17786	17.786	0.10129979550995846
X	0.01857465540716903	163727	163.727	0.04840982214965576
X	0.01801079743427392	4035	4.035	0.16465053046410497
X	0.018499492518057534	8032	8.032	0.13206225388581425
X	0.018570002040347682	195084	195.084	0.04565938945160823
X	0.01838357341181381	5728	5.728	0.1475057583887592
X	0.018479143064245494	4928	4.928	0.1553592238368431
X	0.018497407826019184	17553	17.553	0.10176220443274742
X	0.018576793891159956	505005	505.005	0.033257660440419425
X	0.018478279451347716	34616	34.616	0.08112005121675542
X	0.018597318503216984	137416	137.416	0.05134179032774523
X	0.018238231487205013	2600	2.6	0.19142697002520123
X	0.01851529413128729	3820	3.82	0.1692345707628149
X	0.018510722260196587	5513	5.513	0.14974251534231944
X	0.018520412133675546	6167	6.167	0.14427538197205295
X	0.01856407315449357	32782	32.782	0.08273309570769671
X	0.018545647184417757	36196	36.196	0.0800191262017105
X	0.018424760353325104	6700	6.7	0.14010135911321273
X	0.018593589159436003	140110	140.11	0.05100718613198483
X	0.018295836724942716	2640	2.64	0.19065554891665873
X	0.018550780226614418	67940	67.94	0.06487522532589617
X	0.0185407381055621	14150	14.15	0.10942675648626601
X	0.01857273948271595	63036	63.036	0.06654198826427689
X	0.018455300822534517	6026	6.026	0.14522141600239385
X	0.018537625719399688	15161	15.161	0.10693226201744999
X	0.018547070676745308	11364	11.364	0.11773747037367073
X	0.018515352856432448	17243	17.243	0.10240151649318778
X	0.01854569773924756	112600	112.6	0.05481527479248333
X	0.018568971109034348	328828	328.828	0.038365395815213234
X	0.018790734558370426	5201	5.201	0.15344484445741102
X	0.018472404947531346	5054	5.054	0.15403854259365443
X	0.018563295969642114	101639	101.639	0.05673680839342214
X	0.01850310684913271	11883	11.883	0.11590607159577135
X	0.018654895944342213	496636	496.636	0.033490236249434306
X	0.01843412679324014	1510	1.51	0.23025825426555202
X	0.018547203805821852	75821	75.821	0.06254073468676319
X	0.018591764997259373	74414	74.414	0.0629828038346611
X	0.018548645760115706	4274	4.274	0.16311449771872177
X	0.01835339741881049	108063	108.063	0.055379175160797565
X	0.018463832150920585	18690	18.69	0.0995949949733212
X	0.018623599774325334	672254	672.254	0.030258222470092085
X	0.018518625566935273	10623	10.623	0.12035215093427118
X	0.018486301593413062	17606	17.606	0.10163963860173651
X	0.01837623983048654	9187	9.187	0.12599722435184038
X	0.018543310198560817	4375	4.375	0.1618339876148079
X	0.018496843177234504	11189	11.189	0.11824118682002834
X	0.01856714261614422	19782	19.782	0.0979095283721588
X	0.018338059512621057	4159	4.159	0.16397896936919198
X	0.018577127939640746	56897	56.897	0.06885937365103034
X	0.01851384311016295	21444	21.444	0.09522045671398884
X	0.01840301370085493	3780	3.78	0.16948543533057206
X	0.01846346839867298	22748	22.748	0.09328031899922014
X	0.01855851582928493	410967	410.967	0.03561055676503345
X	0.01846287980973127	95620	95.62	0.05779854437027624
X	0.01857957073209126	207371	207.371	0.044746858564227616
X	0.018570177227911665	17761	17.761	0.10149614440383443
X	0.018505068820342988	14607	14.607	0.10820397742226016
X	0.018527140519609287	2951	2.951	0.1844787704181788
X	0.018482531884361175	5643	5.643	0.14850821266355912
X	0.018611478833881562	167105	167.105	0.048113152357814236
X	0.01855094096413662	9433	9.433	0.1252868152154771
X	0.018545505440675444	25392	25.392	0.09005626303639738
X	0.018506051669789043	28376	28.376	0.0867203186473841
X	0.018499014506713447	43628	43.628	0.07512672023419036
X	0.01853092853659431	4515	4.515	0.16010804042587215
X	0.01829546914393263	3008	3.008	0.18253882031105476
X	0.01854140487808994	336767	336.767	0.03804267406692482
X	0.018544583840056337	23815	23.815	0.09200021352326598
X	0.018483721426237085	16638	16.638	0.1035689161842519
X	0.018568285589272204	14899	14.899	0.10761469083287672
X	0.018974500134182528	138358	138.358	0.05156899756459787
X	0.018592124517704076	197387	197.387	0.04549917174708073
X	0.018538910591315426	286831	286.831	0.040131559903302
X	0.01855642128187948	103459	103.459	0.05639517938588257
X	0.018538801807356592	11335	11.335	0.11782027869719718
X	0.01859077077352564	47439	47.439	0.07317913810527536
X	0.018527932603687368	47903	47.903	0.07285981819346295
X	0.018539002822880464	7387	7.387	0.13589581749107996
X	0.018511261546829267	16066	16.066	0.10483575280760328
X	0.018540500007890554	5787	5.787	0.14741985734689855
X	0.01851378843184062	19583	19.583	0.09814586888712397
X	0.018108112368736894	8024	8.024	0.13116785612487605
X	0.017996583587691472	1402	1.402	0.2341427337873989
X	0.018522451114493983	9641	9.641	0.1243155506866838
X	0.01855009280264049	8339	8.339	0.13054012902218398
X	0.0185558296960377	45098	45.098	0.07437740670854759
X	0.018450804593610655	7745	7.745	0.13355637691424627
X	0.018590372348974205	35807	35.807	0.08037235935852162
X	0.018503889124435142	11372	11.372	0.1176184329204849
X	0.018496418024020717	18868	18.868	0.09933918397554699
X	0.01843934308145777	5549	5.549	0.14922568232294642
X	0.018380219519284938	11415	11.415	0.11720827097034538
X	0.018549193311225218	17178	17.178	0.10259294017454032
X	0.018551787973294914	157510	157.51	0.04901840926896398
X	0.018527928788993394	6044	6.044	0.14526716880516685
X	0.0183873533393055	2319	2.319	0.19940658276093923
X	0.018476620595299847	6433	6.433	0.14214655207585594
X	0.01864218889854342	170872	170.872	0.047783211347837744
X	0.01875216934010677	546861	546.861	0.03248814049889434
X	0.018475132319734664	14418	14.418	0.10861609348196338
X	0.018435145733803015	8798	8.798	0.12796392104139587
X	0.018528427734139825	25138	25.138	0.0903308191740888
X	0.01857646270951632	159887	159.887	0.048795895072848566
X	0.01833775750217422	2894	2.894	0.1850472205088501
X	0.018393603755145923	8334	8.334	0.1301980391080706
X	0.018548476974347906	14830	14.83	0.10774299276899049
X	0.018548630535471032	92120	92.12	0.058611923461209886
X	0.018796130671795266	81825	81.825	0.061243614461485144
X	0.018609276359311824	227441	227.441	0.04341304446919973
X	0.018517533489767927	8802	8.802	0.12813484803810693
X	0.018483923140279062	4509	4.509	0.16004347511331143
X	0.01838069011158245	2730	2.73	0.18882799801516995
X	0.018488543332521177	48426	48.426	0.07254509146526508
X	0.018540212682884874	12017	12.017	0.11555078056270773
X	0.018527335961349558	33947	33.947	0.08172166231801883
X	0.018554666817608065	171323	171.323	0.047666415740160215
X	0.018631684875518483	643227	643.227	0.030711141198362057
X	0.018403569972759173	12782	12.782	0.11291919008926381
X	0.018436540761228574	2900	2.9	0.18525096544402014
X	0.01853336208559467	10217	10.217	0.12195799401691539
X	0.018561200910553112	92770	92.77	0.05848791930266602
X	0.018516994413729553	35881	35.881	0.08021125641173521
X	0.018506492220136308	2389	2.389	0.19786515506384472
X	0.018389641060029896	5076	5.076	0.1535856168619994
X	0.018501209873422745	20704	20.704	0.09631973747934786
X	0.018456583679758082	2076	2.076	0.207160995326053
X	0.018518454088606535	58729	58.729	0.06806398529343438
X	0.018496435015654247	6153	6.153	0.14432238769415412
X	0.018569511817751155	19897	19.897	0.09772468866788075
X	0.01849476813407858	6619	6.619	0.1408484817571507
X	0.01829748435595844	5556	5.556	0.14877948434394497
X	0.01822680870274145	2839	2.839	0.18585820893807944
X	0.01859163254851108	170154	170.154	0.04780703264057956
X	0.018588707807377997	380114	380.114	0.036568890031719654
X	0.01857101996732492	138240	138.24	0.05121541277137722
X	0.01856428199636651	166070	166.07	0.048172108632966684
X	0.01854152081232732	30251	30.251	0.08494448854675626
X	0.018475048861433734	7848	7.848	0.13302773616691824
X	0.01866834672232018	11962	11.962	0.11599359802148974
X	0.018582265011033883	145216	145.216	0.050391976545420894
X	0.01885009263375552	59504	59.504	0.06816934313515542
X	0.018520758761392288	66391	66.391	0.06534061055146151
X	0.018470501625269527	14454	14.454	0.10851677535782757
X	0.01862944319617199	1045808	1045.808	0.026116559961796234
X	0.01855213655546127	17361	17.361	0.10223660007997697
X	0.018530407413665694	67895	67.895	0.06486579199581137
X	0.018563418770825534	128858	128.858	0.05242223406251214
X	0.018579787640560657	43909	43.909	0.07507506781162146
X	0.018547530809144078	41184	41.184	0.07665124124875991
X	0.018563754109728933	298366	298.366	0.03962526306200892
X	0.018558118968585606	39651	39.651	0.07764138428604166
X	0.01856586245084931	37289	37.289	0.07925830808070872
X	0.01850676149826476	5742	5.742	0.14771425666033153
X	0.01855631809794544	43987	43.987	0.07499906028020822
X	0.018551036273757933	9735	9.735	0.12397784209011158
X	0.0185805923945259	179776	179.776	0.046929142024076144
X	0.01898686702440824	1420520	1420.52	0.023732053499582753
X	0.018570461339630077	140929	140.929	0.050887069448650665
X	0.018495777621478485	289545	289.545	0.039974727182399285
X	0.018554664894750973	70905	70.905	0.06396249822827649
X	0.018536049429269945	35205	35.205	0.08074908503970954
X	0.018686632320388016	23226	23.226	0.09300769317705511
X	0.018349877985124254	11046	11.046	0.1184339045219035
X	0.018518847216525677	72560	72.56	0.06343158422997171
X	0.018604323528169705	308781	308.781	0.039203162669545454
X	0.018517350620443525	41435	41.435	0.07645463786451144
X	0.018532285536365364	634606	634.606	0.030794626169967376
X	0.018655148867353068	195375	195.375	0.045706353688963336
X	0.018564217239428225	32675	32.675	0.0828235195824809
X	0.01845728069370141	3218	3.218	0.17900310281659856
X	0.018985773320470283	40138	40.138	0.0779155584147659
X	0.018588814439469272	96140	96.14	0.057825028849767424
X	0.018448034338291227	4630	4.63	0.15853422568305672
X	0.018595525408012396	543582	543.582	0.032462437673874286
X	0.018567476119234243	43149	43.149	0.07549659757631545
X	0.018480903051451517	36991	36.991	0.07934916705881556
X	0.018537178258281925	6773	6.773	0.13987953616786533
X	0.018456231331012485	6712	6.712	0.14009749147374592
X	0.018343595759093546	2796	2.796	0.18720427757463579
X	0.018431418798533574	7866	7.866	0.13282146773267145
X	0.018482494083553198	14410	14.41	0.10865061735771242
X	0.018518960006569007	17819	17.819	0.10129260850807027
X	0.018603805537925303	3864426	3864.426	0.016885176265426568
X	0.018556226899254197	13271	13.271	0.11182236547793685
X	0.018554189034761425	26746	26.746	0.08852400327475593
X	0.018579693236470744	6277	6.277	0.14358050291458702
X	0.01849591329753126	16330	16.33	0.10423891095403724
X	0.018511144084207003	8654	8.654	0.12884635095615188
X	0.018576477017970952	238827	238.827	0.042686771606712186
X	0.018456111994623093	50840	50.84	0.07133646069399349
X	0.018636741673136368	978703	978.703	0.026703797250848822
X	0.018516526860629007	5299	5.299	0.151747613585254
X	0.01858488270828538	201626	201.626	0.045172184857423414
X	0.01855256512742671	42691	42.691	0.0757453329566552
X	0.01856433504012114	158435	158.435	0.04893385414851521
X	0.018513084916051418	398428	398.428	0.03595089008422176
X	0.01853366909347546	19719	19.719	0.09795475120681116
X	0.01852117594841196	7307	7.307	0.13634623500203344
X	0.01857301049144235	77052	77.052	0.06223472803544089
X	0.018472936071200898	13514	13.514	0.110981520586243
X	0.01838274457649472	40501	40.501	0.07685076626746912
X	0.01842928137208281	51577	51.577	0.07096062648276996
X	0.018562622403268374	17099	17.099	0.10277548605847303
X	0.018822188341557206	69876	69.876	0.06458237710817004
X	0.018464832291823254	23698	23.698	0.09201908082175225
X	0.018719303680335402	149416	149.416	0.05003772177988887
X	0.018562974150314347	229666	229.666	0.04323647550359147
X	0.01851369195926281	23712	23.712	0.09208204358041407
X	0.018525481878309897	8502	8.502	0.12964311901931
X	0.018496463100081413	132739	132.739	0.05184378683765616
X	0.0185045925768356	59796	59.796	0.06763982335743225
X	0.018576593125589645	312648	312.648	0.039021456116139164
X	0.018544979445186814	19579	19.579	0.09820764193242422
X	0.01855384316254484	45673	45.673	0.074061319859739
X	0.018547082057256862	40040	40.04	0.07737378485290256
X	0.018164588758895053	98431	98.431	0.056933064058780854
X	0.018511338751634444	107742	107.742	0.05559267840199789
X	0.01855191660553168	14472	14.472	0.10863090805295188
X	0.018509909154879933	6177	6.177	0.14417022026589704
X	0.018720696083783617	8269	8.269	0.13130754058377556
X	0.01847274938512759	60990	60.99	0.06715695066859238
X	0.0185305095600092	118699	118.699	0.0538451718331593
X	0.018544540352080238	154671	154.671	0.04931008221527535
X	0.018483233315915944	12679	12.679	0.11338727407514151
X	0.018579872994040528	28248	28.248	0.08696643726772418
X	0.01856883306641603	35666	35.666	0.08044703995811077
X	0.018566647981693836	149762	149.762	0.049862872155499366
X	0.018546937515512205	35425	35.425	0.08059735383180394
X	0.018600515986034807	91717	91.717	0.058752324023597126
X	0.01845864030674935	10631	10.631	0.12019189881414137
X	0.018589558101311156	25994	25.994	0.08942631130939045
X	0.018441927285101745	2473	2.473	0.1953712835087254
X	0.018511401875690538	7461	7.461	0.13537779093578436
X	0.018588905998839323	75098	75.098	0.06278778368659083
X	0.018548494276813484	34468	34.468	0.08133875588295693
X	0.018588977188591798	44040	44.04	0.07501291826940659
X	0.01849994573790762	2053	2.053	0.20809445203934784
X	0.018518343498721807	10289	10.289	0.12163997516303189
X	0.018575973453106118	32844	32.844	0.08269866765548291
X	0.01848803804342489	30306	30.306	0.0848113681330356
X	0.018554660465806276	13854	13.854	0.11022817306258692
X	0.01845943577513257	3446	3.446	0.17497166174284134
X	0.018406384968318753	6357	6.357	0.14252971931015743
X	0.01852450864857152	26653	26.653	0.08857956285827387
X	0.018466398107056223	22033	22.033	0.0942836064775503
X	0.018533058187651826	136509	136.509	0.05139591489979675
X	0.018548270409101394	6093	6.093	0.14492970677306455
X	0.018483427347090582	17599	17.599	0.1016478439252425
X	0.01842226700991246	6571	6.571	0.14100587302862264
X	0.018424544622724918	5013	5.013	0.15432383934808064
X	0.01858965435806226	237157	237.157	0.042796848463767564
X	0.018514599131728718	14529	14.529	0.10841587099361316
X	0.018530977357787852	78225	78.225	0.06187533802957513
X	0.01857282689286991	169395	169.395	0.04786217987285978
X	0.018575088124922336	36610	36.61	0.07975851351981175
X	0.01856776820598266	173144	173.144	0.04750989673758337
X	0.018578866591065786	177138	177.138	0.04715949650856041
X	0.01846512101947978	4028	4.028	0.1661196084609537
X	0.01856342257112969	52377	52.377	0.07076836202748828
X	0.018576569761909464	19904	19.904	0.09772560924538201
X	0.018526864983185145	90798	90.798	0.05887196766219746
X	0.018668883928704735	186900	186.9	0.04639840143484808
X	0.018879008189663142	16208	16.208	0.10521635413967009
X	0.018575203622531778	66057	66.057	0.06551462291530055
X	0.0184883662485383	5656	5.656	0.14840995896418285
X	0.018498599018125016	23256	23.256	0.09265480362493095
X	0.018485967369810084	5634	5.634	0.1485964542169807
X	0.018515210735554736	8744	8.744	0.1284121655991416
X	0.01855980346267853	231213	231.213	0.04313737442846444
X	0.01863266271995298	811375	811.375	0.028423950194706605
X	0.01836607999763992	25757	25.757	0.08933885825084538
X	0.018588681496255397	21104	21.104	0.09585790562831639
X	0.018568884594512888	33257	33.257	0.08234443402748043
X	0.018617155878364766	71860	71.86	0.06374929320389824
X	0.018534472317120205	16250	16.25	0.10448219477395213
X	0.018475049082837203	7750	7.75	0.133586108764376
X	0.018979509616522682	27233	27.233	0.08866043008441742
X	0.018575384309699954	198718	198.718	0.04538373138227071
X	0.01852602162150221	7407	7.407	0.1357416968975706
X	0.018512258372596832	59437	59.437	0.06778508953692
X	0.018520704863438497	4791	4.791	0.15694366135037446
time for making epsilon is 2.4946892261505127
epsilons are
[0.2220600306786514, 0.09234932170204226, 0.19251072963071716, 0.10413129763404967, 0.13067580574827706, 0.12025410585593657, 0.06394629700343417, 0.07302492966306154, 0.12271289564868881, 0.11150410636794862, 0.10028199986481755, 0.04654327182450568, 0.14088701310343052, 0.03965969252752711, 0.09364131039899071, 0.0737096054372335, 0.06334216363565785, 0.07925037293158901, 0.044019922363382494, 0.05112599465501814, 0.12852101654331233, 0.041814082341287265, 0.11022363086787552, 0.06992669315784118, 0.2067831423494629, 0.056918717986285366, 0.05721883221750409, 0.1333254961882231, 0.057840300937232324, 0.02449684580892538, 0.13330990874907903, 0.02534410837827506, 0.0722114486997685, 0.1403681146907077, 0.15303509612604693, 0.04750197079674436, 0.057564338484427456, 0.2257103204652005, 0.14586473343125703, 0.1762897838220143, 0.16298541803306243, 0.16501645583966526, 0.23781635489656755, 0.15538614260847192, 0.23337342325206464, 0.2000080586860008, 0.15268659394903977, 0.15689711770711076, 0.21108097142595422, 0.11027466324087053, 0.10629178892162708, 0.17731316139437256, 0.1275787480478674, 0.187238751331051, 0.13716106679708015, 0.15506146681929603, 0.20145305074289777, 0.15903237176779494, 0.1594616650469864, 0.16875374835439627, 0.15228047418663002, 0.19895386758193695, 0.12401069961085534, 0.12746640303980358, 0.17145307232987347, 0.17511020487797824, 0.16483736773411534, 0.1500831057761149, 0.1451608097328268, 0.18586066646945576, 0.18684149072969453, 0.16478477049478008, 0.15290324019241316, 0.19350548177408627, 0.1444906962164359, 0.13244755236810846, 0.22047185376620243, 0.26690569609361625, 0.16258120903199375, 0.11271105427013892, 0.15175434715041405, 0.19258238351746962, 0.14153452243718107, 0.18619764646200268, 0.1811564941865724, 0.21380356402880574, 0.15317254395785418, 0.20505269974952378, 0.16334764966507362, 0.1580754226148112, 0.17563449544730614, 0.20206461194206435, 0.19288226446526952, 0.15493964824696596, 0.15966152359934627, 0.14528053463797364, 0.17502009093798143, 0.11366719048512185, 0.16290416522135862, 0.17788695329171256, 0.10949606484418851, 0.15534775190148056, 0.12649211622564285, 0.21296418114121354, 0.15223538518043989, 0.19348889554690876, 0.1367011516670116, 0.23585842022220568, 0.15404272410097314, 0.2166587135149803, 0.19722411051189478, 0.226982367172178, 0.18867888613089578, 0.16704116564110616, 0.15260027509450022, 0.20122350558450325, 0.2070447975145629, 0.2128038111334358, 0.12277504095642798, 0.18604278199049457, 0.1204119471364185, 0.17578676783282188, 0.18071285569652815, 0.17304182258718087, 0.20432731376328706, 0.1737025170977093, 0.19160279912324968, 0.17911991547730624, 0.11457177604865036, 0.18422117233197854, 0.1465097711432197, 0.1865493033061699, 0.15500086599127125, 0.22283598193071036, 0.14095567920143448, 0.18520669905363168, 0.22901875073841924, 0.22062933835539497, 0.17799578672329489, 0.20101179638185382, 0.15843249922803254, 0.19430876397890073, 0.11353342241463983, 0.12695971914453666, 0.15574032971974197, 0.19104327154900172, 0.18781193347346956, 0.18072612790299694, 0.20011065420515398, 0.1779744673058567, 0.1916726795927749, 0.16223187523978197, 0.1554244840150266, 0.10924269778965337, 0.17947031624113022, 0.0953276833766364, 0.17608158887298506, 0.15101380216030805, 0.1474063915188206, 0.2926094190839387, 0.13091543705209505, 0.1777833491769126, 0.15546959170649732, 0.23409361639002232, 0.15761060657797074, 0.1876589132102072, 0.1782098602901488, 0.15602168987746898, 0.15468099413072744, 0.24948649040540785, 0.19526337665297583, 0.21190733269925993, 0.13385333541607358, 0.2036107041495714, 0.15509933282640911, 0.1703482927199208, 0.15629287825975657, 0.16660498921800532, 0.13390981071974317, 0.18122955604386887, 0.17701531751067326, 0.1753597944707421, 0.1600144747146151, 0.18985746629582456, 0.15370195637573986, 0.14155796985046648, 0.17893043790195254, 0.15590332933709042, 0.14440822949694843, 0.11501196852929266, 0.19753740800627348, 0.28233451566495993, 0.1721582209313741, 0.18186245578259153, 0.163046994995728, 0.15817713424149732, 0.17862917453753857, 0.21600660944208266, 0.17866651363462954, 0.21687487060109603, 0.16943934349806902, 0.20373000087941145, 0.14584674292852287, 0.16054295113643208, 0.144452670596952, 0.2325497882970457, 0.14841843909513516, 0.17258578169775604, 0.15227398991593763, 0.1440298709769068, 0.13766188204594929, 0.15242399306403406, 0.17969878714199267, 0.18097497635854884, 0.25675761096148464, 0.19105997035648475, 0.22446488300327166, 0.2445604202606882, 0.11555594158665528, 0.19161802344470713, 0.18635040954910856, 0.1963367081313612, 0.15435848930138066, 0.1841519854411009, 0.14318276336287625, 0.14787064459737215, 0.2301014929583803, 0.20108129458967602, 0.16075403895429063, 0.24233820857211966, 0.1969039390301523, 0.17468105219709823, 0.15332620546008024, 0.15172766671579707, 0.2098973480298308, 0.1954132509775829, 0.17387440505346954, 0.13609793641780615, 0.21025181943650778, 0.10131607563989854, 0.06373866268932782, 0.1590305012877445, 0.15172642925164243, 0.2601145630001307, 0.14507943321929462, 0.0667627506416825, 0.04418963518729092, 0.18882497973116275, 0.05793299883370727, 0.0704437778458515, 0.09851988135861149, 0.05380136833019834, 0.2038870678292341, 0.15047117925647677, 0.0480315068919428, 0.04233445283535797, 0.14583408094028463, 0.08150837072259902, 0.08659149181330081, 0.07232686743472116, 0.06393676056723688, 0.06416845580309563, 0.06440885995192007, 0.0961107172653806, 0.1567230921099199, 0.04844390705035812, 0.15042452580015772, 0.18770975049509125, 0.08337835235100649, 0.0675257423431707, 0.042906526590916795, 0.06055251000690306, 0.20688017822159252, 0.10387008429715158, 0.11609562295550567, 0.09676939517401249, 0.060869602941987545, 0.10997784192304844, 0.08348703927387144, 0.2771254637093061, 0.15574020681048883, 0.06414339441883973, 0.06648890846702357, 0.07602628132678842, 0.15176281449416354, 0.03861145647473182, 0.10629016136305479, 0.08307497895912602, 0.05425452869967225, 0.18152522830896967, 0.06145189699402689, 0.04038567688749354, 0.039561204277262, 0.11554928473100715, 0.1367858808010209, 0.13484264130933718, 0.1673101814883539, 0.07151085767409253, 0.12828095423194522, 0.0903412504518688, 0.06523323715156, 0.09345978222941634, 0.10470042544375223, 0.1460119951780943, 0.048975849731241444, 0.08180764826421044, 0.08539112707430407, 0.11979361388951143, 0.04565338992987016, 0.1388655068988399, 0.04326232607404579, 0.1396738278324863, 0.08547736984816204, 0.11252029579021407, 0.0449621753525306, 0.07255723388901511, 0.15652955194982174, 0.050882897913627025, 0.04810986194812146, 0.16521297369427096, 0.06094815184425044, 0.052546519241690404, 0.035901323454913515, 0.07170150441063129, 0.2000539675175101, 0.11849711598641488, 0.158520362795525, 0.08791862388402566, 0.09191286218447554, 0.19244632357799946, 0.05929576520516727, 0.045311611784678914, 0.20127757738159074, 0.13500334242201442, 0.10135475415573712, 0.12418331962780244, 0.1296870409300464, 0.12500352409621598, 0.15117273481480742, 0.08589902588728623, 0.08456632747543398, 0.09199642165523603, 0.07147502209572557, 0.12848730205737285, 0.03360766970085799, 0.13760050425235357, 0.06382938291108038, 0.21334465699606084, 0.14983422383760703, 0.16674362620560862, 0.106318068883993, 0.16831597513861737, 0.05291128765799681, 0.1744030632080349, 0.15856742429329856, 0.03614431586590772, 0.06378174383810656, 0.07212623274025773, 0.04907088954887878, 0.039136075833797586, 0.15768337923217807, 0.14426422925619747, 0.08077534190598316, 0.21669684001466455, 0.1440106911884132, 0.11390279861110028, 0.15266837734660418, 0.14427649698815287, 0.1948041459880343, 0.14979653209160554, 0.03817841933605822, 0.09897479198887074, 0.06395424786187878, 0.12707564392912413, 0.1608340002577663, 0.13213179208174294, 0.03244989391029726, 0.03300871103186501, 0.12235131205064645, 0.0857092825416552, 0.18567995632011475, 0.1619236773277723, 0.03838695334774676, 0.09437347734063507, 0.1286990174295336, 0.07458211679990305, 0.03335803492199326, 0.08812892326513275, 0.13704675129033606, 0.09887999891706888, 0.1179621165996125, 0.16745427508403302, 0.04752182505759106, 0.0988160096939368, 0.22233253676111492, 0.06364856279957673, 0.10444573566765572, 0.22200028277836736, 0.06081071182443081, 0.04749019302204201, 0.04593856286651601, 0.03935424874674903, 0.04189064170880647, 0.09590695502199921, 0.10750933801808657, 0.04759672668997388, 0.04201810119748441, 0.13585171675727256, 0.06635493981472276, 0.04028260084894751, 0.04484626182918439, 0.049207856956496904, 0.06477822963261834, 0.1418238430547401, 0.16447362428004356, 0.09469429355652537, 0.06062276654539189, 0.06195035919698693, 0.03300482482116761, 0.05245515667685193, 0.056561334926957946, 0.10129979550995846, 0.04840982214965576, 0.16465053046410497, 0.13206225388581425, 0.04565938945160823, 0.1475057583887592, 0.1553592238368431, 0.10176220443274742, 0.033257660440419425, 0.08112005121675542, 0.05134179032774523, 0.19142697002520123, 0.1692345707628149, 0.14974251534231944, 0.14427538197205295, 0.08273309570769671, 0.0800191262017105, 0.14010135911321273, 0.05100718613198483, 0.19065554891665873, 0.06487522532589617, 0.10942675648626601, 0.06654198826427689, 0.14522141600239385, 0.10693226201744999, 0.11773747037367073, 0.10240151649318778, 0.05481527479248333, 0.038365395815213234, 0.15344484445741102, 0.15403854259365443, 0.05673680839342214, 0.11590607159577135, 0.033490236249434306, 0.23025825426555202, 0.06254073468676319, 0.0629828038346611, 0.16311449771872177, 0.055379175160797565, 0.0995949949733212, 0.030258222470092085, 0.12035215093427118, 0.10163963860173651, 0.12599722435184038, 0.1618339876148079, 0.11824118682002834, 0.0979095283721588, 0.16397896936919198, 0.06885937365103034, 0.09522045671398884, 0.16948543533057206, 0.09328031899922014, 0.03561055676503345, 0.05779854437027624, 0.044746858564227616, 0.10149614440383443, 0.10820397742226016, 0.1844787704181788, 0.14850821266355912, 0.048113152357814236, 0.1252868152154771, 0.09005626303639738, 0.0867203186473841, 0.07512672023419036, 0.16010804042587215, 0.18253882031105476, 0.03804267406692482, 0.09200021352326598, 0.1035689161842519, 0.10761469083287672, 0.05156899756459787, 0.04549917174708073, 0.040131559903302, 0.05639517938588257, 0.11782027869719718, 0.07317913810527536, 0.07285981819346295, 0.13589581749107996, 0.10483575280760328, 0.14741985734689855, 0.09814586888712397, 0.13116785612487605, 0.2341427337873989, 0.1243155506866838, 0.13054012902218398, 0.07437740670854759, 0.13355637691424627, 0.08037235935852162, 0.1176184329204849, 0.09933918397554699, 0.14922568232294642, 0.11720827097034538, 0.10259294017454032, 0.04901840926896398, 0.14526716880516685, 0.19940658276093923, 0.14214655207585594, 0.047783211347837744, 0.03248814049889434, 0.10861609348196338, 0.12796392104139587, 0.0903308191740888, 0.048795895072848566, 0.1850472205088501, 0.1301980391080706, 0.10774299276899049, 0.058611923461209886, 0.061243614461485144, 0.04341304446919973, 0.12813484803810693, 0.16004347511331143, 0.18882799801516995, 0.07254509146526508, 0.11555078056270773, 0.08172166231801883, 0.047666415740160215, 0.030711141198362057, 0.11291919008926381, 0.18525096544402014, 0.12195799401691539, 0.05848791930266602, 0.08021125641173521, 0.19786515506384472, 0.1535856168619994, 0.09631973747934786, 0.207160995326053, 0.06806398529343438, 0.14432238769415412, 0.09772468866788075, 0.1408484817571507, 0.14877948434394497, 0.18585820893807944, 0.04780703264057956, 0.036568890031719654, 0.05121541277137722, 0.048172108632966684, 0.08494448854675626, 0.13302773616691824, 0.11599359802148974, 0.050391976545420894, 0.06816934313515542, 0.06534061055146151, 0.10851677535782757, 0.026116559961796234, 0.10223660007997697, 0.06486579199581137, 0.05242223406251214, 0.07507506781162146, 0.07665124124875991, 0.03962526306200892, 0.07764138428604166, 0.07925830808070872, 0.14771425666033153, 0.07499906028020822, 0.12397784209011158, 0.046929142024076144, 0.023732053499582753, 0.050887069448650665, 0.039974727182399285, 0.06396249822827649, 0.08074908503970954, 0.09300769317705511, 0.1184339045219035, 0.06343158422997171, 0.039203162669545454, 0.07645463786451144, 0.030794626169967376, 0.045706353688963336, 0.0828235195824809, 0.17900310281659856, 0.0779155584147659, 0.057825028849767424, 0.15853422568305672, 0.032462437673874286, 0.07549659757631545, 0.07934916705881556, 0.13987953616786533, 0.14009749147374592, 0.18720427757463579, 0.13282146773267145, 0.10865061735771242, 0.10129260850807027, 0.016885176265426568, 0.11182236547793685, 0.08852400327475593, 0.14358050291458702, 0.10423891095403724, 0.12884635095615188, 0.042686771606712186, 0.07133646069399349, 0.026703797250848822, 0.151747613585254, 0.045172184857423414, 0.0757453329566552, 0.04893385414851521, 0.03595089008422176, 0.09795475120681116, 0.13634623500203344, 0.06223472803544089, 0.110981520586243, 0.07685076626746912, 0.07096062648276996, 0.10277548605847303, 0.06458237710817004, 0.09201908082175225, 0.05003772177988887, 0.04323647550359147, 0.09208204358041407, 0.12964311901931, 0.05184378683765616, 0.06763982335743225, 0.039021456116139164, 0.09820764193242422, 0.074061319859739, 0.07737378485290256, 0.056933064058780854, 0.05559267840199789, 0.10863090805295188, 0.14417022026589704, 0.13130754058377556, 0.06715695066859238, 0.0538451718331593, 0.04931008221527535, 0.11338727407514151, 0.08696643726772418, 0.08044703995811077, 0.049862872155499366, 0.08059735383180394, 0.058752324023597126, 0.12019189881414137, 0.08942631130939045, 0.1953712835087254, 0.13537779093578436, 0.06278778368659083, 0.08133875588295693, 0.07501291826940659, 0.20809445203934784, 0.12163997516303189, 0.08269866765548291, 0.0848113681330356, 0.11022817306258692, 0.17497166174284134, 0.14252971931015743, 0.08857956285827387, 0.0942836064775503, 0.05139591489979675, 0.14492970677306455, 0.1016478439252425, 0.14100587302862264, 0.15432383934808064, 0.042796848463767564, 0.10841587099361316, 0.06187533802957513, 0.04786217987285978, 0.07975851351981175, 0.04750989673758337, 0.04715949650856041, 0.1661196084609537, 0.07076836202748828, 0.09772560924538201, 0.05887196766219746, 0.04639840143484808, 0.10521635413967009, 0.06551462291530055, 0.14840995896418285, 0.09265480362493095, 0.1485964542169807, 0.1284121655991416, 0.04313737442846444, 0.028423950194706605, 0.08933885825084538, 0.09585790562831639, 0.08234443402748043, 0.06374929320389824, 0.10448219477395213, 0.133586108764376, 0.08866043008441742, 0.04538373138227071, 0.1357416968975706, 0.06778508953692, 0.15694366135037446]
0.0907395165402694
Making ranges
torch.Size([45498, 2])
We keep 7.38e+06/6.52e+08 =  1% of the original kernel matrix.

torch.Size([4453, 2])
We keep 1.45e+05/2.85e+06 =  5% of the original kernel matrix.

torch.Size([15962, 2])
We keep 1.10e+06/4.31e+07 =  2% of the original kernel matrix.

torch.Size([39666, 2])
We keep 8.99e+06/5.52e+08 =  1% of the original kernel matrix.

torch.Size([45487, 2])
We keep 7.78e+06/6.00e+08 =  1% of the original kernel matrix.

torch.Size([6685, 2])
We keep 2.55e+05/6.68e+06 =  3% of the original kernel matrix.

torch.Size([19044, 2])
We keep 1.44e+06/6.60e+07 =  2% of the original kernel matrix.

torch.Size([23674, 2])
We keep 9.35e+06/2.69e+08 =  3% of the original kernel matrix.

torch.Size([33589, 2])
We keep 5.78e+06/4.18e+08 =  1% of the original kernel matrix.

torch.Size([18429, 2])
We keep 1.60e+06/6.87e+07 =  2% of the original kernel matrix.

torch.Size([29693, 2])
We keep 3.36e+06/2.12e+08 =  1% of the original kernel matrix.

torch.Size([21763, 2])
We keep 2.31e+06/1.13e+08 =  2% of the original kernel matrix.

torch.Size([32536, 2])
We keep 4.08e+06/2.72e+08 =  1% of the original kernel matrix.

torch.Size([127707, 2])
We keep 5.35e+07/5.03e+09 =  1% of the original kernel matrix.

torch.Size([77785, 2])
We keep 1.89e+07/1.81e+09 =  1% of the original kernel matrix.

torch.Size([88443, 2])
We keep 2.54e+07/2.28e+09 =  1% of the original kernel matrix.

torch.Size([65189, 2])
We keep 1.35e+07/1.22e+09 =  1% of the original kernel matrix.

torch.Size([19153, 2])
We keep 2.75e+06/1.01e+08 =  2% of the original kernel matrix.

torch.Size([30439, 2])
We keep 3.94e+06/2.56e+08 =  1% of the original kernel matrix.

torch.Size([22947, 2])
We keep 4.65e+06/1.77e+08 =  2% of the original kernel matrix.

torch.Size([33349, 2])
We keep 4.65e+06/3.39e+08 =  1% of the original kernel matrix.

torch.Size([32058, 2])
We keep 6.61e+06/3.38e+08 =  1% of the original kernel matrix.

torch.Size([39990, 2])
We keep 6.26e+06/4.69e+08 =  1% of the original kernel matrix.

torch.Size([294407, 2])
We keep 4.04e+08/3.36e+10 =  1% of the original kernel matrix.

torch.Size([121480, 2])
We keep 4.32e+07/4.68e+09 =  0% of the original kernel matrix.

torch.Size([15201, 2])
We keep 1.17e+06/4.48e+07 =  2% of the original kernel matrix.

torch.Size([26986, 2])
We keep 2.90e+06/1.71e+08 =  1% of the original kernel matrix.

torch.Size([545143, 2])
We keep 7.46e+08/8.92e+10 =  0% of the original kernel matrix.

torch.Size([167733, 2])
We keep 6.64e+07/7.63e+09 =  0% of the original kernel matrix.

torch.Size([40743, 2])
We keep 6.96e+06/5.10e+08 =  1% of the original kernel matrix.

torch.Size([45410, 2])
We keep 7.36e+06/5.76e+08 =  1% of the original kernel matrix.

torch.Size([83983, 2])
We keep 3.07e+07/2.15e+09 =  1% of the original kernel matrix.

torch.Size([63749, 2])
We keep 1.32e+07/1.18e+09 =  1% of the original kernel matrix.

torch.Size([133176, 2])
We keep 6.76e+07/5.34e+09 =  1% of the original kernel matrix.

torch.Size([79991, 2])
We keep 1.94e+07/1.86e+09 =  1% of the original kernel matrix.

torch.Size([62023, 2])
We keep 3.68e+07/1.38e+09 =  2% of the original kernel matrix.

torch.Size([54804, 2])
We keep 1.10e+07/9.49e+08 =  1% of the original kernel matrix.

torch.Size([356467, 2])
We keep 4.87e+08/4.75e+10 =  1% of the original kernel matrix.

torch.Size([135841, 2])
We keep 4.98e+07/5.56e+09 =  0% of the original kernel matrix.

torch.Size([244502, 2])
We keep 2.35e+08/1.93e+10 =  1% of the original kernel matrix.

torch.Size([111334, 2])
We keep 3.35e+07/3.55e+09 =  0% of the original kernel matrix.

torch.Size([17989, 2])
We keep 2.04e+06/7.55e+07 =  2% of the original kernel matrix.

torch.Size([29455, 2])
We keep 3.53e+06/2.22e+08 =  1% of the original kernel matrix.

torch.Size([467042, 2])
We keep 6.23e+08/6.48e+10 =  0% of the original kernel matrix.

torch.Size([156489, 2])
We keep 5.60e+07/6.50e+09 =  0% of the original kernel matrix.

torch.Size([26669, 2])
We keep 4.55e+06/1.90e+08 =  2% of the original kernel matrix.

torch.Size([36321, 2])
We keep 4.88e+06/3.52e+08 =  1% of the original kernel matrix.

torch.Size([91674, 2])
We keep 8.20e+07/2.93e+09 =  2% of the original kernel matrix.

torch.Size([66410, 2])
We keep 1.52e+07/1.38e+09 =  1% of the original kernel matrix.

torch.Size([4821, 2])
We keep 4.56e+05/4.32e+06 = 10% of the original kernel matrix.

torch.Size([16313, 2])
We keep 1.26e+06/5.30e+07 =  2% of the original kernel matrix.

torch.Size([183796, 2])
We keep 8.42e+07/1.02e+10 =  0% of the original kernel matrix.

torch.Size([95235, 2])
We keep 2.53e+07/2.57e+09 =  0% of the original kernel matrix.

torch.Size([168850, 2])
We keep 1.06e+08/9.86e+09 =  1% of the original kernel matrix.

torch.Size([91094, 2])
We keep 2.53e+07/2.54e+09 =  0% of the original kernel matrix.

torch.Size([17460, 2])
We keep 1.49e+06/6.10e+07 =  2% of the original kernel matrix.

torch.Size([29027, 2])
We keep 3.20e+06/1.99e+08 =  1% of the original kernel matrix.

torch.Size([127126, 2])
We keep 2.91e+08/9.19e+09 =  3% of the original kernel matrix.

torch.Size([78551, 2])
We keep 2.41e+07/2.45e+09 =  0% of the original kernel matrix.

torch.Size([2647732, 2])
We keep 7.74e+09/1.61e+12 =  0% of the original kernel matrix.

torch.Size([390529, 2])
We keep 2.45e+08/3.23e+10 =  0% of the original kernel matrix.

torch.Size([15967, 2])
We keep 1.79e+06/6.07e+07 =  2% of the original kernel matrix.

torch.Size([27631, 2])
We keep 3.25e+06/1.99e+08 =  1% of the original kernel matrix.

torch.Size([2045189, 2])
We keep 8.16e+09/1.31e+12 =  0% of the original kernel matrix.

torch.Size([336685, 2])
We keep 2.28e+08/2.92e+10 =  0% of the original kernel matrix.

torch.Size([72500, 2])
We keep 8.06e+07/2.42e+09 =  3% of the original kernel matrix.

torch.Size([58606, 2])
We keep 1.41e+07/1.26e+09 =  1% of the original kernel matrix.

torch.Size([15638, 2])
We keep 1.13e+06/4.50e+07 =  2% of the original kernel matrix.

torch.Size([27484, 2])
We keep 2.86e+06/1.71e+08 =  1% of the original kernel matrix.

torch.Size([11494, 2])
We keep 8.51e+05/2.68e+07 =  3% of the original kernel matrix.

torch.Size([23565, 2])
We keep 2.37e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([268108, 2])
We keep 4.12e+08/3.00e+10 =  1% of the original kernel matrix.

torch.Size([116581, 2])
We keep 4.08e+07/4.42e+09 =  0% of the original kernel matrix.

torch.Size([176367, 2])
We keep 1.14e+08/9.44e+09 =  1% of the original kernel matrix.

torch.Size([93165, 2])
We keep 2.46e+07/2.48e+09 =  0% of the original kernel matrix.

torch.Size([4273, 2])
We keep 1.29e+05/2.57e+06 =  5% of the original kernel matrix.

torch.Size([15820, 2])
We keep 1.06e+06/4.09e+07 =  2% of the original kernel matrix.

torch.Size([13542, 2])
We keep 1.14e+06/3.57e+07 =  3% of the original kernel matrix.

torch.Size([25512, 2])
We keep 2.67e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([8109, 2])
We keep 4.31e+05/1.13e+07 =  3% of the original kernel matrix.

torch.Size([20249, 2])
We keep 1.76e+06/8.58e+07 =  2% of the original kernel matrix.

torch.Size([10583, 2])
We keep 5.85e+05/1.84e+07 =  3% of the original kernel matrix.

torch.Size([23055, 2])
We keep 2.07e+06/1.09e+08 =  1% of the original kernel matrix.

torch.Size([6893, 2])
We keep 8.06e+05/1.68e+07 =  4% of the original kernel matrix.

torch.Size([17485, 2])
We keep 2.06e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([3726, 2])
We keep 1.03e+05/1.89e+06 =  5% of the original kernel matrix.

torch.Size([15008, 2])
We keep 9.53e+05/3.51e+07 =  2% of the original kernel matrix.

torch.Size([11493, 2])
We keep 7.51e+05/2.38e+07 =  3% of the original kernel matrix.

torch.Size([23449, 2])
We keep 2.32e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([3848, 2])
We keep 1.06e+05/2.11e+06 =  5% of the original kernel matrix.

torch.Size([15222, 2])
We keep 9.81e+05/3.71e+07 =  2% of the original kernel matrix.

torch.Size([6100, 2])
We keep 2.24e+05/5.34e+06 =  4% of the original kernel matrix.

torch.Size([18308, 2])
We keep 1.35e+06/5.90e+07 =  2% of the original kernel matrix.

torch.Size([11939, 2])
We keep 8.34e+05/2.70e+07 =  3% of the original kernel matrix.

torch.Size([24215, 2])
We keep 2.38e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([11132, 2])
We keep 7.50e+05/2.29e+07 =  3% of the original kernel matrix.

torch.Size([23262, 2])
We keep 2.26e+06/1.22e+08 =  1% of the original kernel matrix.

torch.Size([4893, 2])
We keep 1.96e+05/3.85e+06 =  5% of the original kernel matrix.

torch.Size([16434, 2])
We keep 1.22e+06/5.01e+07 =  2% of the original kernel matrix.

torch.Size([25621, 2])
We keep 4.38e+06/1.88e+08 =  2% of the original kernel matrix.

torch.Size([35430, 2])
We keep 5.01e+06/3.50e+08 =  1% of the original kernel matrix.

torch.Size([28274, 2])
We keep 4.43e+06/2.39e+08 =  1% of the original kernel matrix.

torch.Size([37467, 2])
We keep 5.47e+06/3.94e+08 =  1% of the original kernel matrix.

torch.Size([8099, 2])
We keep 5.00e+05/1.10e+07 =  4% of the original kernel matrix.

torch.Size([20327, 2])
We keep 1.73e+06/8.45e+07 =  2% of the original kernel matrix.

torch.Size([16073, 2])
We keep 2.20e+06/7.88e+07 =  2% of the original kernel matrix.

torch.Size([27481, 2])
We keep 3.60e+06/2.27e+08 =  1% of the original kernel matrix.

torch.Size([6853, 2])
We keep 3.33e+05/7.67e+06 =  4% of the original kernel matrix.

torch.Size([18681, 2])
We keep 1.53e+06/7.07e+07 =  2% of the original kernel matrix.

torch.Size([16153, 2])
We keep 1.38e+06/5.14e+07 =  2% of the original kernel matrix.

torch.Size([27721, 2])
We keep 3.04e+06/1.83e+08 =  1% of the original kernel matrix.

torch.Size([10775, 2])
We keep 9.05e+05/2.45e+07 =  3% of the original kernel matrix.

torch.Size([22840, 2])
We keep 2.34e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([5866, 2])
We keep 2.06e+05/5.00e+06 =  4% of the original kernel matrix.

torch.Size([17923, 2])
We keep 1.30e+06/5.71e+07 =  2% of the original kernel matrix.

torch.Size([10940, 2])
We keep 6.47e+05/2.07e+07 =  3% of the original kernel matrix.

torch.Size([23138, 2])
We keep 2.18e+06/1.16e+08 =  1% of the original kernel matrix.

torch.Size([10547, 2])
We keep 6.52e+05/2.08e+07 =  3% of the original kernel matrix.

torch.Size([22822, 2])
We keep 2.18e+06/1.17e+08 =  1% of the original kernel matrix.

torch.Size([9104, 2])
We keep 5.60e+05/1.47e+07 =  3% of the original kernel matrix.

torch.Size([21251, 2])
We keep 1.95e+06/9.78e+07 =  1% of the original kernel matrix.

torch.Size([12307, 2])
We keep 7.74e+05/2.75e+07 =  2% of the original kernel matrix.

torch.Size([24449, 2])
We keep 2.39e+06/1.34e+08 =  1% of the original kernel matrix.

torch.Size([5822, 2])
We keep 2.41e+05/5.49e+06 =  4% of the original kernel matrix.

torch.Size([17738, 2])
We keep 1.35e+06/5.98e+07 =  2% of the original kernel matrix.

torch.Size([19399, 2])
We keep 2.22e+06/9.37e+07 =  2% of the original kernel matrix.

torch.Size([30576, 2])
We keep 3.81e+06/2.47e+08 =  1% of the original kernel matrix.

torch.Size([18979, 2])
We keep 1.76e+06/7.98e+07 =  2% of the original kernel matrix.

torch.Size([30135, 2])
We keep 3.58e+06/2.28e+08 =  1% of the original kernel matrix.

torch.Size([8573, 2])
We keep 4.68e+05/1.34e+07 =  3% of the original kernel matrix.

torch.Size([20760, 2])
We keep 1.87e+06/9.35e+07 =  1% of the original kernel matrix.

torch.Size([8256, 2])
We keep 4.42e+05/1.19e+07 =  3% of the original kernel matrix.

torch.Size([20445, 2])
We keep 1.79e+06/8.79e+07 =  2% of the original kernel matrix.

torch.Size([10210, 2])
We keep 5.42e+05/1.69e+07 =  3% of the original kernel matrix.

torch.Size([22450, 2])
We keep 2.01e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([12867, 2])
We keep 8.68e+05/2.94e+07 =  2% of the original kernel matrix.

torch.Size([24898, 2])
We keep 2.49e+06/1.39e+08 =  1% of the original kernel matrix.

torch.Size([14268, 2])
We keep 1.04e+06/3.67e+07 =  2% of the original kernel matrix.

torch.Size([26156, 2])
We keep 2.69e+06/1.55e+08 =  1% of the original kernel matrix.

torch.Size([6947, 2])
We keep 3.27e+05/8.23e+06 =  3% of the original kernel matrix.

torch.Size([19038, 2])
We keep 1.57e+06/7.32e+07 =  2% of the original kernel matrix.

torch.Size([6921, 2])
We keep 3.52e+05/8.04e+06 =  4% of the original kernel matrix.

torch.Size([19023, 2])
We keep 1.58e+06/7.24e+07 =  2% of the original kernel matrix.

torch.Size([9849, 2])
We keep 5.55e+05/1.66e+07 =  3% of the original kernel matrix.

torch.Size([21933, 2])
We keep 2.01e+06/1.04e+08 =  1% of the original kernel matrix.

torch.Size([12107, 2])
We keep 8.39e+05/2.66e+07 =  3% of the original kernel matrix.

torch.Size([24205, 2])
We keep 2.37e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([6390, 2])
We keep 2.74e+05/6.50e+06 =  4% of the original kernel matrix.

torch.Size([18404, 2])
We keep 1.46e+06/6.51e+07 =  2% of the original kernel matrix.

torch.Size([12817, 2])
We keep 1.41e+06/3.77e+07 =  3% of the original kernel matrix.

torch.Size([24853, 2])
We keep 2.72e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([17056, 2])
We keep 1.93e+06/6.29e+07 =  3% of the original kernel matrix.

torch.Size([28650, 2])
We keep 3.29e+06/2.02e+08 =  1% of the original kernel matrix.

torch.Size([4673, 2])
We keep 1.41e+05/2.98e+06 =  4% of the original kernel matrix.

torch.Size([16570, 2])
We keep 1.10e+06/4.40e+07 =  2% of the original kernel matrix.

torch.Size([2856, 2])
We keep 5.63e+04/9.35e+05 =  6% of the original kernel matrix.

torch.Size([13723, 2])
We keep 7.40e+05/2.47e+07 =  2% of the original kernel matrix.

torch.Size([10215, 2])
We keep 6.59e+05/1.85e+07 =  3% of the original kernel matrix.

torch.Size([22431, 2])
We keep 2.06e+06/1.10e+08 =  1% of the original kernel matrix.

torch.Size([25116, 2])
We keep 3.03e+06/1.66e+08 =  1% of the original kernel matrix.

torch.Size([34987, 2])
We keep 4.76e+06/3.29e+08 =  1% of the original kernel matrix.

torch.Size([11868, 2])
We keep 8.52e+05/2.76e+07 =  3% of the original kernel matrix.

torch.Size([23825, 2])
We keep 2.41e+06/1.34e+08 =  1% of the original kernel matrix.

torch.Size([5697, 2])
We keep 3.13e+05/6.60e+06 =  4% of the original kernel matrix.

torch.Size([17244, 2])
We keep 1.47e+06/6.56e+07 =  2% of the original kernel matrix.

torch.Size([13785, 2])
We keep 1.26e+06/4.26e+07 =  2% of the original kernel matrix.

torch.Size([25695, 2])
We keep 2.84e+06/1.67e+08 =  1% of the original kernel matrix.

torch.Size([7076, 2])
We keep 3.42e+05/8.04e+06 =  4% of the original kernel matrix.

torch.Size([19264, 2])
We keep 1.56e+06/7.24e+07 =  2% of the original kernel matrix.

torch.Size([7440, 2])
We keep 3.71e+05/9.65e+06 =  3% of the original kernel matrix.

torch.Size([19806, 2])
We keep 1.68e+06/7.93e+07 =  2% of the original kernel matrix.

torch.Size([5043, 2])
We keep 1.68e+05/3.57e+06 =  4% of the original kernel matrix.

torch.Size([16819, 2])
We keep 1.18e+06/4.82e+07 =  2% of the original kernel matrix.

torch.Size([11901, 2])
We keep 8.48e+05/2.63e+07 =  3% of the original kernel matrix.

torch.Size([24083, 2])
We keep 2.38e+06/1.31e+08 =  1% of the original kernel matrix.

torch.Size([5778, 2])
We keep 1.99e+05/4.59e+06 =  4% of the original kernel matrix.

torch.Size([17876, 2])
We keep 1.28e+06/5.47e+07 =  2% of the original kernel matrix.

torch.Size([10152, 2])
We keep 6.29e+05/1.86e+07 =  3% of the original kernel matrix.

torch.Size([22421, 2])
We keep 2.10e+06/1.10e+08 =  1% of the original kernel matrix.

torch.Size([10967, 2])
We keep 7.23e+05/2.20e+07 =  3% of the original kernel matrix.

torch.Size([23182, 2])
We keep 2.21e+06/1.20e+08 =  1% of the original kernel matrix.

torch.Size([8794, 2])
We keep 4.09e+05/1.17e+07 =  3% of the original kernel matrix.

torch.Size([21147, 2])
We keep 1.78e+06/8.71e+07 =  2% of the original kernel matrix.

torch.Size([5840, 2])
We keep 2.27e+05/5.01e+06 =  4% of the original kernel matrix.

torch.Size([17958, 2])
We keep 1.32e+06/5.72e+07 =  2% of the original kernel matrix.

torch.Size([6398, 2])
We keep 2.67e+05/6.63e+06 =  4% of the original kernel matrix.

torch.Size([18424, 2])
We keep 1.46e+06/6.57e+07 =  2% of the original kernel matrix.

torch.Size([11211, 2])
We keep 9.05e+05/2.48e+07 =  3% of the original kernel matrix.

torch.Size([23417, 2])
We keep 2.34e+06/1.27e+08 =  1% of the original kernel matrix.

torch.Size([10054, 2])
We keep 7.63e+05/2.03e+07 =  3% of the original kernel matrix.

torch.Size([22216, 2])
We keep 2.19e+06/1.15e+08 =  1% of the original kernel matrix.

torch.Size([13843, 2])
We keep 1.07e+06/3.65e+07 =  2% of the original kernel matrix.

torch.Size([25997, 2])
We keep 2.66e+06/1.54e+08 =  1% of the original kernel matrix.

torch.Size([8623, 2])
We keep 4.48e+05/1.18e+07 =  3% of the original kernel matrix.

torch.Size([20894, 2])
We keep 1.78e+06/8.77e+07 =  2% of the original kernel matrix.

torch.Size([21658, 2])
We keep 3.72e+06/1.59e+08 =  2% of the original kernel matrix.

torch.Size([32403, 2])
We keep 4.70e+06/3.22e+08 =  1% of the original kernel matrix.

torch.Size([10007, 2])
We keep 6.32e+05/1.84e+07 =  3% of the original kernel matrix.

torch.Size([22231, 2])
We keep 2.10e+06/1.09e+08 =  1% of the original kernel matrix.

torch.Size([8140, 2])
We keep 3.90e+05/1.08e+07 =  3% of the original kernel matrix.

torch.Size([20417, 2])
We keep 1.72e+06/8.39e+07 =  2% of the original kernel matrix.

torch.Size([26611, 2])
We keep 3.65e+06/1.99e+08 =  1% of the original kernel matrix.

torch.Size([36202, 2])
We keep 5.05e+06/3.60e+08 =  1% of the original kernel matrix.

torch.Size([12225, 2])
We keep 8.51e+05/2.42e+07 =  3% of the original kernel matrix.

torch.Size([24292, 2])
We keep 2.30e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([19590, 2])
We keep 1.83e+06/8.35e+07 =  2% of the original kernel matrix.

torch.Size([30725, 2])
We keep 3.65e+06/2.33e+08 =  1% of the original kernel matrix.

torch.Size([4797, 2])
We keep 1.93e+05/3.59e+06 =  5% of the original kernel matrix.

torch.Size([16349, 2])
We keep 1.18e+06/4.84e+07 =  2% of the original kernel matrix.

torch.Size([11332, 2])
We keep 8.85e+05/2.75e+07 =  3% of the original kernel matrix.

torch.Size([23378, 2])
We keep 2.41e+06/1.34e+08 =  1% of the original kernel matrix.

torch.Size([6315, 2])
We keep 2.61e+05/6.37e+06 =  4% of the original kernel matrix.

torch.Size([18410, 2])
We keep 1.43e+06/6.44e+07 =  2% of the original kernel matrix.

torch.Size([16382, 2])
We keep 1.29e+06/5.26e+07 =  2% of the original kernel matrix.

torch.Size([27904, 2])
We keep 3.05e+06/1.85e+08 =  1% of the original kernel matrix.

torch.Size([3297, 2])
We keep 1.17e+05/1.90e+06 =  6% of the original kernel matrix.

torch.Size([14097, 2])
We keep 9.61e+05/3.52e+07 =  2% of the original kernel matrix.

torch.Size([11659, 2])
We keep 7.82e+05/2.56e+07 =  3% of the original kernel matrix.

torch.Size([23902, 2])
We keep 2.35e+06/1.29e+08 =  1% of the original kernel matrix.

torch.Size([4704, 2])
We keep 1.55e+05/3.30e+06 =  4% of the original kernel matrix.

torch.Size([16550, 2])
We keep 1.15e+06/4.64e+07 =  2% of the original kernel matrix.

torch.Size([5784, 2])
We keep 2.54e+05/5.69e+06 =  4% of the original kernel matrix.

torch.Size([17657, 2])
We keep 1.37e+06/6.09e+07 =  2% of the original kernel matrix.

torch.Size([3981, 2])
We keep 1.30e+05/2.36e+06 =  5% of the original kernel matrix.

torch.Size([15197, 2])
We keep 1.03e+06/3.92e+07 =  2% of the original kernel matrix.

torch.Size([6210, 2])
We keep 3.32e+05/7.47e+06 =  4% of the original kernel matrix.

torch.Size([17849, 2])
We keep 1.51e+06/6.98e+07 =  2% of the original kernel matrix.

torch.Size([9498, 2])
We keep 5.57e+05/1.57e+07 =  3% of the original kernel matrix.

torch.Size([21884, 2])
We keep 1.95e+06/1.01e+08 =  1% of the original kernel matrix.

torch.Size([11479, 2])
We keep 8.90e+05/2.71e+07 =  3% of the original kernel matrix.

torch.Size([23561, 2])
We keep 2.41e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([5406, 2])
We keep 2.50e+05/5.09e+06 =  4% of the original kernel matrix.

torch.Size([16999, 2])
We keep 1.33e+06/5.76e+07 =  2% of the original kernel matrix.

torch.Size([5297, 2])
We keep 1.87e+05/4.33e+06 =  4% of the original kernel matrix.

torch.Size([17235, 2])
We keep 1.26e+06/5.31e+07 =  2% of the original kernel matrix.

torch.Size([5278, 2])
We keep 1.55e+05/3.64e+06 =  4% of the original kernel matrix.

torch.Size([17310, 2])
We keep 1.19e+06/4.87e+07 =  2% of the original kernel matrix.

torch.Size([19726, 2])
We keep 2.34e+06/1.00e+08 =  2% of the original kernel matrix.

torch.Size([30955, 2])
We keep 3.94e+06/2.56e+08 =  1% of the original kernel matrix.

torch.Size([7269, 2])
We keep 2.99e+05/7.88e+06 =  3% of the original kernel matrix.

torch.Size([19520, 2])
We keep 1.55e+06/7.17e+07 =  2% of the original kernel matrix.

torch.Size([21896, 2])
We keep 2.33e+06/1.13e+08 =  2% of the original kernel matrix.

torch.Size([32662, 2])
We keep 4.05e+06/2.71e+08 =  1% of the original kernel matrix.

torch.Size([7902, 2])
We keep 4.42e+05/1.14e+07 =  3% of the original kernel matrix.

torch.Size([20036, 2])
We keep 1.76e+06/8.61e+07 =  2% of the original kernel matrix.

torch.Size([6949, 2])
We keep 3.76e+05/9.64e+06 =  3% of the original kernel matrix.

torch.Size([18839, 2])
We keep 1.67e+06/7.93e+07 =  2% of the original kernel matrix.

torch.Size([8438, 2])
We keep 4.89e+05/1.28e+07 =  3% of the original kernel matrix.

torch.Size([20640, 2])
We keep 1.82e+06/9.13e+07 =  1% of the original kernel matrix.

torch.Size([5476, 2])
We keep 2.25e+05/4.60e+06 =  4% of the original kernel matrix.

torch.Size([17317, 2])
We keep 1.29e+06/5.48e+07 =  2% of the original kernel matrix.

torch.Size([8407, 2])
We keep 4.49e+05/1.24e+07 =  3% of the original kernel matrix.

torch.Size([20550, 2])
We keep 1.82e+06/8.97e+07 =  2% of the original kernel matrix.

torch.Size([6645, 2])
We keep 2.92e+05/6.90e+06 =  4% of the original kernel matrix.

torch.Size([18704, 2])
We keep 1.47e+06/6.71e+07 =  2% of the original kernel matrix.

torch.Size([7543, 2])
We keep 4.97e+05/1.03e+07 =  4% of the original kernel matrix.

torch.Size([19807, 2])
We keep 1.71e+06/8.18e+07 =  2% of the original kernel matrix.

torch.Size([24450, 2])
We keep 3.02e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([34714, 2])
We keep 4.55e+06/3.14e+08 =  1% of the original kernel matrix.

torch.Size([7370, 2])
We keep 3.39e+05/8.68e+06 =  3% of the original kernel matrix.

torch.Size([19516, 2])
We keep 1.58e+06/7.52e+07 =  2% of the original kernel matrix.

torch.Size([12692, 2])
We keep 9.88e+05/3.44e+07 =  2% of the original kernel matrix.

torch.Size([24734, 2])
We keep 2.61e+06/1.50e+08 =  1% of the original kernel matrix.

torch.Size([6702, 2])
We keep 3.70e+05/8.03e+06 =  4% of the original kernel matrix.

torch.Size([18819, 2])
We keep 1.56e+06/7.23e+07 =  2% of the original kernel matrix.

torch.Size([11147, 2])
We keep 8.28e+05/2.44e+07 =  3% of the original kernel matrix.

torch.Size([23302, 2])
We keep 2.31e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([4038, 2])
We keep 1.52e+05/2.75e+06 =  5% of the original kernel matrix.

torch.Size([15265, 2])
We keep 1.09e+06/4.23e+07 =  2% of the original kernel matrix.

torch.Size([13237, 2])
We keep 4.91e+06/4.39e+07 = 11% of the original kernel matrix.

torch.Size([25283, 2])
We keep 2.92e+06/1.69e+08 =  1% of the original kernel matrix.

torch.Size([7075, 2])
We keep 3.48e+05/8.46e+06 =  4% of the original kernel matrix.

torch.Size([19188, 2])
We keep 1.58e+06/7.43e+07 =  2% of the original kernel matrix.

torch.Size([3803, 2])
We keep 1.26e+05/2.38e+06 =  5% of the original kernel matrix.

torch.Size([14993, 2])
We keep 1.03e+06/3.94e+07 =  2% of the original kernel matrix.

torch.Size([4295, 2])
We keep 1.43e+05/2.95e+06 =  4% of the original kernel matrix.

torch.Size([15689, 2])
We keep 1.10e+06/4.39e+07 =  2% of the original kernel matrix.

torch.Size([8100, 2])
We keep 3.92e+05/1.05e+07 =  3% of the original kernel matrix.

torch.Size([20295, 2])
We keep 1.71e+06/8.28e+07 =  2% of the original kernel matrix.

torch.Size([5866, 2])
We keep 2.14e+05/5.20e+06 =  4% of the original kernel matrix.

torch.Size([18039, 2])
We keep 1.32e+06/5.82e+07 =  2% of the original kernel matrix.

torch.Size([10360, 2])
We keep 7.20e+05/2.17e+07 =  3% of the original kernel matrix.

torch.Size([22489, 2])
We keep 2.22e+06/1.19e+08 =  1% of the original kernel matrix.

torch.Size([5933, 2])
We keep 3.68e+05/6.20e+06 =  5% of the original kernel matrix.

torch.Size([17856, 2])
We keep 1.43e+06/6.35e+07 =  2% of the original kernel matrix.

torch.Size([22343, 2])
We keep 3.23e+06/1.58e+08 =  2% of the original kernel matrix.

torch.Size([32979, 2])
We keep 4.66e+06/3.21e+08 =  1% of the original kernel matrix.

torch.Size([19019, 2])
We keep 1.83e+06/8.05e+07 =  2% of the original kernel matrix.

torch.Size([30178, 2])
We keep 3.56e+06/2.29e+08 =  1% of the original kernel matrix.

torch.Size([11417, 2])
We keep 7.90e+05/2.39e+07 =  3% of the original kernel matrix.

torch.Size([23562, 2])
We keep 2.30e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([6997, 2])
We keep 2.62e+05/6.81e+06 =  3% of the original kernel matrix.

torch.Size([19296, 2])
We keep 1.46e+06/6.66e+07 =  2% of the original kernel matrix.

torch.Size([7023, 2])
We keep 3.33e+05/7.82e+06 =  4% of the original kernel matrix.

torch.Size([19200, 2])
We keep 1.56e+06/7.14e+07 =  2% of the original kernel matrix.

torch.Size([7795, 2])
We keep 3.71e+05/9.98e+06 =  3% of the original kernel matrix.

torch.Size([20208, 2])
We keep 1.69e+06/8.06e+07 =  2% of the original kernel matrix.

torch.Size([5963, 2])
We keep 2.33e+05/5.29e+06 =  4% of the original kernel matrix.

torch.Size([18156, 2])
We keep 1.36e+06/5.87e+07 =  2% of the original kernel matrix.

torch.Size([7576, 2])
We keep 4.53e+05/1.08e+07 =  4% of the original kernel matrix.

torch.Size([19687, 2])
We keep 1.72e+06/8.38e+07 =  2% of the original kernel matrix.

torch.Size([5963, 2])
We keep 3.01e+05/6.80e+06 =  4% of the original kernel matrix.

torch.Size([17618, 2])
We keep 1.46e+06/6.66e+07 =  2% of the original kernel matrix.

torch.Size([10183, 2])
We keep 6.34e+05/1.88e+07 =  3% of the original kernel matrix.

torch.Size([22381, 2])
We keep 2.11e+06/1.11e+08 =  1% of the original kernel matrix.

torch.Size([11773, 2])
We keep 7.79e+05/2.42e+07 =  3% of the original kernel matrix.

torch.Size([23904, 2])
We keep 2.32e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([24034, 2])
We keep 4.67e+06/2.01e+08 =  2% of the original kernel matrix.

torch.Size([34144, 2])
We keep 5.12e+06/3.62e+08 =  1% of the original kernel matrix.

torch.Size([7534, 2])
We keep 4.13e+05/9.82e+06 =  4% of the original kernel matrix.

torch.Size([19584, 2])
We keep 1.67e+06/8.00e+07 =  2% of the original kernel matrix.

torch.Size([34756, 2])
We keep 9.08e+06/4.56e+08 =  1% of the original kernel matrix.

torch.Size([41467, 2])
We keep 7.16e+06/5.45e+08 =  1% of the original kernel matrix.

torch.Size([8912, 2])
We keep 4.09e+05/1.14e+07 =  3% of the original kernel matrix.

torch.Size([21309, 2])
We keep 1.75e+06/8.63e+07 =  2% of the original kernel matrix.

torch.Size([12030, 2])
We keep 1.05e+06/2.89e+07 =  3% of the original kernel matrix.

torch.Size([24066, 2])
We keep 2.47e+06/1.37e+08 =  1% of the original kernel matrix.

torch.Size([13250, 2])
We keep 9.45e+05/3.28e+07 =  2% of the original kernel matrix.

torch.Size([25325, 2])
We keep 2.58e+06/1.46e+08 =  1% of the original kernel matrix.

torch.Size([2213, 2])
We keep 3.85e+04/5.24e+05 =  7% of the original kernel matrix.

torch.Size([12433, 2])
We keep 6.33e+05/1.85e+07 =  3% of the original kernel matrix.

torch.Size([18145, 2])
We keep 1.90e+06/7.01e+07 =  2% of the original kernel matrix.

torch.Size([29645, 2])
We keep 3.43e+06/2.14e+08 =  1% of the original kernel matrix.

torch.Size([7311, 2])
We keep 4.99e+05/1.06e+07 =  4% of the original kernel matrix.

torch.Size([19133, 2])
We keep 1.73e+06/8.33e+07 =  2% of the original kernel matrix.

torch.Size([10508, 2])
We keep 1.10e+06/2.38e+07 =  4% of the original kernel matrix.

torch.Size([22574, 2])
We keep 2.29e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([3847, 2])
We keep 1.12e+05/2.08e+06 =  5% of the original kernel matrix.

torch.Size([15193, 2])
We keep 9.95e+05/3.68e+07 =  2% of the original kernel matrix.

torch.Size([9989, 2])
We keep 7.57e+05/2.20e+07 =  3% of the original kernel matrix.

torch.Size([22084, 2])
We keep 2.22e+06/1.20e+08 =  1% of the original kernel matrix.

torch.Size([6758, 2])
We keep 3.53e+05/7.66e+06 =  4% of the original kernel matrix.

torch.Size([18705, 2])
We keep 1.52e+06/7.06e+07 =  2% of the original kernel matrix.

torch.Size([8147, 2])
We keep 3.91e+05/1.07e+07 =  3% of the original kernel matrix.

torch.Size([20548, 2])
We keep 1.69e+06/8.36e+07 =  2% of the original kernel matrix.

torch.Size([11361, 2])
We keep 7.41e+05/2.35e+07 =  3% of the original kernel matrix.

torch.Size([23419, 2])
We keep 2.28e+06/1.24e+08 =  1% of the original kernel matrix.

torch.Size([11949, 2])
We keep 8.28e+05/2.61e+07 =  3% of the original kernel matrix.

torch.Size([24074, 2])
We keep 2.39e+06/1.30e+08 =  1% of the original kernel matrix.

torch.Size([3074, 2])
We keep 7.64e+04/1.36e+06 =  5% of the original kernel matrix.

torch.Size([13928, 2])
We keep 8.49e+05/2.98e+07 =  2% of the original kernel matrix.

torch.Size([5793, 2])
We keep 2.61e+05/6.04e+06 =  4% of the original kernel matrix.

torch.Size([17502, 2])
We keep 1.42e+06/6.27e+07 =  2% of the original kernel matrix.

torch.Size([4821, 2])
We keep 1.99e+05/3.71e+06 =  5% of the original kernel matrix.

torch.Size([16389, 2])
We keep 1.19e+06/4.91e+07 =  2% of the original kernel matrix.

torch.Size([16844, 2])
We keep 1.58e+06/5.95e+07 =  2% of the original kernel matrix.

torch.Size([28388, 2])
We keep 3.21e+06/1.97e+08 =  1% of the original kernel matrix.

torch.Size([5386, 2])
We keep 2.25e+05/4.77e+06 =  4% of the original kernel matrix.

torch.Size([17156, 2])
We keep 1.29e+06/5.58e+07 =  2% of the original kernel matrix.

torch.Size([11716, 2])
We keep 8.00e+05/2.47e+07 =  3% of the original kernel matrix.

torch.Size([23966, 2])
We keep 2.33e+06/1.27e+08 =  1% of the original kernel matrix.

torch.Size([8733, 2])
We keep 1.06e+06/1.40e+07 =  7% of the original kernel matrix.

torch.Size([21117, 2])
We keep 1.92e+06/9.55e+07 =  2% of the original kernel matrix.

torch.Size([11418, 2])
We keep 7.63e+05/2.35e+07 =  3% of the original kernel matrix.

torch.Size([23552, 2])
We keep 2.27e+06/1.24e+08 =  1% of the original kernel matrix.

torch.Size([9134, 2])
We keep 5.35e+05/1.61e+07 =  3% of the original kernel matrix.

torch.Size([21257, 2])
We keep 1.99e+06/1.02e+08 =  1% of the original kernel matrix.

torch.Size([14404, 2])
We keep 1.94e+06/5.94e+07 =  3% of the original kernel matrix.

torch.Size([26010, 2])
We keep 3.23e+06/1.97e+08 =  1% of the original kernel matrix.

torch.Size([7584, 2])
We keep 3.65e+05/9.59e+06 =  3% of the original kernel matrix.

torch.Size([19992, 2])
We keep 1.68e+06/7.91e+07 =  2% of the original kernel matrix.

torch.Size([8392, 2])
We keep 4.21e+05/1.12e+07 =  3% of the original kernel matrix.

torch.Size([20784, 2])
We keep 1.74e+06/8.53e+07 =  2% of the original kernel matrix.

torch.Size([8117, 2])
We keep 4.95e+05/1.16e+07 =  4% of the original kernel matrix.

torch.Size([20200, 2])
We keep 1.79e+06/8.71e+07 =  2% of the original kernel matrix.

torch.Size([9112, 2])
We keep 8.83e+05/1.96e+07 =  4% of the original kernel matrix.

torch.Size([21162, 2])
We keep 2.16e+06/1.13e+08 =  1% of the original kernel matrix.

torch.Size([6783, 2])
We keep 3.17e+05/7.25e+06 =  4% of the original kernel matrix.

torch.Size([18843, 2])
We keep 1.51e+06/6.87e+07 =  2% of the original kernel matrix.

torch.Size([12108, 2])
We keep 7.65e+05/2.60e+07 =  2% of the original kernel matrix.

torch.Size([24381, 2])
We keep 2.34e+06/1.30e+08 =  1% of the original kernel matrix.

torch.Size([14903, 2])
We keep 1.15e+06/4.27e+07 =  2% of the original kernel matrix.

torch.Size([26595, 2])
We keep 2.81e+06/1.67e+08 =  1% of the original kernel matrix.

torch.Size([7937, 2])
We keep 3.87e+05/1.04e+07 =  3% of the original kernel matrix.

torch.Size([20162, 2])
We keep 1.71e+06/8.23e+07 =  2% of the original kernel matrix.

torch.Size([10466, 2])
We keep 8.73e+05/2.38e+07 =  3% of the original kernel matrix.

torch.Size([22380, 2])
We keep 2.30e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([14192, 2])
We keep 1.03e+06/3.72e+07 =  2% of the original kernel matrix.

torch.Size([26114, 2])
We keep 2.69e+06/1.56e+08 =  1% of the original kernel matrix.

torch.Size([23629, 2])
We keep 3.08e+06/1.48e+08 =  2% of the original kernel matrix.

torch.Size([33954, 2])
We keep 4.52e+06/3.10e+08 =  1% of the original kernel matrix.

torch.Size([6284, 2])
We keep 2.37e+05/5.74e+06 =  4% of the original kernel matrix.

torch.Size([18308, 2])
We keep 1.39e+06/6.12e+07 =  2% of the original kernel matrix.

torch.Size([2224, 2])
We keep 4.42e+04/6.64e+05 =  6% of the original kernel matrix.

torch.Size([12307, 2])
We keep 6.81e+05/2.08e+07 =  3% of the original kernel matrix.

torch.Size([8877, 2])
We keep 4.53e+05/1.33e+07 =  3% of the original kernel matrix.

torch.Size([21253, 2])
We keep 1.85e+06/9.29e+07 =  1% of the original kernel matrix.

torch.Size([7222, 2])
We keep 4.48e+05/9.44e+06 =  4% of the original kernel matrix.

torch.Size([19486, 2])
We keep 1.67e+06/7.84e+07 =  2% of the original kernel matrix.

torch.Size([9682, 2])
We keep 6.85e+05/1.79e+07 =  3% of the original kernel matrix.

torch.Size([21743, 2])
We keep 2.08e+06/1.08e+08 =  1% of the original kernel matrix.

torch.Size([10741, 2])
We keep 7.13e+05/2.17e+07 =  3% of the original kernel matrix.

torch.Size([23037, 2])
We keep 2.22e+06/1.19e+08 =  1% of the original kernel matrix.

torch.Size([7957, 2])
We keep 4.10e+05/1.04e+07 =  3% of the original kernel matrix.

torch.Size([20267, 2])
We keep 1.70e+06/8.24e+07 =  2% of the original kernel matrix.

torch.Size([4783, 2])
We keep 1.66e+05/3.35e+06 =  4% of the original kernel matrix.

torch.Size([16571, 2])
We keep 1.14e+06/4.67e+07 =  2% of the original kernel matrix.

torch.Size([7793, 2])
We keep 4.67e+05/1.05e+07 =  4% of the original kernel matrix.

torch.Size([20012, 2])
We keep 1.71e+06/8.27e+07 =  2% of the original kernel matrix.

torch.Size([5005, 2])
We keep 1.51e+05/3.29e+06 =  4% of the original kernel matrix.

torch.Size([16958, 2])
We keep 1.14e+06/4.63e+07 =  2% of the original kernel matrix.

torch.Size([9824, 2])
We keep 4.72e+05/1.45e+07 =  3% of the original kernel matrix.

torch.Size([22188, 2])
We keep 1.90e+06/9.71e+07 =  1% of the original kernel matrix.

torch.Size([6065, 2])
We keep 2.00e+05/4.73e+06 =  4% of the original kernel matrix.

torch.Size([18168, 2])
We keep 1.29e+06/5.55e+07 =  2% of the original kernel matrix.

torch.Size([13841, 2])
We keep 9.74e+05/3.56e+07 =  2% of the original kernel matrix.

torch.Size([25753, 2])
We keep 2.64e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([10606, 2])
We keep 6.40e+05/2.00e+07 =  3% of the original kernel matrix.

torch.Size([22899, 2])
We keep 2.16e+06/1.14e+08 =  1% of the original kernel matrix.

torch.Size([13307, 2])
We keep 1.09e+06/3.79e+07 =  2% of the original kernel matrix.

torch.Size([25298, 2])
We keep 2.71e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([4051, 2])
We keep 1.14e+05/2.13e+06 =  5% of the original kernel matrix.

torch.Size([15596, 2])
We keep 9.92e+05/3.73e+07 =  2% of the original kernel matrix.

torch.Size([12252, 2])
We keep 1.09e+06/3.27e+07 =  3% of the original kernel matrix.

torch.Size([24306, 2])
We keep 2.59e+06/1.46e+08 =  1% of the original kernel matrix.

torch.Size([8658, 2])
We keep 4.82e+05/1.29e+07 =  3% of the original kernel matrix.

torch.Size([20764, 2])
We keep 1.86e+06/9.18e+07 =  2% of the original kernel matrix.

torch.Size([12210, 2])
We keep 7.98e+05/2.76e+07 =  2% of the original kernel matrix.

torch.Size([24420, 2])
We keep 2.41e+06/1.34e+08 =  1% of the original kernel matrix.

torch.Size([14310, 2])
We keep 1.03e+06/3.85e+07 =  2% of the original kernel matrix.

torch.Size([26178, 2])
We keep 2.74e+06/1.58e+08 =  1% of the original kernel matrix.

torch.Size([15101, 2])
We keep 1.44e+06/5.03e+07 =  2% of the original kernel matrix.

torch.Size([26828, 2])
We keep 3.03e+06/1.81e+08 =  1% of the original kernel matrix.

torch.Size([11111, 2])
We keep 9.53e+05/2.68e+07 =  3% of the original kernel matrix.

torch.Size([23200, 2])
We keep 2.39e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([7609, 2])
We keep 3.98e+05/1.01e+07 =  3% of the original kernel matrix.

torch.Size([19705, 2])
We keep 1.69e+06/8.10e+07 =  2% of the original kernel matrix.

torch.Size([7724, 2])
We keep 3.56e+05/9.53e+06 =  3% of the original kernel matrix.

torch.Size([20220, 2])
We keep 1.67e+06/7.88e+07 =  2% of the original kernel matrix.

torch.Size([2950, 2])
We keep 6.85e+04/1.17e+06 =  5% of the original kernel matrix.

torch.Size([13888, 2])
We keep 8.17e+05/2.76e+07 =  2% of the original kernel matrix.

torch.Size([6441, 2])
We keep 3.04e+05/6.91e+06 =  4% of the original kernel matrix.

torch.Size([18344, 2])
We keep 1.48e+06/6.71e+07 =  2% of the original kernel matrix.

torch.Size([4480, 2])
We keep 1.28e+05/2.65e+06 =  4% of the original kernel matrix.

torch.Size([16216, 2])
We keep 1.06e+06/4.16e+07 =  2% of the original kernel matrix.

torch.Size([3506, 2])
We keep 8.50e+04/1.58e+06 =  5% of the original kernel matrix.

torch.Size([14704, 2])
We keep 8.95e+05/3.20e+07 =  2% of the original kernel matrix.

torch.Size([22996, 2])
We keep 4.20e+06/1.44e+08 =  2% of the original kernel matrix.

torch.Size([33254, 2])
We keep 4.50e+06/3.06e+08 =  1% of the original kernel matrix.

torch.Size([6611, 2])
We keep 2.75e+05/6.93e+06 =  3% of the original kernel matrix.

torch.Size([18813, 2])
We keep 1.48e+06/6.72e+07 =  2% of the original kernel matrix.

torch.Size([6028, 2])
We keep 4.53e+05/7.71e+06 =  5% of the original kernel matrix.

torch.Size([17807, 2])
We keep 1.55e+06/7.09e+07 =  2% of the original kernel matrix.

torch.Size([5778, 2])
We keep 2.61e+05/5.97e+06 =  4% of the original kernel matrix.

torch.Size([17610, 2])
We keep 1.41e+06/6.24e+07 =  2% of the original kernel matrix.

torch.Size([11346, 2])
We keep 8.35e+05/2.52e+07 =  3% of the original kernel matrix.

torch.Size([23436, 2])
We keep 2.35e+06/1.28e+08 =  1% of the original kernel matrix.

torch.Size([7121, 2])
We keep 3.68e+05/8.66e+06 =  4% of the original kernel matrix.

torch.Size([19212, 2])
We keep 1.60e+06/7.51e+07 =  2% of the original kernel matrix.

torch.Size([13061, 2])
We keep 1.15e+06/3.95e+07 =  2% of the original kernel matrix.

torch.Size([24851, 2])
We keep 2.76e+06/1.60e+08 =  1% of the original kernel matrix.

torch.Size([12507, 2])
We keep 1.25e+06/3.26e+07 =  3% of the original kernel matrix.

torch.Size([24522, 2])
We keep 2.60e+06/1.46e+08 =  1% of the original kernel matrix.

torch.Size([3915, 2])
We keep 1.09e+05/2.21e+06 =  4% of the original kernel matrix.

torch.Size([15201, 2])
We keep 9.90e+05/3.79e+07 =  2% of the original kernel matrix.

torch.Size([5581, 2])
We keep 2.33e+05/5.17e+06 =  4% of the original kernel matrix.

torch.Size([17472, 2])
We keep 1.35e+06/5.80e+07 =  2% of the original kernel matrix.

torch.Size([10248, 2])
We keep 6.57e+05/1.98e+07 =  3% of the original kernel matrix.

torch.Size([22525, 2])
We keep 2.15e+06/1.14e+08 =  1% of the original kernel matrix.

torch.Size([3320, 2])
We keep 9.83e+04/1.59e+06 =  6% of the original kernel matrix.

torch.Size([14252, 2])
We keep 8.96e+05/3.22e+07 =  2% of the original kernel matrix.

torch.Size([5707, 2])
We keep 2.61e+05/5.85e+06 =  4% of the original kernel matrix.

torch.Size([17456, 2])
We keep 1.40e+06/6.17e+07 =  2% of the original kernel matrix.

torch.Size([7621, 2])
We keep 4.74e+05/1.19e+07 =  3% of the original kernel matrix.

torch.Size([19523, 2])
We keep 1.79e+06/8.81e+07 =  2% of the original kernel matrix.

torch.Size([11931, 2])
We keep 9.07e+05/2.64e+07 =  3% of the original kernel matrix.

torch.Size([24098, 2])
We keep 2.39e+06/1.31e+08 =  1% of the original kernel matrix.

torch.Size([11825, 2])
We keep 9.58e+05/2.84e+07 =  3% of the original kernel matrix.

torch.Size([23916, 2])
We keep 2.44e+06/1.36e+08 =  1% of the original kernel matrix.

torch.Size([5191, 2])
We keep 2.02e+05/4.00e+06 =  5% of the original kernel matrix.

torch.Size([17057, 2])
We keep 1.22e+06/5.11e+07 =  2% of the original kernel matrix.

torch.Size([6097, 2])
We keep 2.93e+05/6.12e+06 =  4% of the original kernel matrix.

torch.Size([18285, 2])
We keep 1.44e+06/6.31e+07 =  2% of the original kernel matrix.

torch.Size([8678, 2])
We keep 4.32e+05/1.24e+07 =  3% of the original kernel matrix.

torch.Size([20959, 2])
We keep 1.80e+06/8.97e+07 =  2% of the original kernel matrix.

torch.Size([16316, 2])
We keep 1.54e+06/5.42e+07 =  2% of the original kernel matrix.

torch.Size([27999, 2])
We keep 3.05e+06/1.88e+08 =  1% of the original kernel matrix.

torch.Size([5039, 2])
We keep 1.86e+05/3.87e+06 =  4% of the original kernel matrix.

torch.Size([16822, 2])
We keep 1.21e+06/5.02e+07 =  2% of the original kernel matrix.

torch.Size([31227, 2])
We keep 7.10e+06/3.16e+08 =  2% of the original kernel matrix.

torch.Size([39352, 2])
We keep 6.14e+06/4.54e+08 =  1% of the original kernel matrix.

torch.Size([87557, 2])
We keep 1.17e+08/5.14e+09 =  2% of the original kernel matrix.

torch.Size([63267, 2])
We keep 1.91e+07/1.83e+09 =  1% of the original kernel matrix.

torch.Size([10689, 2])
We keep 7.85e+05/2.13e+07 =  3% of the original kernel matrix.

torch.Size([23116, 2])
We keep 2.08e+06/1.18e+08 =  1% of the original kernel matrix.

torch.Size([11680, 2])
We keep 9.96e+05/2.80e+07 =  3% of the original kernel matrix.

torch.Size([23809, 2])
We keep 2.45e+06/1.35e+08 =  1% of the original kernel matrix.

torch.Size([2937, 2])
We keep 7.17e+04/1.08e+06 =  6% of the original kernel matrix.

torch.Size([13635, 2])
We keep 7.92e+05/2.65e+07 =  2% of the original kernel matrix.

torch.Size([13929, 2])
We keep 1.04e+06/3.68e+07 =  2% of the original kernel matrix.

torch.Size([25912, 2])
We keep 2.69e+06/1.55e+08 =  1% of the original kernel matrix.

torch.Size([75153, 2])
We keep 9.79e+08/3.86e+09 = 25% of the original kernel matrix.

torch.Size([59221, 2])
We keep 1.68e+07/1.59e+09 =  1% of the original kernel matrix.

torch.Size([270874, 2])
We keep 7.09e+08/4.63e+10 =  1% of the original kernel matrix.

torch.Size([114259, 2])
We keep 4.89e+07/5.49e+09 =  0% of the original kernel matrix.

torch.Size([6903, 2])
We keep 2.98e+05/7.51e+06 =  3% of the original kernel matrix.

torch.Size([19030, 2])
We keep 1.52e+06/6.99e+07 =  2% of the original kernel matrix.

torch.Size([143872, 2])
We keep 1.19e+08/9.14e+09 =  1% of the original kernel matrix.

torch.Size([82313, 2])
We keep 2.45e+07/2.44e+09 =  1% of the original kernel matrix.

torch.Size([79355, 2])
We keep 1.39e+08/2.81e+09 =  4% of the original kernel matrix.

torch.Size([60862, 2])
We keep 1.47e+07/1.35e+09 =  1% of the original kernel matrix.

torch.Size([30140, 2])
We keep 1.03e+07/3.74e+08 =  2% of the original kernel matrix.

torch.Size([38201, 2])
We keep 6.52e+06/4.94e+08 =  1% of the original kernel matrix.

torch.Size([137010, 2])
We keep 1.71e+09/1.42e+10 = 12% of the original kernel matrix.

torch.Size([80808, 2])
We keep 2.59e+07/3.04e+09 =  0% of the original kernel matrix.

torch.Size([5778, 2])
We keep 1.95e+05/4.68e+06 =  4% of the original kernel matrix.

torch.Size([17935, 2])
We keep 1.28e+06/5.52e+07 =  2% of the original kernel matrix.

torch.Size([11813, 2])
We keep 1.01e+06/2.91e+07 =  3% of the original kernel matrix.

torch.Size([23879, 2])
We keep 2.48e+06/1.38e+08 =  1% of the original kernel matrix.

torch.Size([241764, 2])
We keep 3.20e+08/2.81e+10 =  1% of the original kernel matrix.

torch.Size([107856, 2])
We keep 3.97e+07/4.28e+09 =  0% of the original kernel matrix.

torch.Size([444820, 2])
We keep 5.16e+08/6.00e+10 =  0% of the original kernel matrix.

torch.Size([152604, 2])
We keep 5.54e+07/6.25e+09 =  0% of the original kernel matrix.

torch.Size([13018, 2])
We keep 2.08e+06/3.55e+07 =  5% of the original kernel matrix.

torch.Size([25307, 2])
We keep 2.68e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([59406, 2])
We keep 1.87e+07/1.17e+09 =  1% of the original kernel matrix.

torch.Size([54275, 2])
We keep 1.03e+07/8.75e+08 =  1% of the original kernel matrix.

torch.Size([37937, 2])
We keep 3.87e+07/8.06e+08 =  4% of the original kernel matrix.

torch.Size([42220, 2])
We keep 9.09e+06/7.25e+08 =  1% of the original kernel matrix.

torch.Size([76073, 2])
We keep 1.86e+08/2.39e+09 =  7% of the original kernel matrix.

torch.Size([60064, 2])
We keep 1.35e+07/1.25e+09 =  1% of the original kernel matrix.

torch.Size([85243, 2])
We keep 1.06e+08/5.02e+09 =  2% of the original kernel matrix.

torch.Size([60261, 2])
We keep 1.87e+07/1.81e+09 =  1% of the original kernel matrix.

torch.Size([80830, 2])
We keep 1.54e+08/4.77e+09 =  3% of the original kernel matrix.

torch.Size([59079, 2])
We keep 1.86e+07/1.76e+09 =  1% of the original kernel matrix.

torch.Size([117516, 2])
We keep 2.11e+08/4.83e+09 =  4% of the original kernel matrix.

torch.Size([75329, 2])
We keep 1.86e+07/1.77e+09 =  1% of the original kernel matrix.

torch.Size([36518, 2])
We keep 9.48e+06/4.36e+08 =  2% of the original kernel matrix.

torch.Size([42708, 2])
We keep 6.92e+06/5.33e+08 =  1% of the original kernel matrix.

torch.Size([8784, 2])
We keep 5.94e+06/2.25e+07 = 26% of the original kernel matrix.

torch.Size([20855, 2])
We keep 2.18e+06/1.21e+08 =  1% of the original kernel matrix.

torch.Size([183303, 2])
We keep 4.12e+08/2.67e+10 =  1% of the original kernel matrix.

torch.Size([90625, 2])
We keep 3.84e+07/4.17e+09 =  0% of the original kernel matrix.

torch.Size([11948, 2])
We keep 1.30e+06/2.92e+07 =  4% of the original kernel matrix.

torch.Size([23988, 2])
We keep 2.47e+06/1.38e+08 =  1% of the original kernel matrix.

torch.Size([6805, 2])
We keep 3.04e+05/7.65e+06 =  3% of the original kernel matrix.

torch.Size([18997, 2])
We keep 1.52e+06/7.06e+07 =  2% of the original kernel matrix.

torch.Size([53940, 2])
We keep 2.28e+07/1.01e+09 =  2% of the original kernel matrix.

torch.Size([51778, 2])
We keep 9.69e+06/8.13e+08 =  1% of the original kernel matrix.

torch.Size([79921, 2])
We keep 8.03e+07/3.60e+09 =  2% of the original kernel matrix.

torch.Size([58476, 2])
We keep 1.67e+07/1.53e+09 =  1% of the original kernel matrix.

torch.Size([395669, 2])
We keep 6.47e+08/5.52e+10 =  1% of the original kernel matrix.

torch.Size([142762, 2])
We keep 5.27e+07/6.00e+09 =  0% of the original kernel matrix.

torch.Size([154308, 2])
We keep 6.87e+07/7.26e+09 =  0% of the original kernel matrix.

torch.Size([86444, 2])
We keep 2.21e+07/2.18e+09 =  1% of the original kernel matrix.

torch.Size([5467, 2])
We keep 1.93e+05/4.36e+06 =  4% of the original kernel matrix.

torch.Size([17539, 2])
We keep 1.26e+06/5.33e+07 =  2% of the original kernel matrix.

torch.Size([29494, 2])
We keep 7.74e+06/2.73e+08 =  2% of the original kernel matrix.

torch.Size([38264, 2])
We keep 5.80e+06/4.22e+08 =  1% of the original kernel matrix.

torch.Size([22369, 2])
We keep 3.11e+06/1.37e+08 =  2% of the original kernel matrix.

torch.Size([33027, 2])
We keep 4.43e+06/2.99e+08 =  1% of the original kernel matrix.

torch.Size([32422, 2])
We keep 8.45e+06/4.19e+08 =  2% of the original kernel matrix.

torch.Size([39789, 2])
We keep 6.75e+06/5.22e+08 =  1% of the original kernel matrix.

torch.Size([142328, 2])
We keep 1.52e+08/6.80e+09 =  2% of the original kernel matrix.

torch.Size([83272, 2])
We keep 2.12e+07/2.10e+09 =  1% of the original kernel matrix.

torch.Size([23332, 2])
We keep 1.00e+07/1.91e+08 =  5% of the original kernel matrix.

torch.Size([33435, 2])
We keep 4.88e+06/3.53e+08 =  1% of the original kernel matrix.

torch.Size([55813, 2])
We keep 1.61e+07/1.01e+09 =  1% of the original kernel matrix.

torch.Size([52700, 2])
We keep 9.77e+06/8.11e+08 =  1% of the original kernel matrix.

torch.Size([2497, 2])
We keep 4.36e+04/6.99e+05 =  6% of the original kernel matrix.

torch.Size([13028, 2])
We keep 6.82e+05/2.13e+07 =  3% of the original kernel matrix.

torch.Size([11608, 2])
We keep 7.13e+05/2.40e+07 =  2% of the original kernel matrix.

torch.Size([23763, 2])
We keep 2.27e+06/1.25e+08 =  1% of the original kernel matrix.

torch.Size([103436, 2])
We keep 7.76e+07/4.92e+09 =  1% of the original kernel matrix.

torch.Size([67847, 2])
We keep 1.89e+07/1.79e+09 =  1% of the original kernel matrix.

torch.Size([94685, 2])
We keep 7.72e+07/3.97e+09 =  1% of the original kernel matrix.

torch.Size([66501, 2])
We keep 1.71e+07/1.61e+09 =  1% of the original kernel matrix.

torch.Size([60887, 2])
We keep 3.00e+07/1.76e+09 =  1% of the original kernel matrix.

torch.Size([52520, 2])
We keep 1.23e+07/1.07e+09 =  1% of the original kernel matrix.

torch.Size([11176, 2])
We keep 8.99e+05/2.79e+07 =  3% of the original kernel matrix.

torch.Size([23307, 2])
We keep 2.42e+06/1.35e+08 =  1% of the original kernel matrix.

torch.Size([513099, 2])
We keep 6.49e+08/1.04e+11 =  0% of the original kernel matrix.

torch.Size([163336, 2])
We keep 6.96e+07/8.24e+09 =  0% of the original kernel matrix.

torch.Size([29642, 2])
We keep 3.87e+06/2.39e+08 =  1% of the original kernel matrix.

torch.Size([38600, 2])
We keep 5.41e+06/3.95e+08 =  1% of the original kernel matrix.

torch.Size([56708, 2])
We keep 1.47e+07/1.04e+09 =  1% of the original kernel matrix.

torch.Size([53143, 2])
We keep 9.80e+06/8.25e+08 =  1% of the original kernel matrix.

torch.Size([177125, 2])
We keep 1.76e+08/1.35e+10 =  1% of the original kernel matrix.

torch.Size([92870, 2])
We keep 2.90e+07/2.97e+09 =  0% of the original kernel matrix.

torch.Size([7704, 2])
We keep 3.40e+05/9.17e+06 =  3% of the original kernel matrix.

torch.Size([20051, 2])
We keep 1.65e+06/7.73e+07 =  2% of the original kernel matrix.

torch.Size([130920, 2])
We keep 1.10e+08/6.41e+09 =  1% of the original kernel matrix.

torch.Size([78837, 2])
We keep 2.12e+07/2.04e+09 =  1% of the original kernel matrix.

torch.Size([411935, 2])
We keep 1.31e+09/8.00e+10 =  1% of the original kernel matrix.

torch.Size([143308, 2])
We keep 6.36e+07/7.22e+09 =  0% of the original kernel matrix.

torch.Size([514171, 2])
We keep 9.17e+08/9.16e+10 =  1% of the original kernel matrix.

torch.Size([162334, 2])
We keep 6.63e+07/7.72e+09 =  0% of the original kernel matrix.

torch.Size([22099, 2])
We keep 3.18e+06/1.43e+08 =  2% of the original kernel matrix.

torch.Size([32552, 2])
We keep 4.49e+06/3.05e+08 =  1% of the original kernel matrix.

torch.Size([14996, 2])
We keep 1.57e+06/5.20e+07 =  3% of the original kernel matrix.

torch.Size([26701, 2])
We keep 3.07e+06/1.84e+08 =  1% of the original kernel matrix.

torch.Size([13547, 2])
We keep 1.78e+06/5.48e+07 =  3% of the original kernel matrix.

torch.Size([25105, 2])
We keep 3.06e+06/1.89e+08 =  1% of the original kernel matrix.

torch.Size([9846, 2])
We keep 5.08e+05/1.57e+07 =  3% of the original kernel matrix.

torch.Size([22139, 2])
We keep 1.98e+06/1.01e+08 =  1% of the original kernel matrix.

torch.Size([74528, 2])
We keep 5.18e+07/2.58e+09 =  2% of the original kernel matrix.

torch.Size([58237, 2])
We keep 1.41e+07/1.30e+09 =  1% of the original kernel matrix.

torch.Size([18065, 2])
We keep 1.74e+06/7.71e+07 =  2% of the original kernel matrix.

torch.Size([29615, 2])
We keep 3.49e+06/2.24e+08 =  1% of the original kernel matrix.

torch.Size([40140, 2])
We keep 1.19e+07/6.32e+08 =  1% of the original kernel matrix.

torch.Size([42941, 2])
We keep 7.74e+06/6.42e+08 =  1% of the original kernel matrix.

torch.Size([100627, 2])
We keep 2.25e+08/4.49e+09 =  5% of the original kernel matrix.

torch.Size([69931, 2])
We keep 1.59e+07/1.71e+09 =  0% of the original kernel matrix.

torch.Size([39579, 2])
We keep 1.21e+07/5.17e+08 =  2% of the original kernel matrix.

torch.Size([44263, 2])
We keep 6.95e+06/5.80e+08 =  1% of the original kernel matrix.

torch.Size([22117, 2])
We keep 1.14e+07/2.59e+08 =  4% of the original kernel matrix.

torch.Size([31913, 2])
We keep 5.73e+06/4.11e+08 =  1% of the original kernel matrix.

torch.Size([13890, 2])
We keep 9.31e+05/3.55e+07 =  2% of the original kernel matrix.

torch.Size([25890, 2])
We keep 2.62e+06/1.52e+08 =  1% of the original kernel matrix.

torch.Size([130797, 2])
We keep 4.70e+08/2.50e+10 =  1% of the original kernel matrix.

torch.Size([72869, 2])
We keep 3.78e+07/4.04e+09 =  0% of the original kernel matrix.

torch.Size([46076, 2])
We keep 1.07e+08/1.14e+09 =  9% of the original kernel matrix.

torch.Size([46712, 2])
We keep 1.02e+07/8.64e+08 =  1% of the original kernel matrix.

torch.Size([42058, 2])
We keep 4.39e+07/8.87e+08 =  4% of the original kernel matrix.

torch.Size([44699, 2])
We keep 9.24e+06/7.60e+08 =  1% of the original kernel matrix.

torch.Size([21377, 2])
We keep 2.47e+06/1.16e+08 =  2% of the original kernel matrix.

torch.Size([32258, 2])
We keep 4.12e+06/2.75e+08 =  1% of the original kernel matrix.

torch.Size([246726, 2])
We keep 1.14e+09/3.80e+10 =  3% of the original kernel matrix.

torch.Size([109099, 2])
We keep 4.33e+07/4.98e+09 =  0% of the original kernel matrix.

torch.Size([14957, 2])
We keep 1.42e+06/4.76e+07 =  2% of the original kernel matrix.

torch.Size([26774, 2])
We keep 2.96e+06/1.76e+08 =  1% of the original kernel matrix.

torch.Size([325000, 2])
We keep 6.73e+08/5.26e+10 =  1% of the original kernel matrix.

torch.Size([125905, 2])
We keep 5.25e+07/5.85e+09 =  0% of the original kernel matrix.

torch.Size([12679, 2])
We keep 1.70e+06/4.55e+07 =  3% of the original kernel matrix.

torch.Size([24845, 2])
We keep 2.86e+06/1.72e+08 =  1% of the original kernel matrix.

torch.Size([34217, 2])
We keep 2.80e+07/8.77e+08 =  3% of the original kernel matrix.

torch.Size([37935, 2])
We keep 9.25e+06/7.56e+08 =  1% of the original kernel matrix.

torch.Size([25358, 2])
We keep 4.27e+06/1.69e+08 =  2% of the original kernel matrix.

torch.Size([35293, 2])
We keep 4.63e+06/3.32e+08 =  1% of the original kernel matrix.

torch.Size([246104, 2])
We keep 1.03e+09/4.14e+10 =  2% of the original kernel matrix.

torch.Size([106446, 2])
We keep 4.73e+07/5.19e+09 =  0% of the original kernel matrix.

torch.Size([74558, 2])
We keep 2.44e+07/2.36e+09 =  1% of the original kernel matrix.

torch.Size([59970, 2])
We keep 1.35e+07/1.24e+09 =  1% of the original kernel matrix.

torch.Size([11467, 2])
We keep 7.47e+05/2.33e+07 =  3% of the original kernel matrix.

torch.Size([23733, 2])
We keep 2.27e+06/1.23e+08 =  1% of the original kernel matrix.

torch.Size([251007, 2])
We keep 1.46e+08/2.00e+10 =  0% of the original kernel matrix.

torch.Size([112939, 2])
We keep 3.39e+07/3.61e+09 =  0% of the original kernel matrix.

torch.Size([297524, 2])
We keep 2.06e+08/2.79e+10 =  0% of the original kernel matrix.

torch.Size([124205, 2])
We keep 3.94e+07/4.26e+09 =  0% of the original kernel matrix.

torch.Size([9628, 2])
We keep 5.63e+05/1.69e+07 =  3% of the original kernel matrix.

torch.Size([21888, 2])
We keep 2.00e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([138648, 2])
We keep 1.37e+08/6.73e+09 =  2% of the original kernel matrix.

torch.Size([81808, 2])
We keep 2.15e+07/2.09e+09 =  1% of the original kernel matrix.

torch.Size([213692, 2])
We keep 1.31e+08/1.64e+10 =  0% of the original kernel matrix.

torch.Size([103662, 2])
We keep 3.11e+07/3.27e+09 =  0% of the original kernel matrix.

torch.Size([752521, 2])
We keep 1.09e+09/1.62e+11 =  0% of the original kernel matrix.

torch.Size([198224, 2])
We keep 8.55e+07/1.03e+10 =  0% of the original kernel matrix.

torch.Size([72084, 2])
We keep 2.19e+08/2.54e+09 =  8% of the original kernel matrix.

torch.Size([58563, 2])
We keep 1.40e+07/1.29e+09 =  1% of the original kernel matrix.

torch.Size([5377, 2])
We keep 3.10e+05/5.29e+06 =  5% of the original kernel matrix.

torch.Size([17150, 2])
We keep 1.28e+06/5.87e+07 =  2% of the original kernel matrix.

torch.Size([23329, 2])
We keep 2.41e+06/1.24e+08 =  1% of the original kernel matrix.

torch.Size([33697, 2])
We keep 4.21e+06/2.84e+08 =  1% of the original kernel matrix.

torch.Size([10071, 2])
We keep 1.18e+06/2.18e+07 =  5% of the original kernel matrix.

torch.Size([22575, 2])
We keep 2.14e+06/1.19e+08 =  1% of the original kernel matrix.

torch.Size([47612, 2])
We keep 1.13e+07/7.40e+08 =  1% of the original kernel matrix.

torch.Size([48810, 2])
We keep 8.56e+06/6.94e+08 =  1% of the original kernel matrix.

torch.Size([40441, 2])
We keep 1.77e+07/5.65e+08 =  3% of the original kernel matrix.

torch.Size([45654, 2])
We keep 7.78e+06/6.07e+08 =  1% of the original kernel matrix.

torch.Size([6770, 2])
We keep 2.59e+05/6.69e+06 =  3% of the original kernel matrix.

torch.Size([19126, 2])
We keep 1.46e+06/6.60e+07 =  2% of the original kernel matrix.

torch.Size([161935, 2])
We keep 1.08e+08/7.92e+09 =  1% of the original kernel matrix.

torch.Size([88815, 2])
We keep 2.29e+07/2.27e+09 =  1% of the original kernel matrix.

torch.Size([332290, 2])
We keep 3.17e+08/3.99e+10 =  0% of the original kernel matrix.

torch.Size([133088, 2])
We keep 4.69e+07/5.10e+09 =  0% of the original kernel matrix.

torch.Size([5601, 2])
We keep 2.51e+05/5.14e+06 =  4% of the original kernel matrix.

torch.Size([17572, 2])
We keep 1.30e+06/5.79e+07 =  2% of the original kernel matrix.

torch.Size([15528, 2])
We keep 1.67e+06/5.66e+07 =  2% of the original kernel matrix.

torch.Size([27332, 2])
We keep 3.18e+06/1.92e+08 =  1% of the original kernel matrix.

torch.Size([31344, 2])
We keep 5.32e+06/3.12e+08 =  1% of the original kernel matrix.

torch.Size([39418, 2])
We keep 6.03e+06/4.51e+08 =  1% of the original kernel matrix.

torch.Size([20121, 2])
We keep 2.16e+06/9.33e+07 =  2% of the original kernel matrix.

torch.Size([31192, 2])
We keep 3.75e+06/2.47e+08 =  1% of the original kernel matrix.

torch.Size([17293, 2])
We keep 3.19e+06/7.12e+07 =  4% of the original kernel matrix.

torch.Size([28899, 2])
We keep 3.42e+06/2.15e+08 =  1% of the original kernel matrix.

torch.Size([19672, 2])
We keep 2.07e+06/8.94e+07 =  2% of the original kernel matrix.

torch.Size([30965, 2])
We keep 3.73e+06/2.41e+08 =  1% of the original kernel matrix.

torch.Size([12586, 2])
We keep 8.13e+05/2.88e+07 =  2% of the original kernel matrix.

torch.Size([24717, 2])
We keep 2.43e+06/1.37e+08 =  1% of the original kernel matrix.

torch.Size([44393, 2])
We keep 2.47e+07/8.58e+08 =  2% of the original kernel matrix.

torch.Size([45783, 2])
We keep 8.92e+06/7.48e+08 =  1% of the original kernel matrix.

torch.Size([54143, 2])
We keep 1.14e+07/9.43e+08 =  1% of the original kernel matrix.

torch.Size([52387, 2])
We keep 9.36e+06/7.84e+08 =  1% of the original kernel matrix.

torch.Size([42090, 2])
We keep 1.05e+07/5.69e+08 =  1% of the original kernel matrix.

torch.Size([46682, 2])
We keep 7.70e+06/6.09e+08 =  1% of the original kernel matrix.

torch.Size([80225, 2])
We keep 4.74e+07/2.58e+09 =  1% of the original kernel matrix.

torch.Size([61680, 2])
We keep 1.44e+07/1.30e+09 =  1% of the original kernel matrix.

torch.Size([16100, 2])
We keep 2.19e+06/7.60e+07 =  2% of the original kernel matrix.

torch.Size([27527, 2])
We keep 3.56e+06/2.23e+08 =  1% of the original kernel matrix.

torch.Size([893876, 2])
We keep 7.09e+09/2.40e+11 =  2% of the original kernel matrix.

torch.Size([219728, 2])
We keep 1.05e+08/1.25e+10 =  0% of the original kernel matrix.

torch.Size([15779, 2])
We keep 1.51e+06/5.03e+07 =  2% of the original kernel matrix.

torch.Size([27553, 2])
We keep 3.01e+06/1.81e+08 =  1% of the original kernel matrix.

torch.Size([128085, 2])
We keep 5.35e+07/5.08e+09 =  1% of the original kernel matrix.

torch.Size([78310, 2])
We keep 1.89e+07/1.82e+09 =  1% of the original kernel matrix.

torch.Size([5139, 2])
We keep 1.64e+05/3.63e+06 =  4% of the original kernel matrix.

torch.Size([17033, 2])
We keep 1.16e+06/4.87e+07 =  2% of the original kernel matrix.

torch.Size([12818, 2])
We keep 9.65e+05/3.01e+07 =  3% of the original kernel matrix.

torch.Size([24984, 2])
We keep 2.51e+06/1.40e+08 =  1% of the original kernel matrix.

torch.Size([9755, 2])
We keep 5.58e+05/1.60e+07 =  3% of the original kernel matrix.

torch.Size([21988, 2])
We keep 1.99e+06/1.02e+08 =  1% of the original kernel matrix.

torch.Size([28886, 2])
We keep 1.14e+07/2.39e+08 =  4% of the original kernel matrix.

torch.Size([37921, 2])
We keep 5.07e+06/3.94e+08 =  1% of the original kernel matrix.

torch.Size([9499, 2])
We keep 5.13e+05/1.50e+07 =  3% of the original kernel matrix.

torch.Size([21672, 2])
We keep 1.96e+06/9.90e+07 =  1% of the original kernel matrix.

torch.Size([177289, 2])
We keep 3.17e+08/1.57e+10 =  2% of the original kernel matrix.

torch.Size([92075, 2])
We keep 3.08e+07/3.20e+09 =  0% of the original kernel matrix.

torch.Size([8648, 2])
We keep 4.47e+05/1.20e+07 =  3% of the original kernel matrix.

torch.Size([20844, 2])
We keep 1.78e+06/8.85e+07 =  2% of the original kernel matrix.

torch.Size([10773, 2])
We keep 6.98e+05/2.15e+07 =  3% of the original kernel matrix.

torch.Size([22948, 2])
We keep 2.20e+06/1.18e+08 =  1% of the original kernel matrix.

torch.Size([677521, 2])
We keep 1.41e+09/1.55e+11 =  0% of the original kernel matrix.

torch.Size([185487, 2])
We keep 8.47e+07/1.01e+10 =  0% of the original kernel matrix.

torch.Size([116492, 2])
We keep 7.81e+07/5.12e+09 =  1% of the original kernel matrix.

torch.Size([74138, 2])
We keep 1.92e+07/1.83e+09 =  1% of the original kernel matrix.

torch.Size([79990, 2])
We keep 3.67e+07/2.44e+09 =  1% of the original kernel matrix.

torch.Size([61487, 2])
We keep 1.39e+07/1.26e+09 =  1% of the original kernel matrix.

torch.Size([256730, 2])
We keep 2.55e+08/2.47e+10 =  1% of the original kernel matrix.

torch.Size([114169, 2])
We keep 3.74e+07/4.01e+09 =  0% of the original kernel matrix.

torch.Size([513358, 2])
We keep 7.64e+08/9.70e+10 =  0% of the original kernel matrix.

torch.Size([158806, 2])
We keep 6.91e+07/7.95e+09 =  0% of the original kernel matrix.

torch.Size([11156, 2])
We keep 6.95e+05/2.23e+07 =  3% of the original kernel matrix.

torch.Size([23231, 2])
We keep 2.25e+06/1.21e+08 =  1% of the original kernel matrix.

torch.Size([14170, 2])
We keep 1.08e+06/3.80e+07 =  2% of the original kernel matrix.

torch.Size([26180, 2])
We keep 2.73e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([49127, 2])
We keep 3.11e+07/1.23e+09 =  2% of the original kernel matrix.

torch.Size([47883, 2])
We keep 1.06e+07/8.96e+08 =  1% of the original kernel matrix.

torch.Size([4742, 2])
We keep 1.53e+05/3.23e+06 =  4% of the original kernel matrix.

torch.Size([16434, 2])
We keep 1.15e+06/4.58e+07 =  2% of the original kernel matrix.

torch.Size([14173, 2])
We keep 1.02e+06/3.75e+07 =  2% of the original kernel matrix.

torch.Size([26026, 2])
We keep 2.70e+06/1.56e+08 =  1% of the original kernel matrix.

torch.Size([22761, 2])
We keep 3.54e+06/1.57e+08 =  2% of the original kernel matrix.

torch.Size([33317, 2])
We keep 4.63e+06/3.20e+08 =  1% of the original kernel matrix.

torch.Size([11274, 2])
We keep 9.85e+05/2.68e+07 =  3% of the original kernel matrix.

torch.Size([23479, 2])
We keep 2.41e+06/1.32e+08 =  1% of the original kernel matrix.

torch.Size([14392, 2])
We keep 1.05e+06/3.80e+07 =  2% of the original kernel matrix.

torch.Size([26412, 2])
We keep 2.73e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([6323, 2])
We keep 2.68e+05/6.21e+06 =  4% of the original kernel matrix.

torch.Size([18358, 2])
We keep 1.42e+06/6.36e+07 =  2% of the original kernel matrix.

torch.Size([12571, 2])
We keep 9.61e+05/3.03e+07 =  3% of the original kernel matrix.

torch.Size([24777, 2])
We keep 2.48e+06/1.41e+08 =  1% of the original kernel matrix.

torch.Size([537328, 2])
We keep 1.68e+09/1.12e+11 =  1% of the original kernel matrix.

torch.Size([164804, 2])
We keep 7.26e+07/8.56e+09 =  0% of the original kernel matrix.

torch.Size([28657, 2])
We keep 8.84e+06/3.64e+08 =  2% of the original kernel matrix.

torch.Size([37125, 2])
We keep 6.46e+06/4.87e+08 =  1% of the original kernel matrix.

torch.Size([113697, 2])
We keep 7.54e+07/4.99e+09 =  1% of the original kernel matrix.

torch.Size([73503, 2])
We keep 1.88e+07/1.80e+09 =  1% of the original kernel matrix.

torch.Size([13621, 2])
We keep 2.92e+07/8.11e+07 = 35% of the original kernel matrix.

torch.Size([25616, 2])
We keep 3.04e+06/2.30e+08 =  1% of the original kernel matrix.

torch.Size([9817, 2])
We keep 6.91e+05/1.98e+07 =  3% of the original kernel matrix.

torch.Size([21897, 2])
We keep 2.16e+06/1.14e+08 =  1% of the original kernel matrix.

torch.Size([16373, 2])
We keep 1.80e+06/6.28e+07 =  2% of the original kernel matrix.

torch.Size([27930, 2])
We keep 3.28e+06/2.02e+08 =  1% of the original kernel matrix.

torch.Size([946402, 2])
We keep 3.72e+09/3.09e+11 =  1% of the original kernel matrix.

torch.Size([229292, 2])
We keep 1.13e+08/1.42e+10 =  0% of the original kernel matrix.

torch.Size([976393, 2])
We keep 1.43e+09/2.68e+11 =  0% of the original kernel matrix.

torch.Size([231411, 2])
We keep 1.07e+08/1.32e+10 =  0% of the original kernel matrix.

torch.Size([21163, 2])
We keep 2.10e+06/1.03e+08 =  2% of the original kernel matrix.

torch.Size([32221, 2])
We keep 3.86e+06/2.59e+08 =  1% of the original kernel matrix.

torch.Size([51515, 2])
We keep 1.83e+07/8.68e+08 =  2% of the original kernel matrix.

torch.Size([50776, 2])
We keep 8.98e+06/7.52e+08 =  1% of the original kernel matrix.

torch.Size([7197, 2])
We keep 3.17e+05/8.20e+06 =  3% of the original kernel matrix.

torch.Size([19423, 2])
We keep 1.56e+06/7.31e+07 =  2% of the original kernel matrix.

torch.Size([9439, 2])
We keep 1.09e+06/1.89e+07 =  5% of the original kernel matrix.

torch.Size([21711, 2])
We keep 2.08e+06/1.11e+08 =  1% of the original kernel matrix.

torch.Size([341534, 2])
We keep 3.19e+09/1.07e+11 =  2% of the original kernel matrix.

torch.Size([117825, 2])
We keep 7.20e+07/8.37e+09 =  0% of the original kernel matrix.

torch.Size([37635, 2])
We keep 1.64e+07/4.90e+08 =  3% of the original kernel matrix.

torch.Size([43612, 2])
We keep 6.87e+06/5.65e+08 =  1% of the original kernel matrix.

torch.Size([16997, 2])
We keep 1.95e+06/7.51e+07 =  2% of the original kernel matrix.

torch.Size([28490, 2])
We keep 3.49e+06/2.21e+08 =  1% of the original kernel matrix.

torch.Size([73162, 2])
We keep 3.08e+07/1.97e+09 =  1% of the original kernel matrix.

torch.Size([59297, 2])
We keep 1.26e+07/1.13e+09 =  1% of the original kernel matrix.

torch.Size([783238, 2])
We keep 2.03e+09/2.48e+11 =  0% of the original kernel matrix.

torch.Size([200899, 2])
We keep 1.06e+08/1.27e+10 =  0% of the original kernel matrix.

torch.Size([41058, 2])
We keep 1.24e+07/7.15e+08 =  1% of the original kernel matrix.

torch.Size([44449, 2])
We keep 8.44e+06/6.82e+08 =  1% of the original kernel matrix.

torch.Size([14214, 2])
We keep 1.67e+06/5.15e+07 =  3% of the original kernel matrix.

torch.Size([25941, 2])
We keep 3.05e+06/1.83e+08 =  1% of the original kernel matrix.

torch.Size([31367, 2])
We keep 9.77e+06/3.82e+08 =  2% of the original kernel matrix.

torch.Size([39385, 2])
We keep 6.60e+06/4.99e+08 =  1% of the original kernel matrix.

torch.Size([23067, 2])
We keep 2.45e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([33524, 2])
We keep 4.27e+06/2.87e+08 =  1% of the original kernel matrix.

torch.Size([9491, 2])
We keep 8.81e+05/1.56e+07 =  5% of the original kernel matrix.

torch.Size([21980, 2])
We keep 1.97e+06/1.01e+08 =  1% of the original kernel matrix.

torch.Size([285666, 2])
We keep 3.30e+08/2.99e+10 =  1% of the original kernel matrix.

torch.Size([120957, 2])
We keep 4.03e+07/4.41e+09 =  0% of the original kernel matrix.

torch.Size([31494, 2])
We keep 9.99e+06/3.69e+08 =  2% of the original kernel matrix.

torch.Size([39302, 2])
We keep 6.47e+06/4.90e+08 =  1% of the original kernel matrix.

torch.Size([4503, 2])
We keep 1.38e+05/2.68e+06 =  5% of the original kernel matrix.

torch.Size([16074, 2])
We keep 1.06e+06/4.18e+07 =  2% of the original kernel matrix.

torch.Size([134517, 2])
We keep 5.83e+07/5.19e+09 =  1% of the original kernel matrix.

torch.Size([79804, 2])
We keep 1.88e+07/1.84e+09 =  1% of the original kernel matrix.

torch.Size([30173, 2])
We keep 4.69e+06/2.76e+08 =  1% of the original kernel matrix.

torch.Size([39015, 2])
We keep 5.80e+06/4.24e+08 =  1% of the original kernel matrix.

torch.Size([4532, 2])
We keep 1.44e+05/2.82e+06 =  5% of the original kernel matrix.

torch.Size([16156, 2])
We keep 1.09e+06/4.29e+07 =  2% of the original kernel matrix.

torch.Size([137208, 2])
We keep 1.03e+08/6.84e+09 =  1% of the original kernel matrix.

torch.Size([80930, 2])
We keep 2.12e+07/2.11e+09 =  1% of the original kernel matrix.

torch.Size([299029, 2])
We keep 2.85e+08/3.01e+10 =  0% of the original kernel matrix.

torch.Size([123911, 2])
We keep 4.09e+07/4.43e+09 =  0% of the original kernel matrix.

torch.Size([264918, 2])
We keep 6.37e+08/3.69e+10 =  1% of the original kernel matrix.

torch.Size([115425, 2])
We keep 4.51e+07/4.90e+09 =  0% of the original kernel matrix.

torch.Size([482898, 2])
We keep 1.43e+09/9.26e+10 =  1% of the original kernel matrix.

torch.Size([154646, 2])
We keep 6.76e+07/7.77e+09 =  0% of the original kernel matrix.

torch.Size([372576, 2])
We keep 7.13e+08/6.35e+10 =  1% of the original kernel matrix.

torch.Size([135304, 2])
We keep 5.74e+07/6.43e+09 =  0% of the original kernel matrix.

torch.Size([32674, 2])
We keep 1.00e+07/4.41e+08 =  2% of the original kernel matrix.

torch.Size([40232, 2])
We keep 7.08e+06/5.36e+08 =  1% of the original kernel matrix.

torch.Size([26938, 2])
We keep 9.63e+06/2.22e+08 =  4% of the original kernel matrix.

torch.Size([36348, 2])
We keep 5.19e+06/3.80e+08 =  1% of the original kernel matrix.

torch.Size([302412, 2])
We keep 2.43e+08/2.97e+10 =  0% of the original kernel matrix.

torch.Size([125527, 2])
We keep 4.05e+07/4.40e+09 =  0% of the original kernel matrix.

torch.Size([453054, 2])
We keep 5.17e+08/6.29e+10 =  0% of the original kernel matrix.

torch.Size([154063, 2])
We keep 5.57e+07/6.40e+09 =  0% of the original kernel matrix.

torch.Size([16063, 2])
We keep 1.47e+06/5.47e+07 =  2% of the original kernel matrix.

torch.Size([27845, 2])
We keep 3.11e+06/1.89e+08 =  1% of the original kernel matrix.

torch.Size([93517, 2])
We keep 1.77e+08/4.05e+09 =  4% of the original kernel matrix.

torch.Size([67383, 2])
We keep 1.64e+07/1.62e+09 =  1% of the original kernel matrix.

torch.Size([389040, 2])
We keep 2.71e+09/8.10e+10 =  3% of the original kernel matrix.

torch.Size([137465, 2])
We keep 6.28e+07/7.27e+09 =  0% of the original kernel matrix.

torch.Size([320561, 2])
We keep 5.36e+08/4.25e+10 =  1% of the original kernel matrix.

torch.Size([128189, 2])
We keep 4.80e+07/5.26e+09 =  0% of the original kernel matrix.

torch.Size([207463, 2])
We keep 3.32e+08/2.44e+10 =  1% of the original kernel matrix.

torch.Size([98657, 2])
We keep 3.76e+07/3.98e+09 =  0% of the original kernel matrix.

torch.Size([69543, 2])
We keep 1.64e+08/4.64e+09 =  3% of the original kernel matrix.

torch.Size([52764, 2])
We keep 1.84e+07/1.74e+09 =  1% of the original kernel matrix.

torch.Size([14270, 2])
We keep 1.29e+06/4.19e+07 =  3% of the original kernel matrix.

torch.Size([26086, 2])
We keep 2.83e+06/1.65e+08 =  1% of the original kernel matrix.

torch.Size([9003, 2])
We keep 6.62e+05/1.69e+07 =  3% of the original kernel matrix.

torch.Size([20860, 2])
We keep 2.03e+06/1.05e+08 =  1% of the original kernel matrix.

torch.Size([32670, 2])
We keep 2.76e+07/4.69e+08 =  5% of the original kernel matrix.

torch.Size([39685, 2])
We keep 7.17e+06/5.53e+08 =  1% of the original kernel matrix.

torch.Size([155883, 2])
We keep 6.34e+07/6.95e+09 =  0% of the original kernel matrix.

torch.Size([86749, 2])
We keep 2.15e+07/2.13e+09 =  1% of the original kernel matrix.

torch.Size([141311, 2])
We keep 5.93e+07/6.11e+09 =  0% of the original kernel matrix.

torch.Size([82682, 2])
We keep 2.03e+07/2.00e+09 =  1% of the original kernel matrix.

torch.Size([750173, 2])
We keep 2.54e+09/2.65e+11 =  0% of the original kernel matrix.

torch.Size([194713, 2])
We keep 1.08e+08/1.32e+10 =  0% of the original kernel matrix.

torch.Size([207136, 2])
We keep 2.47e+08/1.65e+10 =  1% of the original kernel matrix.

torch.Size([101482, 2])
We keep 3.11e+07/3.27e+09 =  0% of the original kernel matrix.

torch.Size([161050, 2])
We keep 2.56e+08/1.05e+10 =  2% of the original kernel matrix.

torch.Size([88641, 2])
We keep 2.52e+07/2.61e+09 =  0% of the original kernel matrix.

torch.Size([28473, 2])
We keep 5.15e+06/3.16e+08 =  1% of the original kernel matrix.

torch.Size([37054, 2])
We keep 6.02e+06/4.54e+08 =  1% of the original kernel matrix.

torch.Size([283518, 2])
We keep 2.92e+08/2.68e+10 =  1% of the original kernel matrix.

torch.Size([120860, 2])
We keep 3.90e+07/4.18e+09 =  0% of the original kernel matrix.

torch.Size([8527, 2])
We keep 6.55e+05/1.63e+07 =  4% of the original kernel matrix.

torch.Size([20304, 2])
We keep 2.02e+06/1.03e+08 =  1% of the original kernel matrix.

torch.Size([16338, 2])
We keep 1.68e+06/6.45e+07 =  2% of the original kernel matrix.

torch.Size([27974, 2])
We keep 3.27e+06/2.05e+08 =  1% of the original kernel matrix.

torch.Size([339972, 2])
We keep 3.41e+08/3.81e+10 =  0% of the original kernel matrix.

torch.Size([132250, 2])
We keep 4.49e+07/4.98e+09 =  0% of the original kernel matrix.

torch.Size([13247, 2])
We keep 9.53e+05/3.28e+07 =  2% of the original kernel matrix.

torch.Size([25318, 2])
We keep 2.57e+06/1.46e+08 =  1% of the original kernel matrix.

torch.Size([11435, 2])
We keep 7.73e+05/2.43e+07 =  3% of the original kernel matrix.

torch.Size([23558, 2])
We keep 2.32e+06/1.26e+08 =  1% of the original kernel matrix.

torch.Size([30323, 2])
We keep 5.10e+06/3.08e+08 =  1% of the original kernel matrix.

torch.Size([38585, 2])
We keep 5.90e+06/4.48e+08 =  1% of the original kernel matrix.

torch.Size([645271, 2])
We keep 3.38e+09/2.55e+11 =  1% of the original kernel matrix.

torch.Size([173857, 2])
We keep 1.07e+08/1.29e+10 =  0% of the original kernel matrix.

torch.Size([55474, 2])
We keep 5.76e+07/1.20e+09 =  4% of the original kernel matrix.

torch.Size([51556, 2])
We keep 1.03e+07/8.84e+08 =  1% of the original kernel matrix.

torch.Size([223068, 2])
We keep 2.45e+08/1.89e+10 =  1% of the original kernel matrix.

torch.Size([105682, 2])
We keep 3.30e+07/3.51e+09 =  0% of the original kernel matrix.

torch.Size([6150, 2])
We keep 3.68e+05/6.76e+06 =  5% of the original kernel matrix.

torch.Size([18028, 2])
We keep 1.45e+06/6.64e+07 =  2% of the original kernel matrix.

torch.Size([9349, 2])
We keep 5.26e+05/1.46e+07 =  3% of the original kernel matrix.

torch.Size([21676, 2])
We keep 1.92e+06/9.75e+07 =  1% of the original kernel matrix.

torch.Size([11836, 2])
We keep 9.59e+05/3.04e+07 =  3% of the original kernel matrix.

torch.Size([23708, 2])
We keep 2.51e+06/1.41e+08 =  1% of the original kernel matrix.

torch.Size([12783, 2])
We keep 2.15e+06/3.80e+07 =  5% of the original kernel matrix.

torch.Size([24985, 2])
We keep 2.69e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([57896, 2])
We keep 1.65e+07/1.07e+09 =  1% of the original kernel matrix.

torch.Size([53623, 2])
We keep 9.81e+06/8.37e+08 =  1% of the original kernel matrix.

torch.Size([58913, 2])
We keep 2.18e+07/1.31e+09 =  1% of the original kernel matrix.

torch.Size([53427, 2])
We keep 1.09e+07/9.24e+08 =  1% of the original kernel matrix.

torch.Size([14440, 2])
We keep 3.58e+06/4.49e+07 =  7% of the original kernel matrix.

torch.Size([26439, 2])
We keep 2.91e+06/1.71e+08 =  1% of the original kernel matrix.

torch.Size([241299, 2])
We keep 2.53e+08/1.96e+10 =  1% of the original kernel matrix.

torch.Size([110130, 2])
We keep 3.39e+07/3.58e+09 =  0% of the original kernel matrix.

torch.Size([6576, 2])
We keep 2.72e+05/6.97e+06 =  3% of the original kernel matrix.

torch.Size([18770, 2])
We keep 1.47e+06/6.74e+07 =  2% of the original kernel matrix.

torch.Size([120711, 2])
We keep 8.91e+07/4.62e+09 =  1% of the original kernel matrix.

torch.Size([75926, 2])
We keep 1.80e+07/1.73e+09 =  1% of the original kernel matrix.

torch.Size([23141, 2])
We keep 6.96e+06/2.00e+08 =  3% of the original kernel matrix.

torch.Size([33361, 2])
We keep 5.08e+06/3.61e+08 =  1% of the original kernel matrix.

torch.Size([115903, 2])
We keep 5.09e+07/3.97e+09 =  1% of the original kernel matrix.

torch.Size([73759, 2])
We keep 1.71e+07/1.61e+09 =  1% of the original kernel matrix.

torch.Size([12481, 2])
We keep 1.36e+06/3.63e+07 =  3% of the original kernel matrix.

torch.Size([24528, 2])
We keep 2.71e+06/1.54e+08 =  1% of the original kernel matrix.

torch.Size([27776, 2])
We keep 5.26e+06/2.30e+08 =  2% of the original kernel matrix.

torch.Size([36971, 2])
We keep 5.27e+06/3.87e+08 =  1% of the original kernel matrix.

torch.Size([22155, 2])
We keep 3.17e+06/1.29e+08 =  2% of the original kernel matrix.

torch.Size([32907, 2])
We keep 4.31e+06/2.90e+08 =  1% of the original kernel matrix.

torch.Size([31343, 2])
We keep 7.11e+06/2.97e+08 =  2% of the original kernel matrix.

torch.Size([39839, 2])
We keep 5.99e+06/4.40e+08 =  1% of the original kernel matrix.

torch.Size([184043, 2])
We keep 1.40e+08/1.27e+10 =  1% of the original kernel matrix.

torch.Size([95562, 2])
We keep 2.83e+07/2.87e+09 =  0% of the original kernel matrix.

torch.Size([524946, 2])
We keep 1.29e+09/1.08e+11 =  1% of the original kernel matrix.

torch.Size([162896, 2])
We keep 7.23e+07/8.39e+09 =  0% of the original kernel matrix.

torch.Size([11919, 2])
We keep 8.40e+05/2.71e+07 =  3% of the original kernel matrix.

torch.Size([24267, 2])
We keep 2.38e+06/1.33e+08 =  1% of the original kernel matrix.

torch.Size([10800, 2])
We keep 9.76e+05/2.55e+07 =  3% of the original kernel matrix.

torch.Size([22979, 2])
We keep 2.32e+06/1.29e+08 =  1% of the original kernel matrix.

torch.Size([157215, 2])
We keep 3.06e+08/1.03e+10 =  2% of the original kernel matrix.

torch.Size([87292, 2])
We keep 2.56e+07/2.59e+09 =  0% of the original kernel matrix.

torch.Size([23130, 2])
We keep 3.11e+06/1.41e+08 =  2% of the original kernel matrix.

torch.Size([33524, 2])
We keep 4.50e+06/3.03e+08 =  1% of the original kernel matrix.

torch.Size([926026, 2])
We keep 1.38e+09/2.47e+11 =  0% of the original kernel matrix.

torch.Size([224620, 2])
We keep 1.04e+08/1.27e+10 =  0% of the original kernel matrix.

torch.Size([4025, 2])
We keep 1.27e+05/2.28e+06 =  5% of the original kernel matrix.

torch.Size([15563, 2])
We keep 1.01e+06/3.85e+07 =  2% of the original kernel matrix.

torch.Size([124617, 2])
We keep 6.92e+07/5.75e+09 =  1% of the original kernel matrix.

torch.Size([76463, 2])
We keep 2.00e+07/1.94e+09 =  1% of the original kernel matrix.

torch.Size([139499, 2])
We keep 5.14e+07/5.54e+09 =  0% of the original kernel matrix.

torch.Size([81291, 2])
We keep 1.94e+07/1.90e+09 =  1% of the original kernel matrix.

torch.Size([10320, 2])
We keep 6.65e+05/1.83e+07 =  3% of the original kernel matrix.

torch.Size([22636, 2])
We keep 2.10e+06/1.09e+08 =  1% of the original kernel matrix.

torch.Size([155946, 2])
We keep 1.83e+08/1.17e+10 =  1% of the original kernel matrix.

torch.Size([85418, 2])
We keep 2.71e+07/2.76e+09 =  0% of the original kernel matrix.

torch.Size([26378, 2])
We keep 8.09e+06/3.49e+08 =  2% of the original kernel matrix.

torch.Size([35156, 2])
We keep 6.44e+06/4.77e+08 =  1% of the original kernel matrix.

torch.Size([1093095, 2])
We keep 3.69e+09/4.52e+11 =  0% of the original kernel matrix.

torch.Size([239553, 2])
We keep 1.38e+08/1.72e+10 =  0% of the original kernel matrix.

torch.Size([21939, 2])
We keep 2.33e+06/1.13e+08 =  2% of the original kernel matrix.

torch.Size([32735, 2])
We keep 4.08e+06/2.71e+08 =  1% of the original kernel matrix.

torch.Size([31522, 2])
We keep 7.19e+06/3.10e+08 =  2% of the original kernel matrix.

torch.Size([39669, 2])
We keep 6.08e+06/4.49e+08 =  1% of the original kernel matrix.

torch.Size([15298, 2])
We keep 3.03e+06/8.44e+07 =  3% of the original kernel matrix.

torch.Size([26759, 2])
We keep 3.69e+06/2.35e+08 =  1% of the original kernel matrix.

torch.Size([10628, 2])
We keep 6.23e+05/1.91e+07 =  3% of the original kernel matrix.

torch.Size([22996, 2])
We keep 2.11e+06/1.12e+08 =  1% of the original kernel matrix.

torch.Size([20104, 2])
We keep 3.02e+06/1.25e+08 =  2% of the original kernel matrix.

torch.Size([31147, 2])
We keep 4.28e+06/2.86e+08 =  1% of the original kernel matrix.

torch.Size([35803, 2])
We keep 6.38e+06/3.91e+08 =  1% of the original kernel matrix.

torch.Size([42089, 2])
We keep 6.33e+06/5.05e+08 =  1% of the original kernel matrix.

torch.Size([10082, 2])
We keep 6.44e+05/1.73e+07 =  3% of the original kernel matrix.

torch.Size([22264, 2])
We keep 1.97e+06/1.06e+08 =  1% of the original kernel matrix.

torch.Size([98091, 2])
We keep 5.61e+07/3.24e+09 =  1% of the original kernel matrix.

torch.Size([68099, 2])
We keep 1.54e+07/1.45e+09 =  1% of the original kernel matrix.

torch.Size([37760, 2])
We keep 6.81e+06/4.60e+08 =  1% of the original kernel matrix.

torch.Size([43717, 2])
We keep 7.09e+06/5.47e+08 =  1% of the original kernel matrix.

torch.Size([9141, 2])
We keep 5.48e+05/1.43e+07 =  3% of the original kernel matrix.

torch.Size([21408, 2])
We keep 1.92e+06/9.65e+07 =  1% of the original kernel matrix.

torch.Size([33912, 2])
We keep 1.02e+07/5.17e+08 =  1% of the original kernel matrix.

torch.Size([40795, 2])
We keep 7.59e+06/5.81e+08 =  1% of the original kernel matrix.

torch.Size([562186, 2])
We keep 2.30e+09/1.69e+11 =  1% of the original kernel matrix.

torch.Size([163594, 2])
We keep 8.87e+07/1.05e+10 =  0% of the original kernel matrix.

torch.Size([118052, 2])
We keep 1.91e+08/9.14e+09 =  2% of the original kernel matrix.

torch.Size([70992, 2])
We keep 2.46e+07/2.44e+09 =  1% of the original kernel matrix.

torch.Size([368808, 2])
We keep 3.40e+08/4.30e+10 =  0% of the original kernel matrix.

torch.Size([139782, 2])
We keep 4.75e+07/5.29e+09 =  0% of the original kernel matrix.

torch.Size([32717, 2])
We keep 8.07e+06/3.15e+08 =  2% of the original kernel matrix.

torch.Size([40511, 2])
We keep 5.88e+06/4.53e+08 =  1% of the original kernel matrix.

torch.Size([24017, 2])
We keep 6.70e+06/2.13e+08 =  3% of the original kernel matrix.

torch.Size([34026, 2])
We keep 5.21e+06/3.73e+08 =  1% of the original kernel matrix.

torch.Size([7581, 2])
We keep 3.25e+05/8.71e+06 =  3% of the original kernel matrix.

torch.Size([19961, 2])
We keep 1.59e+06/7.53e+07 =  2% of the original kernel matrix.

torch.Size([11066, 2])
We keep 1.78e+06/3.18e+07 =  5% of the original kernel matrix.

torch.Size([23303, 2])
We keep 2.48e+06/1.44e+08 =  1% of the original kernel matrix.

torch.Size([287989, 2])
We keep 4.87e+08/2.79e+10 =  1% of the original kernel matrix.

torch.Size([121993, 2])
We keep 3.80e+07/4.27e+09 =  0% of the original kernel matrix.

torch.Size([19606, 2])
We keep 2.11e+06/8.90e+07 =  2% of the original kernel matrix.

torch.Size([30881, 2])
We keep 3.74e+06/2.41e+08 =  1% of the original kernel matrix.

torch.Size([42092, 2])
We keep 1.26e+07/6.45e+08 =  1% of the original kernel matrix.

torch.Size([45158, 2])
We keep 7.97e+06/6.48e+08 =  1% of the original kernel matrix.

torch.Size([44305, 2])
We keep 1.60e+07/8.05e+08 =  1% of the original kernel matrix.

torch.Size([46249, 2])
We keep 8.69e+06/7.24e+08 =  1% of the original kernel matrix.

torch.Size([57680, 2])
We keep 3.68e+07/1.90e+09 =  1% of the original kernel matrix.

torch.Size([51067, 2])
We keep 1.24e+07/1.11e+09 =  1% of the original kernel matrix.

torch.Size([10343, 2])
We keep 7.88e+05/2.04e+07 =  3% of the original kernel matrix.

torch.Size([22575, 2])
We keep 2.14e+06/1.15e+08 =  1% of the original kernel matrix.

torch.Size([7232, 2])
We keep 3.64e+05/9.05e+06 =  4% of the original kernel matrix.

torch.Size([19352, 2])
We keep 1.64e+06/7.68e+07 =  2% of the original kernel matrix.

torch.Size([506295, 2])
We keep 1.51e+09/1.13e+11 =  1% of the original kernel matrix.

torch.Size([157482, 2])
We keep 7.37e+07/8.60e+09 =  0% of the original kernel matrix.

torch.Size([40046, 2])
We keep 1.11e+07/5.67e+08 =  1% of the original kernel matrix.

torch.Size([45472, 2])
We keep 7.83e+06/6.08e+08 =  1% of the original kernel matrix.

torch.Size([24251, 2])
We keep 3.11e+07/2.77e+08 = 11% of the original kernel matrix.

torch.Size([33867, 2])
We keep 5.77e+06/4.25e+08 =  1% of the original kernel matrix.

torch.Size([26504, 2])
We keep 1.03e+07/2.22e+08 =  4% of the original kernel matrix.

torch.Size([36178, 2])
We keep 5.15e+06/3.80e+08 =  1% of the original kernel matrix.

torch.Size([199782, 2])
We keep 8.67e+08/1.91e+10 =  4% of the original kernel matrix.

torch.Size([99330, 2])
We keep 3.40e+07/3.53e+09 =  0% of the original kernel matrix.

torch.Size([311021, 2])
We keep 7.92e+08/3.90e+10 =  2% of the original kernel matrix.

torch.Size([127559, 2])
We keep 4.62e+07/5.04e+09 =  0% of the original kernel matrix.

torch.Size([413543, 2])
We keep 8.42e+08/8.23e+10 =  1% of the original kernel matrix.

torch.Size([139401, 2])
We keep 6.42e+07/7.32e+09 =  0% of the original kernel matrix.

torch.Size([180989, 2])
We keep 1.64e+08/1.07e+10 =  1% of the original kernel matrix.

torch.Size([94508, 2])
We keep 2.60e+07/2.64e+09 =  0% of the original kernel matrix.

torch.Size([19787, 2])
We keep 1.98e+07/1.28e+08 = 15% of the original kernel matrix.

torch.Size([31008, 2])
We keep 4.24e+06/2.89e+08 =  1% of the original kernel matrix.

torch.Size([81900, 2])
We keep 3.23e+07/2.25e+09 =  1% of the original kernel matrix.

torch.Size([63146, 2])
We keep 1.31e+07/1.21e+09 =  1% of the original kernel matrix.

torch.Size([58302, 2])
We keep 6.63e+07/2.29e+09 =  2% of the original kernel matrix.

torch.Size([49599, 2])
We keep 1.39e+07/1.22e+09 =  1% of the original kernel matrix.

torch.Size([16424, 2])
We keep 1.37e+06/5.46e+07 =  2% of the original kernel matrix.

torch.Size([28042, 2])
We keep 3.09e+06/1.89e+08 =  1% of the original kernel matrix.

torch.Size([27834, 2])
We keep 5.82e+06/2.58e+08 =  2% of the original kernel matrix.

torch.Size([36754, 2])
We keep 5.53e+06/4.10e+08 =  1% of the original kernel matrix.

torch.Size([13082, 2])
We keep 9.26e+05/3.35e+07 =  2% of the original kernel matrix.

torch.Size([25236, 2])
We keep 2.56e+06/1.48e+08 =  1% of the original kernel matrix.

torch.Size([31992, 2])
We keep 2.07e+07/3.83e+08 =  5% of the original kernel matrix.

torch.Size([39441, 2])
We keep 6.59e+06/5.00e+08 =  1% of the original kernel matrix.

torch.Size([15508, 2])
We keep 1.83e+06/6.44e+07 =  2% of the original kernel matrix.

torch.Size([27044, 2])
We keep 3.27e+06/2.05e+08 =  1% of the original kernel matrix.

torch.Size([3930, 2])
We keep 9.50e+04/1.97e+06 =  4% of the original kernel matrix.

torch.Size([15345, 2])
We keep 9.58e+05/3.58e+07 =  2% of the original kernel matrix.

torch.Size([19881, 2])
We keep 2.13e+06/9.29e+07 =  2% of the original kernel matrix.

torch.Size([30935, 2])
We keep 3.77e+06/2.46e+08 =  1% of the original kernel matrix.

torch.Size([14468, 2])
We keep 2.87e+06/6.95e+07 =  4% of the original kernel matrix.

torch.Size([26239, 2])
We keep 3.31e+06/2.13e+08 =  1% of the original kernel matrix.

torch.Size([53987, 2])
We keep 7.02e+07/2.03e+09 =  3% of the original kernel matrix.

torch.Size([49820, 2])
We keep 1.29e+07/1.15e+09 =  1% of the original kernel matrix.

torch.Size([15113, 2])
We keep 1.82e+06/6.00e+07 =  3% of the original kernel matrix.

torch.Size([26805, 2])
We keep 3.22e+06/1.98e+08 =  1% of the original kernel matrix.

torch.Size([61021, 2])
We keep 2.55e+07/1.28e+09 =  1% of the original kernel matrix.

torch.Size([54626, 2])
We keep 1.07e+07/9.14e+08 =  1% of the original kernel matrix.

torch.Size([16967, 2])
We keep 2.19e+07/1.29e+08 = 16% of the original kernel matrix.

torch.Size([28162, 2])
We keep 4.23e+06/2.90e+08 =  1% of the original kernel matrix.

torch.Size([31836, 2])
We keep 7.86e+06/3.56e+08 =  2% of the original kernel matrix.

torch.Size([39393, 2])
We keep 6.33e+06/4.82e+08 =  1% of the original kernel matrix.

torch.Size([12089, 2])
We keep 1.02e+06/3.08e+07 =  3% of the original kernel matrix.

torch.Size([24135, 2])
We keep 2.54e+06/1.42e+08 =  1% of the original kernel matrix.

torch.Size([22220, 2])
We keep 2.76e+06/1.30e+08 =  2% of the original kernel matrix.

torch.Size([32883, 2])
We keep 4.33e+06/2.91e+08 =  1% of the original kernel matrix.

torch.Size([32502, 2])
We keep 4.99e+06/2.95e+08 =  1% of the original kernel matrix.

torch.Size([40597, 2])
We keep 5.83e+06/4.38e+08 =  1% of the original kernel matrix.

torch.Size([265869, 2])
We keep 3.07e+08/2.48e+10 =  1% of the original kernel matrix.

torch.Size([116383, 2])
We keep 3.71e+07/4.02e+09 =  0% of the original kernel matrix.

torch.Size([13864, 2])
We keep 1.05e+06/3.65e+07 =  2% of the original kernel matrix.

torch.Size([25865, 2])
We keep 2.67e+06/1.54e+08 =  1% of the original kernel matrix.

torch.Size([5812, 2])
We keep 2.47e+05/5.38e+06 =  4% of the original kernel matrix.

torch.Size([17718, 2])
We keep 1.35e+06/5.92e+07 =  2% of the original kernel matrix.

torch.Size([12834, 2])
We keep 1.51e+06/4.14e+07 =  3% of the original kernel matrix.

torch.Size([24627, 2])
We keep 2.83e+06/1.64e+08 =  1% of the original kernel matrix.

torch.Size([256618, 2])
We keep 5.66e+08/2.92e+10 =  1% of the original kernel matrix.

torch.Size([114079, 2])
We keep 3.99e+07/4.36e+09 =  0% of the original kernel matrix.

torch.Size([965869, 2])
We keep 2.99e+09/2.99e+11 =  0% of the original kernel matrix.

torch.Size([229884, 2])
We keep 1.14e+08/1.40e+10 =  0% of the original kernel matrix.

torch.Size([22183, 2])
We keep 5.39e+06/2.08e+08 =  2% of the original kernel matrix.

torch.Size([32508, 2])
We keep 5.19e+06/3.68e+08 =  1% of the original kernel matrix.

torch.Size([18156, 2])
We keep 1.97e+06/7.74e+07 =  2% of the original kernel matrix.

torch.Size([29443, 2])
We keep 3.55e+06/2.25e+08 =  1% of the original kernel matrix.

torch.Size([36268, 2])
We keep 1.38e+07/6.32e+08 =  2% of the original kernel matrix.

torch.Size([40254, 2])
We keep 7.64e+06/6.42e+08 =  1% of the original kernel matrix.

torch.Size([286188, 2])
We keep 1.88e+08/2.56e+10 =  0% of the original kernel matrix.

torch.Size([121160, 2])
We keep 3.80e+07/4.08e+09 =  0% of the original kernel matrix.

torch.Size([7314, 2])
We keep 3.14e+05/8.38e+06 =  3% of the original kernel matrix.

torch.Size([19493, 2])
We keep 1.59e+06/7.39e+07 =  2% of the original kernel matrix.

torch.Size([16254, 2])
We keep 2.10e+06/6.95e+07 =  3% of the original kernel matrix.

torch.Size([28103, 2])
We keep 3.34e+06/2.13e+08 =  1% of the original kernel matrix.

torch.Size([28950, 2])
We keep 3.41e+06/2.20e+08 =  1% of the original kernel matrix.

torch.Size([38224, 2])
We keep 5.23e+06/3.79e+08 =  1% of the original kernel matrix.

torch.Size([104010, 2])
We keep 2.11e+08/8.49e+09 =  2% of the original kernel matrix.

torch.Size([68221, 2])
We keep 2.39e+07/2.35e+09 =  1% of the original kernel matrix.

torch.Size([94735, 2])
We keep 3.24e+08/6.70e+09 =  4% of the original kernel matrix.

torch.Size([66003, 2])
We keep 2.14e+07/2.09e+09 =  1% of the original kernel matrix.

torch.Size([377393, 2])
We keep 4.23e+08/5.17e+10 =  0% of the original kernel matrix.

torch.Size([140099, 2])
We keep 5.22e+07/5.81e+09 =  0% of the original kernel matrix.

torch.Size([18926, 2])
We keep 1.79e+06/7.75e+07 =  2% of the original kernel matrix.

torch.Size([30183, 2])
We keep 3.51e+06/2.25e+08 =  1% of the original kernel matrix.

torch.Size([11107, 2])
We keep 6.16e+05/2.03e+07 =  3% of the original kernel matrix.

torch.Size([23365, 2])
We keep 2.15e+06/1.15e+08 =  1% of the original kernel matrix.

torch.Size([7054, 2])
We keep 2.74e+05/7.45e+06 =  3% of the original kernel matrix.

torch.Size([19321, 2])
We keep 1.52e+06/6.97e+07 =  2% of the original kernel matrix.

torch.Size([73205, 2])
We keep 4.83e+07/2.35e+09 =  2% of the original kernel matrix.

torch.Size([58425, 2])
We keep 1.37e+07/1.24e+09 =  1% of the original kernel matrix.

torch.Size([24024, 2])
We keep 3.18e+06/1.44e+08 =  2% of the original kernel matrix.

torch.Size([34315, 2])
We keep 4.41e+06/3.07e+08 =  1% of the original kernel matrix.

torch.Size([46940, 2])
We keep 3.47e+07/1.15e+09 =  3% of the original kernel matrix.

torch.Size([46706, 2])
We keep 1.01e+07/8.67e+08 =  1% of the original kernel matrix.

torch.Size([281112, 2])
We keep 3.20e+08/2.94e+10 =  1% of the original kernel matrix.

torch.Size([119898, 2])
We keep 4.04e+07/4.37e+09 =  0% of the original kernel matrix.

torch.Size([1232903, 2])
We keep 2.25e+09/4.14e+11 =  0% of the original kernel matrix.

torch.Size([263292, 2])
We keep 1.33e+08/1.64e+10 =  0% of the original kernel matrix.

torch.Size([22688, 2])
We keep 4.11e+06/1.63e+08 =  2% of the original kernel matrix.

torch.Size([33090, 2])
We keep 4.72e+06/3.26e+08 =  1% of the original kernel matrix.

torch.Size([7327, 2])
We keep 3.12e+05/8.41e+06 =  3% of the original kernel matrix.

torch.Size([19544, 2])
We keep 1.59e+06/7.40e+07 =  2% of the original kernel matrix.

torch.Size([20678, 2])
We keep 2.32e+06/1.04e+08 =  2% of the original kernel matrix.

torch.Size([31809, 2])
We keep 3.95e+06/2.61e+08 =  1% of the original kernel matrix.

torch.Size([159271, 2])
We keep 3.76e+08/8.61e+09 =  4% of the original kernel matrix.

torch.Size([88525, 2])
We keep 2.36e+07/2.37e+09 =  0% of the original kernel matrix.

torch.Size([64094, 2])
We keep 2.16e+07/1.29e+09 =  1% of the original kernel matrix.

torch.Size([56101, 2])
We keep 1.07e+07/9.16e+08 =  1% of the original kernel matrix.

torch.Size([5932, 2])
We keep 4.04e+05/5.71e+06 =  7% of the original kernel matrix.

torch.Size([17943, 2])
We keep 1.39e+06/6.10e+07 =  2% of the original kernel matrix.

torch.Size([11921, 2])
We keep 9.58e+05/2.58e+07 =  3% of the original kernel matrix.

torch.Size([24062, 2])
We keep 2.37e+06/1.30e+08 =  1% of the original kernel matrix.

torch.Size([36440, 2])
We keep 1.19e+07/4.29e+08 =  2% of the original kernel matrix.

torch.Size([42610, 2])
We keep 6.69e+06/5.28e+08 =  1% of the original kernel matrix.

torch.Size([5417, 2])
We keep 1.90e+05/4.31e+06 =  4% of the original kernel matrix.

torch.Size([17371, 2])
We keep 1.25e+06/5.30e+07 =  2% of the original kernel matrix.

torch.Size([72499, 2])
We keep 7.65e+07/3.45e+09 =  2% of the original kernel matrix.

torch.Size([56041, 2])
We keep 1.61e+07/1.50e+09 =  1% of the original kernel matrix.

torch.Size([14049, 2])
We keep 1.07e+06/3.79e+07 =  2% of the original kernel matrix.

torch.Size([26035, 2])
We keep 2.72e+06/1.57e+08 =  1% of the original kernel matrix.

torch.Size([37137, 2])
We keep 5.57e+06/3.96e+08 =  1% of the original kernel matrix.

torch.Size([43521, 2])
We keep 6.62e+06/5.08e+08 =  1% of the original kernel matrix.

torch.Size([13845, 2])
We keep 1.34e+06/4.38e+07 =  3% of the original kernel matrix.

torch.Size([25664, 2])
We keep 2.87e+06/1.69e+08 =  1% of the original kernel matrix.

torch.Size([13413, 2])
We keep 8.54e+05/3.09e+07 =  2% of the original kernel matrix.

torch.Size([25428, 2])
We keep 2.51e+06/1.42e+08 =  1% of the original kernel matrix.

torch.Size([7192, 2])
We keep 3.25e+05/8.06e+06 =  4% of the original kernel matrix.

torch.Size([19348, 2])
We keep 1.57e+06/7.25e+07 =  2% of the original kernel matrix.

torch.Size([301149, 2])
We keep 2.46e+08/2.90e+10 =  0% of the original kernel matrix.

torch.Size([124723, 2])
We keep 3.98e+07/4.34e+09 =  0% of the original kernel matrix.

torch.Size([708834, 2])
We keep 1.15e+09/1.44e+11 =  0% of the original kernel matrix.

torch.Size([192075, 2])
We keep 8.23e+07/9.70e+09 =  0% of the original kernel matrix.

torch.Size([205696, 2])
We keep 3.38e+08/1.91e+10 =  1% of the original kernel matrix.

torch.Size([101277, 2])
We keep 3.36e+07/3.53e+09 =  0% of the original kernel matrix.

torch.Size([244826, 2])
We keep 1.06e+09/2.76e+10 =  3% of the original kernel matrix.

torch.Size([110310, 2])
We keep 3.86e+07/4.24e+09 =  0% of the original kernel matrix.

torch.Size([54276, 2])
We keep 1.19e+07/9.15e+08 =  1% of the original kernel matrix.

torch.Size([52238, 2])
We keep 9.29e+06/7.72e+08 =  1% of the original kernel matrix.

torch.Size([16512, 2])
We keep 2.01e+06/6.16e+07 =  3% of the original kernel matrix.

torch.Size([28275, 2])
We keep 3.26e+06/2.00e+08 =  1% of the original kernel matrix.

torch.Size([22675, 2])
We keep 3.23e+06/1.43e+08 =  2% of the original kernel matrix.

torch.Size([33271, 2])
We keep 4.51e+06/3.05e+08 =  1% of the original kernel matrix.

torch.Size([259907, 2])
We keep 1.82e+08/2.11e+10 =  0% of the original kernel matrix.

torch.Size([114519, 2])
We keep 3.50e+07/3.71e+09 =  0% of the original kernel matrix.

torch.Size([86771, 2])
We keep 1.68e+08/3.54e+09 =  4% of the original kernel matrix.

torch.Size([63513, 2])
We keep 1.61e+07/1.52e+09 =  1% of the original kernel matrix.

torch.Size([101641, 2])
We keep 1.65e+08/4.41e+09 =  3% of the original kernel matrix.

torch.Size([69053, 2])
We keep 1.77e+07/1.69e+09 =  1% of the original kernel matrix.

torch.Size([24958, 2])
We keep 4.76e+06/2.09e+08 =  2% of the original kernel matrix.

torch.Size([35040, 2])
We keep 5.22e+06/3.69e+08 =  1% of the original kernel matrix.

torch.Size([1918968, 2])
We keep 7.31e+09/1.09e+12 =  0% of the original kernel matrix.

torch.Size([324232, 2])
We keep 2.09e+08/2.67e+10 =  0% of the original kernel matrix.

torch.Size([31767, 2])
We keep 7.04e+06/3.01e+08 =  2% of the original kernel matrix.

torch.Size([39964, 2])
We keep 5.94e+06/4.43e+08 =  1% of the original kernel matrix.

torch.Size([108168, 2])
We keep 5.94e+07/4.61e+09 =  1% of the original kernel matrix.

torch.Size([70939, 2])
We keep 1.83e+07/1.73e+09 =  1% of the original kernel matrix.

torch.Size([211748, 2])
We keep 1.84e+08/1.66e+10 =  1% of the original kernel matrix.

torch.Size([102935, 2])
We keep 3.11e+07/3.29e+09 =  0% of the original kernel matrix.

torch.Size([80361, 2])
We keep 2.53e+07/1.93e+09 =  1% of the original kernel matrix.

torch.Size([62511, 2])
We keep 1.24e+07/1.12e+09 =  1% of the original kernel matrix.

torch.Size([65219, 2])
We keep 8.02e+07/1.70e+09 =  4% of the original kernel matrix.

torch.Size([56134, 2])
We keep 1.19e+07/1.05e+09 =  1% of the original kernel matrix.

torch.Size([471559, 2])
We keep 1.07e+09/8.90e+10 =  1% of the original kernel matrix.

torch.Size([153407, 2])
We keep 6.67e+07/7.62e+09 =  0% of the original kernel matrix.

torch.Size([71261, 2])
We keep 1.81e+07/1.57e+09 =  1% of the original kernel matrix.

torch.Size([59048, 2])
We keep 1.16e+07/1.01e+09 =  1% of the original kernel matrix.

torch.Size([59263, 2])
We keep 2.44e+07/1.39e+09 =  1% of the original kernel matrix.

torch.Size([53640, 2])
We keep 1.11e+07/9.52e+08 =  1% of the original kernel matrix.

torch.Size([12254, 2])
We keep 1.65e+06/3.30e+07 =  5% of the original kernel matrix.

torch.Size([24546, 2])
We keep 2.48e+06/1.47e+08 =  1% of the original kernel matrix.

torch.Size([74542, 2])
We keep 3.64e+07/1.93e+09 =  1% of the original kernel matrix.

torch.Size([60025, 2])
We keep 1.26e+07/1.12e+09 =  1% of the original kernel matrix.

torch.Size([19287, 2])
We keep 3.07e+06/9.48e+07 =  3% of the original kernel matrix.

torch.Size([30749, 2])
We keep 3.69e+06/2.48e+08 =  1% of the original kernel matrix.

torch.Size([310761, 2])
We keep 5.83e+08/3.23e+10 =  1% of the original kernel matrix.

torch.Size([127119, 2])
We keep 4.25e+07/4.59e+09 =  0% of the original kernel matrix.

torch.Size([2866959, 2])
We keep 1.16e+10/2.02e+12 =  0% of the original kernel matrix.

torch.Size([405277, 2])
We keep 2.76e+08/3.63e+10 =  0% of the original kernel matrix.

torch.Size([205976, 2])
We keep 5.34e+08/1.99e+10 =  2% of the original kernel matrix.

torch.Size([101028, 2])
We keep 3.45e+07/3.60e+09 =  0% of the original kernel matrix.

torch.Size([419201, 2])
We keep 8.76e+08/8.38e+10 =  1% of the original kernel matrix.

torch.Size([140563, 2])
We keep 6.50e+07/7.39e+09 =  0% of the original kernel matrix.

torch.Size([93442, 2])
We keep 2.49e+08/5.03e+09 =  4% of the original kernel matrix.

torch.Size([65423, 2])
We keep 1.92e+07/1.81e+09 =  1% of the original kernel matrix.

torch.Size([51974, 2])
We keep 3.07e+07/1.24e+09 =  2% of the original kernel matrix.

torch.Size([49539, 2])
We keep 1.05e+07/8.99e+08 =  1% of the original kernel matrix.

torch.Size([40113, 2])
We keep 9.67e+06/5.39e+08 =  1% of the original kernel matrix.

torch.Size([44896, 2])
We keep 7.64e+06/5.93e+08 =  1% of the original kernel matrix.

torch.Size([19464, 2])
We keep 3.39e+06/1.22e+08 =  2% of the original kernel matrix.

torch.Size([30449, 2])
We keep 4.24e+06/2.82e+08 =  1% of the original kernel matrix.

torch.Size([87690, 2])
We keep 2.85e+08/5.26e+09 =  5% of the original kernel matrix.

torch.Size([63899, 2])
We keep 1.92e+07/1.85e+09 =  1% of the original kernel matrix.

torch.Size([578450, 2])
We keep 5.74e+08/9.53e+10 =  0% of the original kernel matrix.

torch.Size([172827, 2])
We keep 6.74e+07/7.88e+09 =  0% of the original kernel matrix.

torch.Size([46607, 2])
We keep 3.68e+07/1.72e+09 =  2% of the original kernel matrix.

torch.Size([43942, 2])
We keep 1.22e+07/1.06e+09 =  1% of the original kernel matrix.

torch.Size([873723, 2])
We keep 6.73e+09/4.03e+11 =  1% of the original kernel matrix.

torch.Size([207446, 2])
We keep 1.30e+08/1.62e+10 =  0% of the original kernel matrix.

torch.Size([255113, 2])
We keep 5.80e+08/3.82e+10 =  1% of the original kernel matrix.

torch.Size([111656, 2])
We keep 4.52e+07/4.99e+09 =  0% of the original kernel matrix.

torch.Size([58109, 2])
We keep 1.37e+07/1.07e+09 =  1% of the original kernel matrix.

torch.Size([53707, 2])
We keep 9.82e+06/8.34e+08 =  1% of the original kernel matrix.

torch.Size([7761, 2])
We keep 4.15e+05/1.04e+07 =  4% of the original kernel matrix.

torch.Size([19991, 2])
We keep 1.70e+06/8.21e+07 =  2% of the original kernel matrix.

torch.Size([68505, 2])
We keep 3.69e+07/1.61e+09 =  2% of the original kernel matrix.

torch.Size([58059, 2])
We keep 1.18e+07/1.02e+09 =  1% of the original kernel matrix.

torch.Size([176253, 2])
We keep 8.60e+07/9.24e+09 =  0% of the original kernel matrix.

torch.Size([92967, 2])
We keep 2.43e+07/2.45e+09 =  0% of the original kernel matrix.

torch.Size([10087, 2])
We keep 7.57e+05/2.14e+07 =  3% of the original kernel matrix.

torch.Size([22201, 2])
We keep 2.21e+06/1.18e+08 =  1% of the original kernel matrix.

torch.Size([1011260, 2])
We keep 1.54e+09/2.95e+11 =  0% of the original kernel matrix.

torch.Size([238723, 2])
We keep 1.12e+08/1.39e+10 =  0% of the original kernel matrix.

torch.Size([62743, 2])
We keep 1.03e+08/1.86e+09 =  5% of the original kernel matrix.

torch.Size([55124, 2])
We keep 1.18e+07/1.10e+09 =  1% of the original kernel matrix.

torch.Size([58402, 2])
We keep 2.40e+07/1.37e+09 =  1% of the original kernel matrix.

torch.Size([53036, 2])
We keep 1.09e+07/9.44e+08 =  1% of the original kernel matrix.

torch.Size([15274, 2])
We keep 1.22e+06/4.59e+07 =  2% of the original kernel matrix.

torch.Size([27253, 2])
We keep 2.87e+06/1.73e+08 =  1% of the original kernel matrix.

torch.Size([15057, 2])
We keep 1.21e+06/4.51e+07 =  2% of the original kernel matrix.

torch.Size([26868, 2])
We keep 2.89e+06/1.71e+08 =  1% of the original kernel matrix.

torch.Size([7056, 2])
We keep 3.07e+05/7.82e+06 =  3% of the original kernel matrix.

torch.Size([19319, 2])
We keep 1.53e+06/7.14e+07 =  2% of the original kernel matrix.

torch.Size([13909, 2])
We keep 9.08e+06/6.19e+07 = 14% of the original kernel matrix.

torch.Size([25794, 2])
We keep 3.17e+06/2.01e+08 =  1% of the original kernel matrix.

torch.Size([27359, 2])
We keep 6.28e+06/2.08e+08 =  3% of the original kernel matrix.

torch.Size([36831, 2])
We keep 5.21e+06/3.68e+08 =  1% of the original kernel matrix.

torch.Size([30706, 2])
We keep 9.88e+06/3.18e+08 =  3% of the original kernel matrix.

torch.Size([39005, 2])
We keep 5.95e+06/4.55e+08 =  1% of the original kernel matrix.

Wed Feb 1 07:15:54 EST 2023
